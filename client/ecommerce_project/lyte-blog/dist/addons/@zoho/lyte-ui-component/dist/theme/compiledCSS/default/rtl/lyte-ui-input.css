/* Default theme imported */
/* Loading theme in configuration */
/* Themes of components */
/* Loading custom themes */
/* import theme overrides */
/* import custom css */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/*  Input related CSS BEGINS    */
lyte-input {
  position: relative;
  display: inline-flex;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
}
lyte-input .lyteLabel {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  padding-left: 30px;
  color: #555;
  flex-grow: 1;
}
lyte-input .lyteField {
  flex-grow: 1;
}
lyte-input input,
lyte-input textarea {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  color: #111;
  outline: none;
  box-sizing: border-box;
}
.lyteInputBox .lyteField {
  border: 1px solid #d6d6d6;
  border-radius: 2px;
}
.lyteInputBox input,
lyte-input textarea {
  background: #fff;
  border: 0;
  border-radius: 2px;
  padding: 7px 10px;
  width: 100%;
  display: block;
  box-shadow: none;
}
lyte-input input:disabled {
  background: #f3f3f3;
  cursor: not-allowed;
  color: #999;
}
.ltIconShow.lyteField,
lyte-input[lt-prop-type="search"] .lyteField,
lyte-input[lt-prop-type="textarea"] .lyteField {
  position: relative;
}
lyte-input textarea {
  min-height: 70px;
  resize: both;
}
lyte-input[lt-prop-type="textarea"] .lyteField::after {
  content: '';
  width: 17px;
  height: 17px;
  background: #fff;
  position: absolute;
  left: 0;
  bottom: 0;
  z-index: 5;
  border-radius: 0 0 0 2px;
}
lyte-input.lyteTextareaNoResize .lyteField::after {
  content: none;
}
.lyteTextareaNoResize textarea {
  resize: none;
}
.lyteInputBox .lyteField:hover {
  border: 1px solid #c1c1c1;
}
.lyteInputBox.lyteInputFocus .lyteField {
  border: 1px solid #7fceef;
}
.lyteInputBox input:hover,
lyte-input textarea:hover {
  border: 0;
}
.lyteInputBox input:focus,
lyte-input textarea:focus {
  border: 0;
}
.lyteTextareaResize {
  background: url(../../images/sprite_lyte.svg);
  background-position: -267px -4px;
  width: 13px;
  height: 13px;
  left: 1px;
  bottom: 1px;
  display: inline-block;
  position: absolute;
  cursor: sw-resize;
  opacity: 0.5;
  z-index: 10;
  transform: rotate(90deg);
}
.lyteTextareaResizeHorizontal {
  cursor: ew-resize;
}
.lyteTextareaResizeVertical {
  cursor: ns-resize;
}
.lyteInputBox.lyteInputDisabled .lyteField:hover {
  border: 1px solid #d6d6d6;
}
lyte-input input::placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-input input:-ms-input-placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-input input::-ms-input-placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-input input::-ms-clear {
  display: none;
}
lyte-input textarea::placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-input textarea:-ms-input-placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-input textarea::-ms-input-placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
.lyteInputBox.horizontal {
  align-items: center;
}
.lyteInput.horizontal {
  align-items: flex-end;
}
lyte-input.horizontal .lyteLabel {
  min-width: 40%;
  width: 40%;
  box-sizing: border-box;
}
lyte-input.horizontal .lyteField {
  min-width: 60%;
  width: 60%;
}
lyte-input input[type='number']::-webkit-outer-spin-button,
lyte-input input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
lyte-input input[type='number'] {
  -moz-appearance: textfield;
}
.lyteInput .lyteField {
  border-bottom: 1px solid #d6d6d6;
}
.lyteInput input {
  background: #fff;
  border: 0;
  padding: 6px 10px;
  box-shadow: none;
  width: 100%;
}
.lyteInput.horizontal .lyteLabel {
  border-bottom: 1px solid #d6d6d6;
  padding: 5px 10px 5px 50px;
}
.lyteInput .lyteField:hover {
  border-bottom: 1px solid #c1c1c1;
}
.lyteInput.lyteInputDisabled .lyteField:hover {
  border-bottom: 1px solid #d6d6d6;
}
.lyteInput.lyteInputFocus .lyteField {
  border-bottom: 1px solid #7fceef;
}
lyte-input.vertical {
  flex-direction: column;
  text-align: right;
}
lyte-input.vertical .lyteLabel {
  padding-left: 0;
  margin-bottom: 10px;
}
.lyteInput.vertical .lyteLabel {
  padding: 0;
  margin-bottom: 0;
  border-bottom: 0;
}
.lyteInput.vertical textarea,
.lyteInput.vertical input {
  padding-right: 0;
}
.lyteInput.vertical[lt-prop-type="search"] input,
lyte-input[lt-prop-type="search"] input {
  padding-right: 35px;
}
lyte-input[lt-prop-type="search"] .searchIcon {
  position: absolute;
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -180px -4px;
  width: 15px;
  height: 15px;
  right: 10px;
  top: calc(50% - 8px);
  opacity: 0.6;
  margin: 0;
}
lyte-input[lt-prop-close-icon="true"] input {
  padding-left: 30px;
}
lyte-input .inputCloseIcon {
  position: absolute;
  cursor: pointer;
  padding: 8px;
  z-index: 10;
  opacity: 0.7;
  top: calc(50% - 12px);
  left: 4px;
}
lyte-input .inputCloseIcon:hover {
  opacity: 1;
}
lyte-input .inputCloseIcon::before {
  content: '';
  display: block;
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -54px -2px;
  width: 8px;
  height: 8px;
  transform: scale(1.25);
}
lyte-input.lyteInputDisabled .inputCloseIcon {
  pointer-events: none;
}
.lyteInputCalendar {
  position: absolute;
  z-index: 1060;
  top: -999px;
}
lyte-input[lt-prop-type="datetime"] .lyteField {
  display: flex;
}
lyte-input[lt-prop-type="datetime"] .lyteField input {
  width: 50%;
}
.lyteInputBox[lt-prop-type="datetime"] input:first-child {
  border-radius: 0 2px 2px 0;
  border-left: 1px solid #d6d6d6;
}
.lyteInputDateTimePlaceholder {
  display: flex;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  font-size: 14px;
  color: #a6a6a6;
  align-items: center;
  pointer-events: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
.lyteInputFocus .lyteInputDateTimePlaceholder {
  opacity: 0;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/input .less file
 */
/*  Input related CSS ENDS    */
