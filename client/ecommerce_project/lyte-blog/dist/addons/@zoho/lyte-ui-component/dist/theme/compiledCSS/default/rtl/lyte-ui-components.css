/* Default theme imported */
/* Loading theme in configuration */
/* Themes of components */
/* Loading custom themes */
/* import theme overrides */
/* import custom css */
/* UI Components' variables are prefixed with lyte except for global variables

Eg: lyteDropdownPadding

*/
/* Import Component Variables */
.lytecol-yield {
  display: block;
  width: 100%;
  height: 100%;
}
.lyterow-yield {
  overflow: hidden;
}
/* Loading theme in configuration */
/* rtl files loading */
lyte-text {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
  max-width: 100%;
  display: inline-block;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
lyte-accordion {
  display: block;
  position: relative;
}
lyte-accordion-item {
  margin: 3px;
  border-bottom: 1px solid #e9e9e9;
  display: block;
  background: #fff;
}
lyte-accordion-item:hover {
  border-bottom-color: #ccc;
}
lyte-accordion-header {
  padding: 15px 15px 10px;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #555;
  font-size: 16px;
  text-align: right;
  outline: 0;
  position: relative;
  display: block;
  cursor: pointer;
}
lyte-accordion-header:hover {
  color: #111;
}
.lyteAccordionActive {
  border-bottom-color: #aaa;
}
.lyteAccordionActive lyte-accordion-header {
  color: #2c7bd0;
}
lyte-accordion-body {
  width: 400px;
  padding: 0 15px;
  color: #333;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 14px;
  text-align: right;
  display: block;
  overflow: hidden;
  transition: height ease-out 0.3s, padding ease-out 0.3s;
}
.lyteAccordionActive lyte-accordion-body {
  padding-bottom: 10px;
}
lyte-icon.lyteAccordionArrow {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -42px 0;
  width: 6px;
  height: 10px;
  position: absolute;
  right: 0;
  margin-top: 7px;
  display: inline-block;
  transform: rotate(180deg);
}
.lyteAccordionActive lyte-icon.lyteAccordionArrow {
  background-position: -28px 0px;
  width: 9px;
  height: 7px;
  transform: rotate(0deg);
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/accordion.less file
 */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
.lyte-svg {
  background-image: url(../../images/sprite_lyte.svg);
}
lyte-alert {
  display: none;
}
.alertWrapper {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  text-align: center;
  z-index: 1060;
}
.alertPopup {
  padding: 20px 25px 25px;
  background: #fff;
  border: 1px solid #f7f7f7;
  border-radius: 3px;
  box-shadow: 0px 2px 15px 0px rgba(0, 0, 0, 0.35);
  display: inline-block;
  text-align: right;
  min-width: 350px;
  max-width: 550px;
  transition-duration: 0.3s;
  transition-timing-function: ease-out;
  position: relative;
  z-index: 10;
}
.alertPopup.lyteAlertSlideDown {
  top: -100%;
  transition-property: top;
}
.alertPopup.lyteAlertZoomIn {
  transition-property: opacity, transform;
  opacity: 0;
  transform: scale(0);
}
.alertPopup.lyteAlertZoomIn.alertOpened {
  opacity: 1;
  transform: scale(1);
}
lyte-alert-header,
.alertHeader,
.alertPrimaryMsg {
  font-family: 'LatoBold', 'Open Sans', sans-serif;
  font-size: 18px;
  color: #111;
  margin-bottom: 15px;
  font-weight: normal;
  display: block;
  word-break: break-word;
  overflow-wrap: anywhere;
}
.alertPrimaryMsg {
  margin-bottom: 5px;
  font-size: 15px;
}
lyte-alert-content,
.alertSecondaryMsg {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 14px;
  color: #333;
}
lyte-alert-footer,
.alertFooter {
  text-align: left;
  padding-top: 25px;
  display: block;
}
.alertFooter lyte-button {
  margin-right: 7px;
}
.alertFooter lyte-button:first-of-type {
  margin-right: 0;
}
lyte-alert-footer.left,
.alertFooter.left {
  text-align: right;
}
lyte-alert-footer.center,
.alertFooter.center,
.alertPopup.lyteAlertCenterContent {
  text-align: center;
}
.alertPopup .alertContent {
  display: flex;
  align-items: center;
}
.lyteAlertCenterContent .alertContent {
  justify-content: center;
}
.alertFreezeLayer {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  background: #000;
  opacity: 0;
}
.lyteStatusIcon {
  background: url(../../images/sprite_lyte.svg);
  width: 28px;
  height: 28px;
  margin-left: 10px;
  display: block;
}
.successAlertIcon {
  background-position: -91px -154px;
}
.errorAlertIcon {
  background-position: -131px -154px;
}
.warningAlertIcon {
  background-position: -210px -154px;
}
.infoAlertIcon {
  background-position: -170px -154px;
}
.confirmAlertIcon {
  background-position: -250px -154px;
}
.alertClose {
  background-position: -52px 0px;
  width: 13px;
  height: 13px;
  opacity: 0.5;
  cursor: pointer;
  position: absolute;
  top: 27px;
  left: 23px;
  display: inline-block;
  transform: scale(1.3);
}
.alertClose:hover {
  opacity: 1;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/alert.less file
 */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
/* BUTTON STYLES BEGINS   */
lyte-button {
  display: inline-block;
}
lyte-button button {
  border-radius: 2px;
  font-size: 15px;
  padding: 5px 15px;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  display: inline-block;
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  border-width: 1px;
  border-style: solid;
}
lyte-button button:disabled {
  opacity: 0.5;
  pointer-events: none;
}
/*Specific type*/
.lyteDefaultBtn {
  background: #fff;
  color: #3c3c3c;
  border: 1px solid #c4c4c4;
}
.lyteDefaultBtn:hover {
  border: 1px solid #abaaaa;
}
.lytePrimaryBtn {
  background: #5ba1e5;
  color: #fff;
  border: 1px solid #5ba1e5;
}
.lytePrimaryBtn:hover {
  background: #3c98dd;
  color: #fff;
  border: 1px solid #3c98dd;
}
.lyte-button.lyteSecondary {
  background: #555;
  color: #fff;
  border: 1px solid #555;
}
.lyte-button.lyteSecondary:hover {
  background: #474747;
  color: #fff;
  border: 1px solid #444;
}
.lyteSuccess {
  background: #19bc7d;
  color: #fff;
  border: 1px solid #19bc7d;
}
.lyteSuccess:hover {
  background: #10ab6f;
  border: 1px solid #10ab6f;
}
.lyteDefaultBtn.lyteSuccess {
  background: #fff;
  color: #19bc7d;
  border: 1px solid #19bc7d;
}
.lyteDefaultBtn.lyteSuccess:hover {
  background: #19bc7d;
  color: #fff;
  border: 1px solid #19bc7d;
}
.lyteFailure {
  background: #ec4844;
  color: #fff;
  border: 1px solid #ec4844;
}
.lyteFailure:hover {
  background: #da3e3e;
  border: 1px solid #da3e3e;
}
.lyteDefaultBtn.lyteFailure {
  background: #fff;
  color: #ec4844;
  border: 1px solid #ec4844;
}
.lyteDefaultBtn.lyteFailure:hover {
  background: #ec4844;
  color: #fff;
  border: 1px solid #ec4844;
}
.lyteLg {
  padding: 7px 20px;
  font-size: 15px;
}
.lyteSm {
  padding: 3px 10px;
  font-size: 13px;
}
.lyteExsm {
  padding: 2px 8px;
  font-size: 12px;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/button.less file
 */
/* BUTTON STYLES ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/*  Input related CSS BEGINS    */
lyte-input {
  position: relative;
  display: inline-flex;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
}
lyte-input .lyteLabel {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  padding-left: 30px;
  color: #555;
  flex-grow: 1;
}
lyte-input .lyteField {
  flex-grow: 1;
}
lyte-input input,
lyte-input textarea {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  color: #111;
  outline: none;
  box-sizing: border-box;
}
.lyteInputBox .lyteField {
  border: 1px solid #d6d6d6;
  border-radius: 2px;
}
.lyteInputBox input,
lyte-input textarea {
  background: #fff;
  border: 0;
  border-radius: 2px;
  padding: 7px 10px;
  width: 100%;
  display: block;
  box-shadow: none;
}
lyte-input input:disabled {
  background: #f3f3f3;
  cursor: not-allowed;
  color: #999;
}
.ltIconShow.lyteField,
lyte-input[lt-prop-type="search"] .lyteField,
lyte-input[lt-prop-type="textarea"] .lyteField {
  position: relative;
}
lyte-input textarea {
  min-height: 70px;
  resize: both;
}
lyte-input[lt-prop-type="textarea"] .lyteField::after {
  content: '';
  width: 17px;
  height: 17px;
  background: #fff;
  position: absolute;
  left: 0;
  bottom: 0;
  z-index: 5;
  border-radius: 0 0 0 2px;
}
lyte-input.lyteTextareaNoResize .lyteField::after {
  content: none;
}
.lyteTextareaNoResize textarea {
  resize: none;
}
.lyteInputBox .lyteField:hover {
  border: 1px solid #c1c1c1;
}
.lyteInputBox.lyteInputFocus .lyteField {
  border: 1px solid #7fceef;
}
.lyteInputBox input:hover,
lyte-input textarea:hover {
  border: 0;
}
.lyteInputBox input:focus,
lyte-input textarea:focus {
  border: 0;
}
.lyteTextareaResize {
  background: url(../../images/sprite_lyte.svg);
  background-position: -267px -4px;
  width: 13px;
  height: 13px;
  left: 1px;
  bottom: 1px;
  display: inline-block;
  position: absolute;
  cursor: sw-resize;
  opacity: 0.5;
  z-index: 10;
  transform: rotate(90deg);
}
.lyteTextareaResizeHorizontal {
  cursor: ew-resize;
}
.lyteTextareaResizeVertical {
  cursor: ns-resize;
}
.lyteInputBox.lyteInputDisabled .lyteField:hover {
  border: 1px solid #d6d6d6;
}
lyte-input input::placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-input input:-ms-input-placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-input input::-ms-input-placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-input input::-ms-clear {
  display: none;
}
lyte-input textarea::placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-input textarea:-ms-input-placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-input textarea::-ms-input-placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
.lyteInputBox.horizontal {
  align-items: center;
}
.lyteInput.horizontal {
  align-items: flex-end;
}
lyte-input.horizontal .lyteLabel {
  min-width: 40%;
  width: 40%;
  box-sizing: border-box;
}
lyte-input.horizontal .lyteField {
  min-width: 60%;
  width: 60%;
}
lyte-input input[type='number']::-webkit-outer-spin-button,
lyte-input input[type='number']::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
lyte-input input[type='number'] {
  -moz-appearance: textfield;
}
.lyteInput .lyteField {
  border-bottom: 1px solid #d6d6d6;
}
.lyteInput input {
  background: #fff;
  border: 0;
  padding: 6px 10px;
  box-shadow: none;
  width: 100%;
}
.lyteInput.horizontal .lyteLabel {
  border-bottom: 1px solid #d6d6d6;
  padding: 5px 10px 5px 50px;
}
.lyteInput .lyteField:hover {
  border-bottom: 1px solid #c1c1c1;
}
.lyteInput.lyteInputDisabled .lyteField:hover {
  border-bottom: 1px solid #d6d6d6;
}
.lyteInput.lyteInputFocus .lyteField {
  border-bottom: 1px solid #7fceef;
}
lyte-input.vertical {
  flex-direction: column;
  text-align: right;
}
lyte-input.vertical .lyteLabel {
  padding-left: 0;
  margin-bottom: 10px;
}
.lyteInput.vertical .lyteLabel {
  padding: 0;
  margin-bottom: 0;
  border-bottom: 0;
}
.lyteInput.vertical textarea,
.lyteInput.vertical input {
  padding-right: 0;
}
.lyteInput.vertical[lt-prop-type="search"] input,
lyte-input[lt-prop-type="search"] input {
  padding-right: 35px;
}
lyte-input[lt-prop-type="search"] .searchIcon {
  position: absolute;
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -180px -4px;
  width: 15px;
  height: 15px;
  right: 10px;
  top: calc(50% - 8px);
  opacity: 0.6;
  margin: 0;
}
lyte-input[lt-prop-close-icon="true"] input {
  padding-left: 30px;
}
lyte-input .inputCloseIcon {
  position: absolute;
  cursor: pointer;
  padding: 8px;
  z-index: 10;
  opacity: 0.7;
  top: calc(50% - 12px);
  left: 4px;
}
lyte-input .inputCloseIcon:hover {
  opacity: 1;
}
lyte-input .inputCloseIcon::before {
  content: '';
  display: block;
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -54px -2px;
  width: 8px;
  height: 8px;
  transform: scale(1.25);
}
lyte-input.lyteInputDisabled .inputCloseIcon {
  pointer-events: none;
}
.lyteInputCalendar {
  position: absolute;
  z-index: 1060;
  top: -999px;
}
lyte-input[lt-prop-type="datetime"] .lyteField {
  display: flex;
}
lyte-input[lt-prop-type="datetime"] .lyteField input {
  width: 50%;
}
.lyteInputBox[lt-prop-type="datetime"] input:first-child {
  border-radius: 0 2px 2px 0;
  border-left: 1px solid #d6d6d6;
}
.lyteInputDateTimePlaceholder {
  display: flex;
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  font-size: 14px;
  color: #a6a6a6;
  align-items: center;
  pointer-events: none;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}
.lyteInputFocus .lyteInputDateTimePlaceholder {
  opacity: 0;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/input .less file
 */
/*  Input related CSS ENDS    */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-number {
  position: relative;
  display: inline-flex;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
}
lyte-number .lyteLabel {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  padding-left: 30px;
  color: #555;
  flex-grow: 1;
}
lyte-number .lyteField {
  flex-grow: 1;
}
lyte-number input {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  color: #111;
  outline: none;
  box-sizing: border-box;
}
lyte-number input:disabled {
  background: #f3f3f3;
  cursor: not-allowed;
  color: #999;
}
lyte-number input::placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-number input:-ms-input-placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-number input::-ms-input-placeholder {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #a6a6a6;
}
lyte-number input::-ms-clear {
  display: none;
}
lyte-number.horizontal .lyteLabel {
  min-width: 40%;
  width: 40%;
  box-sizing: border-box;
}
lyte-number.horizontal .lyteField {
  min-width: 60%;
  width: 60%;
}
lyte-number.vertical {
  flex-direction: column;
  text-align: right;
}
lyte-number.vertical .lyteLabel {
  padding-left: 0;
  margin-bottom: 10px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
/*  Navbar related CSS BEGINS */
lyte-nav {
  display: flex;
  background: #edf4f9;
}
lyte-nav lyte-nav-item {
  padding: 10px 20px;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  color: #222;
  cursor: pointer;
}
lyte-nav lyte-nav-item:hover {
  background: #dfeaf5;
}
lyte-nav-item.lyteNavActive,
lyte-nav-item.lyteNavActive:hover {
  background: #5ba1e5;
  color: #fff;
}
lyte-nav[lt-prop-alignment="vertical"] {
  height: 200px;
  overflow: hidden;
  flex-direction: column;
}
.lyteNavDiv {
  display: flex;
  flex-direction: column;
}
lyte-nav lyte-arrow {
  position: relative;
  height: 15px;
  box-shadow: 0 1px 1px 1px rgba(0, 0, 0, 0.1);
  -webkit-user-select: none;
  -webkit-touch-callout: none;
}
.lyteNavDiv + lyte-arrow {
  box-shadow: 0 -1px 1px 1px rgba(0, 0, 0, 0.1);
}
.arrow-down,
.arrow-up {
  position: absolute;
  width: 0;
  height: 0;
  top: 5px;
  left: calc(50% - 5px);
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-bottom: 5px solid #555;
}
.arrow-down {
  top: 4px;
  border-bottom: 0;
  border-top: 5px solid #555;
}
.lyteNavKebabMenu {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -294px -165px;
  width: 17px;
  height: 5px;
}
.lyteNavIconContainer {
  display: inline-flex;
  align-items: center;
  padding: 10px 20px;
  cursor: pointer;
}
.lyteNavIconContainer:hover,
.lyteNavIconContainer.lyteMenuSelected {
  background: #dfeaf5;
}
lyte-nav[lt-prop-alignment="vertical"] .lyteNavDivFullHeight.lyteNavDiv {
  height: 100%;
}
/* import theme overrides - styles */
/* import custom css */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/nav.less file
 */
/*  Navbar related CSS BEGINS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
/*  Checkbox related CSS BEGINS   */
lyte-checkbox {
  color: #333;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  display: inline-block;
  position: relative;
}
lyte-checkbox label {
  display: inline-block;
  cursor: pointer;
  -ms-user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  user-select: none;
}
lyte-checkbox input[type="checkbox"] {
  position: absolute;
  opacity: 0;
  z-index: -1;
}
.lyteCheckBoxDefault::before {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -335px -4px;
  width: 14px;
  height: 14px;
  display: inline-block;
  vertical-align: middle;
  margin-left: 5px;
  border-radius: 2px;
}
lyte-checkbox input[type="checkbox"]:active + .lyteCheckBoxDefault::before,
.lyteCheckBoxDefault:hover::before {
  background-position: -359px -4px;
}
lyte-checkbox input[type="checkbox"]:focus + .lyteCheckBoxDefault::before {
  background-position: -359px -4px;
  box-shadow: 0 0 3px 1px #5aaaf9;
}
lyte-checkbox input[type="checkbox"]:disabled + .lyteCheckBoxDefault:hover::before {
  background-position: -335px -4px;
}
lyte-checkbox input[type="checkbox"]:checked:disabled + .lyteCheckBoxDefault:hover::before,
lyte-checkbox input[type="checkbox"]:checked + .lyteCheckBoxDefault::before {
  background-position: -384px -4px;
}
.lyteCheckDisabled label {
  cursor: not-allowed;
}
.lyteCheckBoxPrimary::before {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -35px -162px;
  width: 14px;
  height: 14px;
  margin-right: 3px;
  display: inline-block;
  vertical-align: middle;
  border-radius: 2px;
  margin-left: 3px;
}
lyte-checkbox input[type="checkbox"]:checked + .lyteCheckBoxPrimary::before {
  background-position: -8px -162px;
  width: 17px;
  margin-right: 0;
}
lyte-checkbox input[type="checkbox"]:focus + .lyteCheckBoxPrimary::before {
  box-shadow: 0 0 3px 1px #b0b0b0;
}
.lyteCheckBoxPrimary span,
.lyteCheckBoxDefault span {
  display: inline-block;
  vertical-align: middle;
  -ms-user-select: auto;
  -moz-user-select: auto;
  -webkit-user-select: auto;
  user-select: auto;
}
lyte-checkbox:hover span {
  color: #111;
}
lyte-checkbox[lt-prop-disabled="true"]:hover span {
  color: #333;
}
.lyteCheckSwitch {
  vertical-align: middle;
  width: 28px;
  height: 16px;
  display: inline-block;
  border-radius: 10px;
  position: relative;
  background: #d3d3d3;
}
.lyteCheckSwitch .on-btn {
  width: 12px;
  height: 12px;
  background: #fff;
  display: inline-block;
  border-radius: 50%;
  position: absolute;
  right: 2px;
  top: calc(50% - 6px);
  left: auto;
  transition: right 200ms ease;
}
input[type="checkbox"].on-off-sw:checked + .lyteCheckSwitch {
  background: #5ba1e5;
}
input[type="checkbox"].on-off-sw:focus + .lyteCheckSwitch {
  box-shadow: 0 0 5px 2px #d3d3d3;
}
input[type="checkbox"].on-off-sw:checked:focus + .lyteCheckSwitch {
  box-shadow: 0 0 5px 2px #5aaaf9;
}
input[type="checkbox"].on-off-sw:checked + .lyteCheckSwitch .on-btn {
  right: 14px;
}
.lyteCheckSwitch + span {
  vertical-align: middle;
  display: inline-block;
  margin-right: 5px;
}
.lyteCheckSliderLabel {
  box-sizing: border-box;
  position: relative;
}
.lyteCheckSlider {
  position: relative;
  display: inline-block;
  height: 1.4rem;
}
.lyteCheckSlider::before {
  content: '';
  display: inline-block;
  position: absolute;
  z-index: 1;
  width: 1.4rem;
  height: 1.4rem;
  background: #fff;
  box-shadow: 0 1px 2px 0 rgba(34, 36, 38, 0.15), 0 0 0 1px rgba(34, 36, 38, 0.15) inset;
  border-radius: 50%;
  right: 0;
  transition: right 200ms ease;
}
input[type="checkbox"]:checked + .lyteCheckSlider::before {
  right: 2.25rem;
}
.lyteCheckSlider::after {
  content: '';
  cursor: pointer;
  display: inline-block;
  position: absolute;
  z-index: 0;
  width: 3.5rem;
  height: 0.2rem;
  background: #b5b1b1;
  top: 0.6rem;
  right: 0;
}
input[type="checkbox"]:checked + .lyteCheckSlider::after {
  background: #000;
}
.lyteCheckSliderText {
  padding-right: 4.25rem;
  vertical-align: middle;
}
.lyteCheckDisabled .lyteCheckSlider::after,
.lyteCheckDisabled .lyteCheckSwitch,
.lyteCheckDisabled .lyteCheckBoxDefault::before,
.lyteCheckDisabled .lyteCheckBoxPrimary::before {
  opacity: 0.5;
  cursor: not-allowed;
}
.lyteCheckDisabled .lyteCheckSlider::before {
  background: #f5f5f5;
}
/* import theme overrides - styles */
/* import custom css */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/checkbox.less file
 */
/*  Checkbox related CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
/*  Calendar related CSS BEGINS     */
lyte-calendar {
  display: inline-block;
}
.lyteCalendarPopup {
  background: #fff;
  z-index: 1060;
  box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.1);
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 14px;
  display: inline-block;
  border: 1px solid #d1d1d1;
}
.lyteCalendarNavigator {
  padding: 15px 20px 10px 20px;
  display: flex;
  align-items: center;
}
.lyteCalMonthDD {
  max-width: 150px;
  width: auto;
}
.lyteCalYearDD {
  width: auto;
}
.lyteCalendarPopup lyte-dropdown lyte-drop-button {
  box-sizing: border-box;
  color: #666;
  padding: 3px 1px 3px 25px;
  border: 0;
}
.lyteCalMonthDD lyte-drop-button {
  font-size: 18px;
}
.lyteCalYearDD lyte-drop-button {
  font-size: 16px;
}
.lyteCalendarPopup lyte-dropdown lyte-icon.dropdown {
  top: calc(50% - 2px);
}
.lyteCalendarPopup lyte-dropdown lyte-drop-button.lyteDropButtonDown,
.lyteCalendarPopup lyte-dropdown lyte-drop-button.lyteDropButtonUp,
.lyteCalendarPopup lyte-dropdown lyte-drop-button:hover {
  color: #111;
  padding: 3px 1px 3px 25px;
  border: 0;
}
.lyteCalendarDropdown lyte-drop-item {
  min-width: 40px;
}
.lyteCalNav {
  width: 20px;
  height: 20px;
  display: inline-block;
  cursor: pointer;
  position: relative;
  order: 2;
  border: 1px solid #999;
  border-radius: 50%;
  transform: rotate(180deg);
}
.lyteCalNav:hover {
  border: 1px solid #333;
}
.lyteCaldLft::before,
.lyteCaldRgt::before {
  content: '';
  position: absolute;
  top: 6px;
  right: 5px;
  width: 10px;
  height: 10px;
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -40px -1px;
  opacity: 0.5;
}
.lyteCaldRgt {
  margin-right: 10px;
}
.lyteCaldLft::before {
  top: 5px;
  transform: rotate(180deg);
}
.lyteCalNav:hover::before {
  opacity: 1;
}
.lyteCalsCalMon {
  flex-grow: 3;
  text-align: right;
  order: 1;
  cursor: default;
  color: #111;
}
.lyteCalsCalMonth {
  font-size: 18px;
}
.lyteCalsCalYear {
  font-size: 16px;
}
.lyteCalTableContainer {
  border-spacing: 8px 5px;
  box-sizing: border-box;
  display: table;
  padding: 0 12px 8px;
  width: 100%;
}
.lyteCalTableRow,
.lyteCalTableRowHeader {
  display: table-row;
}
.lyteCalTableCellHeader {
  color: #777;
  cursor: default;
  display: table-cell;
  font-size: 13px;
  text-transform: uppercase;
  text-align: center;
  padding-bottom: 6px;
}
.lyteCalTableCell {
  border: 1px solid transparent;
  color: #111;
  cursor: pointer;
  font-size: 14px;
  display: table-cell;
  line-height: 28px;
  padding: 0;
  text-align: center;
  width: 30px;
  min-width: 30px;
  height: 30px;
  border-radius: 50%;
}
.lyteCalGray {
  opacity: 0.4;
}
.lyteCalGray:hover,
.lyteCalGray.lyteCalSel {
  opacity: 1;
}
.lyteCalToday {
  background: #fff;
  color: #5ba1e5;
  border: 1px solid #5ba1e5;
}
.lyteCalTableCell:hover,
.lyteCalToday:hover {
  background: #e6f3fd;
}
.lyteCalDisabled.lyteCalSel,
.lyteCalSel,
.lyteCalSel:hover {
  background: #5ba1e5;
  color: #fff;
  border: 1px solid #5ba1e5;
}
.lyteCalBtns .lyteCalCurrentDate {
  padding: 10px;
  border-top: 1px solid #e0e0e0;
  text-align: center;
}
.lyteCalCurrentDate a {
  color: #2c7bd0;
  cursor: pointer;
}
.lyteCalEmpty {
  display: table-cell;
}
.lyteCalendarHidden,
.lyteCalyearNavLft,
.lyteCalyearNavRgt {
  display: none;
}
.lyteCalendarPopup .lyteDummyEventContainer:focus lyte-drop-button,
.lyteCalendarPopup .lyteDummyEventContainer:focus lyte-drop-button:hover,
.lyteCalendarPopup lyte-drop-button.lyteDropButtonUp,
.lyteCalendarPopup lyte-drop-button.lyteDropButtonDown {
  border: 0;
  box-shadow: none;
}
.lyteCalTableRowGroup {
  display: table-row-group;
}
.lyteCalDisabled {
  background: transparent;
  pointer-events: none;
  opacity: 0.5;
}
/*  Drilldown calendar CSS BEGINS   */
.lyteDrillCalYearView,
.lyteDrillCalMonthView {
  border-spacing: 20px 40px;
}
.lyteDrillCalYearView .lyteCalTableCell,
.lyteDrillCalMonthView .lyteCalTableCell {
  height: auto;
  width: 40px;
  padding: 0 5px;
  border-radius: 3px;
}
.lyteDrillCalCurrentYear,
.lyteDrillCalCurrentMonth {
  color: #5ba1e5;
  border: 1px solid #5ba1e5;
}
.lyteDrillCalHeaderButton {
  padding: 2px 10px;
  color: #777;
  border: 1px solid #bbb;
  border-radius: 3px;
  font-size: 16px;
  cursor: pointer;
}
.lyteDrillCalHeaderButton:hover {
  background: #eee;
}
.lyteDrillCalYearListHeader:hover,
.lyteDrillCalYearListHeader {
  border-color: transparent;
  background: transparent;
  cursor: default;
}
.lyteDrillCalHeaderButton .lyteCalsCalMonth {
  font-size: 16px;
}
.lyteCalDisableNav {
  pointer-events: none;
  opacity: 0.5;
}
/*  Drilldown calendar CSS ENDS   */
/* import theme overrides - styles */
/* import custom css */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/calendar.less file
 */
/*  Calendar related CSS ENDS     */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/*  Calculator related style BEGINS   */
lyte-calculator {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  display: inline-block;
  border-radius: 3px;
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  padding-right: 17px;
}
.lyteCalculator {
  border: 1px solid #d8d8d8;
  box-shadow: 0 0 6px 1px rgba(0, 0, 0, 0.1);
  border-radius: 3px;
  outline: 0;
  width: 220px;
}
.lyteCalculator.advanced {
  width: 450px;
}
.lyteCalculator.basic .advancedCalculator {
  display: none;
}
.calculatorDisplay {
  position: relative;
  background: #fafafa;
  border-bottom: 1px solid #d8d8d8;
  padding: 5px 20px;
  border-radius: 3px 3px 0 0;
  height: 45px;
}
.calculatorrad {
  font-size: 12px;
  position: absolute;
  bottom: 5px;
}
.lyteCalculator.advanced .calculatorDisplay {
  padding: 5px 15px;
}
.lyteCalculatorTextField {
  width: 100%;
  border: 0;
  outline: 0;
  box-shadow: none;
  text-align: left;
  background: #fafafa;
  font-size: 20px;
  color: #111;
  height: 25px;
  direction: ltr;
}
.lyteCalculatorTextField::-ms-clear {
  display: none;
}
.calculatorDisplay.equalBtn .lyteCalculatorTextField {
  font-size: 14px;
  color: #777;
  height: 21px;
}
.calculatorbuttons,
.basicCalculator,
.advancedCalculator {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  position: relative;
}
.advancedCalculator {
  width: 250px;
}
.basicCalculator {
  align-content: baseline;
}
.advancedCalculator span,
.basicCalculator span {
  width: 55px;
  height: 38px;
  border-left: 1px solid #d8d8d8;
  border-bottom: 1px solid #d8d8d8;
  box-sizing: border-box;
  background: #f4f4f4;
  text-align: center;
  line-height: 40px;
  cursor: pointer;
  font-size: 15px;
  color: #111;
  direction: ltr;
}
.basicCalculator span.calcClearAc {
  font-size: 14px;
}
.basicCalculator span.doubleWidth {
  width: 110px;
}
.advancedCalculator span {
  width: 50px;
  font-size: 14px;
}
.lyteCalculator.advanced .basicCalculator span {
  width: 50px;
}
.lyteCalculator.advanced .basicCalculator span.doubleWidth {
  width: 100px;
}
.lyteCalculator.advanced .basicCalculator {
  width: 200px;
}
.advancedCalculator span:hover,
.basicCalculator span:hover {
  background: #eee;
}
.basicCalculator span.basicOp {
  background: #6f92e9;
  border-left: 0;
  font-size: 25px;
}
.basicCalculator span.basicOp.calcEqual {
  color: #fff;
}
.basicCalculator span.lastrow,
.advancedCalculator span.lastrow {
  border-bottom: 0;
}
.calculatorDispspan {
  text-align: left;
  font-size: 14px;
  color: #777;
  height: 22px;
}
.calculatorDisplay.equalBtn .calculatorDispspan {
  font-size: 20px;
  color: #111;
  height: 25px;
}
.calculatorToggle {
  display: block;
  position: absolute;
  right: -18px;
  border: 1px solid #d8d8d8;
  padding: 5px 3px;
  background: #f0f0f0;
  border-left: 0;
  top: 43px;
  cursor: pointer;
}
.calculatorsmaller {
  color: #f0f0f0;
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -40px -1px;
  opacity: 0.7;
  width: 10px;
  height: 10px;
  display: inline-block;
  transform: rotate(0deg);
}
.lyteCalculator.advanced .calculatorsmaller {
  transform: rotate(180deg);
}
.advancedCalculator span.CalculatorBtn15 {
  font-size: 15px;
}
.advancedCalculator span.CalculatorBtn16 {
  font-size: 16px;
}
.advancedCalculator span.CalculatorBtn17 {
  font-size: 17px;
}
.advancedCalculator span.calc-second {
  background: #e4e4e4;
}
.memorymr.active,
.memorymr.active:hover {
  background: #e4e4e4;
  position: relative;
}
.memorymr.active::before {
  content: '';
  position: absolute;
  left: 5px;
  top: 5px;
  background: #3663d4;
  width: 5px;
  height: 5px;
  border-radius: 50%;
}
.calcLeft {
  border-bottom-right-radius: 2px;
}
.lyteCalculator.advanced .basicCalculator .calcLeft {
  border-bottom-right-radius: 0px;
}
.calcRight {
  border-bottom-left-radius: 2px;
}
.basicCalculator span.basicOp:not(.calcEqual),
.advancedCalculator span.squareroot.inverse,
.advancedCalculator span.cuberoot.inverse,
.basicCalculator span.calcBackspace,
.advancedCalculator span.pieButton {
  position: relative;
  color: transparent;
}
.pieButton::after,
.basicCalculator span.basicOp:not(.calcEqual)::after,
.cuberoot.inverse::before,
.squareroot.inverse::before,
.basicCalculator span.calcBackspace::after {
  content: '';
  position: absolute;
  background-image: url(../../images/sprite_lyte.svg);
}
.calcMultiply::after {
  background-position: -325px -110px;
  width: 14px;
  height: 12px;
  top: calc(50% - 6px);
  left: calc(50% - 7px);
}
.calcDivide::after {
  background-position: -348px -108px;
  width: 14px;
  height: 14px;
  top: calc(50% - 7px);
  left: calc(50% - 7px);
}
.calcAdd::after {
  background-position: -73px -58px;
  width: 11px;
  height: 11px;
  top: calc(50% - 5px);
  left: calc(50% - 5px);
}
.calcSub::after {
  background-position: -309px -116px;
  width: 12px;
  height: 2px;
  top: calc(50% - 1px);
  left: calc(50% - 6px);
}
.squareroot.inverse::before,
.cuberoot.inverse::before {
  content: '2';
  background-position: -374px -107px;
  width: 20px;
  height: 18px;
  top: calc(50% - 9px);
  left: calc(50% - 10px);
  color: #222;
  font-size: 13px;
  line-height: 10px;
  text-align: left;
  text-indent: -2px;
}
.cuberoot.inverse::before {
  content: 'y';
  line-height: 6px;
}
.squareroot.inverse::after,
.cuberoot.inverse::after {
  content: 'x';
  position: absolute;
  color: #222;
  top: 14px;
  line-height: 6px;
  left: calc(50%);
  text-indent: 1px;
}
.basicCalculator span.calcBackspace::after {
  background-position: -98px -134px;
  width: 16px;
  height: 12px;
  left: calc(50% - 8px);
  top: calc(50% - 6px);
}
.lyteCalculatorTextField.hideCursor,
.lyteCalculatorTextField.hideCursorNonEditable {
  color: transparent;
  text-shadow: 0 0 0 #111;
}
.equalBtn .lyteCalculatorTextField.hideCursorNonEditable {
  color: transparent;
  text-shadow: 0 0 0 #777;
}
.lyteCalculatorTextField.lyteScrollBar {
  height: 25px;
  overflow: hidden;
}
.toggleBtns {
  position: relative;
}
.toggleBtns sup {
  font-size: 0;
}
.cuberoot:not(.inverse)::after,
.squareroot:not(.inverse)::after,
.logbtn.inverse::after,
.naturallog.inverse::after,
.hyperbolic.inverse::after,
.trignometry.inverse::after {
  content: '-1';
  position: absolute;
  top: -7px;
  right: 7px;
  color: #111;
  font-size: 12px;
}
.hyperbolic.inverse::after {
  right: 5px;
}
.logbtn.inverse::after,
.naturallog.inverse::after {
  content: 'x';
  top: -7px;
  right: 10px;
}
.naturallog.inverse::after {
  right: 12px;
}
.squareroot:not(.inverse)::after {
  content: '2';
  right: 12px;
}
.cuberoot:not(.inverse)::after {
  content: 'y';
  right: 12px;
}
.pieButton::after {
  display: block;
  width: 10px;
  height: 10px;
  background-position: -124px -137px;
  top: calc(50% - 3px);
  left: calc(50% - 4px);
}
/* import theme overrides - styles */
/* import custom css */
/*  Calculator related style ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Radiobutton CSS BEGINS */
lyte-radiobutton {
  color: #333;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 14px;
  display: inline-block;
  position: relative;
}
lyte-radiobutton label {
  cursor: pointer;
}
lyte-radiobutton.lyteRadioDisabled label {
  cursor: not-allowed;
}
lyte-radiobutton input[type="radio"] {
  position: absolute;
  opacity: 0;
}
.lyteRadioLayer {
  width: 15px;
  height: 15px;
  border: 1px solid #aaa;
  border-radius: 50%;
  display: inline-block;
  margin-left: 7px;
  vertical-align: middle;
  background: #fff;
  position: relative;
}
.lyteRadioLayer .lyteRadioCheck {
  width: 9px;
  height: 9px;
  border-radius: 50%;
  position: absolute;
  top: calc(50% - 4.5px);
  right: calc(50% - 4.5px);
  background: #555;
  transform: scale(0);
  transition: transform 0.2s ease;
}
.lyteRadioDisabled input[type="radio"]:checked + .lyteRadioLayer,
lyte-radiobutton label:hover .lyteRadioLayer,
lyte-radiobutton input[type="radio"]:focus + .lyteRadioLayer,
lyte-radiobutton input[type="radio"]:active + .lyteRadioLayer,
lyte-radiobutton input[type="radio"]:checked + .lyteRadioLayer {
  border: 1px solid #555;
}
lyte-radiobutton input[type="radio"]:focus + .lyteRadioLayer {
  box-shadow: 0 0 4px 0 #555;
}
lyte-radiobutton input[type="radio"]:checked + .lyteRadioLayer .lyteRadioCheck {
  transform: scale(1);
}
.lyteRadioLabel {
  display: inline-block;
  vertical-align: middle;
}
lyte-radiobutton input[type="radio"]:focus ~ .lyteRadioLabel,
lyte-radiobutton label:hover .lyteRadioLabel {
  color: #111;
}
lyte-radiobutton .lytePrimary .lyteRadioLayer .lyteRadioCheck {
  background: #5ba1e5;
}
lyte-radiobutton label.lytePrimary:hover .lyteRadioLayer,
lyte-radiobutton .lytePrimary input[type="radio"]:focus + .lyteRadioLayer,
lyte-radiobutton .lytePrimary input[type="radio"]:active + .lyteRadioLayer,
lyte-radiobutton .lytePrimary input[type="radio"]:checked + .lyteRadioLayer {
  border: 1px solid #5ba1e5;
}
lyte-radiobutton .lytePrimary input[type="radio"]:focus + .lyteRadioLayer {
  box-shadow: 0 0 4px 0 #5ba1e5;
}
lyte-radiobutton .lyteSecondary .lyteRadioLayer .lyteRadioCheck {
  background: #72C98A;
}
lyte-radiobutton label.lyteSecondary:hover .lyteRadioLayer,
lyte-radiobutton .lyteSecondary input[type="radio"]:focus + .lyteRadioLayer,
lyte-radiobutton .lyteSecondary input[type="radio"]:active + .lyteRadioLayer,
lyte-radiobutton .lyteSecondary input[type="radio"]:checked + .lyteRadioLayer {
  border: 1px solid #72C98A;
}
lyte-radiobutton .lyteSecondary input[type="radio"]:focus + .lyteRadioLayer {
  box-shadow: 0 0 4px 0 #72C98A;
}
.lyteRadioSwitch {
  display: inline-block;
  vertical-align: middle;
  position: relative;
  width: 28px;
  height: 16px;
  border-radius: 20px;
  background: #d3d3d3;
}
.lyteRadioSwitch .on-btn {
  display: inline-block;
  position: absolute;
  width: 12px;
  height: 12px;
  background: #fff;
  border-radius: 50%;
  right: 2px;
  top: calc(50% - 6px);
  left: auto;
  transition: right 200ms ease;
}
lyte-radiobutton .on-off-sw:focus + .lyteRadioSwitch {
  box-shadow: 0 0 3px 1px #d3d3d3;
}
.on-off-sw:checked + .lyteRadioSwitch {
  background: #5ba1e5;
}
lyte-radiobutton .on-off-sw:checked:focus + .lyteRadioSwitch {
  box-shadow: 0 0 3px 1px #5ba1e5;
}
lyte-radiobutton .on-off-sw:checked + .lyteRadioSwitch .on-btn {
  right: 14px;
}
.lyteRadioSliderLabel {
  box-sizing: border-box;
  cursor: pointer;
  position: relative;
}
.lyteRadioSlider {
  position: relative;
  display: inline-block;
  height: 1.4rem;
}
.lyteRadioSlider::before {
  content: '';
  position: absolute;
  display: inline-block;
  z-index: 1;
  width: 1.4rem;
  height: 1.4rem;
  background: #fff;
  box-shadow: 0 1px 2px 0 rgba(34, 36, 38, 0.15), 0 0 0 1px rgba(34, 36, 38, 0.15) inset;
  border-radius: 50%;
  right: 0;
  transition: right 200ms ease;
}
input[type="radio"]:checked + .lyteRadioSlider::before {
  right: 2.25rem;
}
.lyteRadioSlider::after {
  content: '';
  position: absolute;
  display: inline-block;
  z-index: 0;
  width: 3.5rem;
  height: 0.2rem;
  top: 0.6rem;
  right: 0;
  background: #b5b1b1;
}
input[type="radio"]:checked + .lyteRadioSlider::after {
  background: #000;
}
.lyteRadioSliderText {
  padding-right: 4.25rem;
  vertical-align: middle;
}
.lyteRadioDisabled .lyteRadioSlider::after,
.lyteRadioDisabled .lyteRadioSwitch,
.lyteRadioDisabled .lyteRadioLayer {
  opacity: 0.5;
}
.lyteRadioDisabled .lyteRadioSlider::before {
  opacity: 0.8;
  background: #f5f5f5;
}
.lyteRadioDisabled input[type="radio"]:active + .lyteRadioLayer,
.lyteRadioDisabled .lytePrimary input[type="radio"]:active + .lyteRadioLayer,
.lyteRadioDisabled .lyteSecondary input[type="radio"]:active + .lyteRadioLayer,
.lyteRadioDisabled label.lyteSecondary:hover .lyteRadioLayer,
.lyteRadioDisabled label.lytePrimary:hover .lyteRadioLayer,
.lyteRadioDisabled label:hover .lyteRadioLayer {
  border: 1px solid #aaa;
}
.lyteRadioDisabled label:hover .lyteRadioLabel {
  color: #333;
}
/* import theme overrides - styles s*/
/* import custom css */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/radiobutton.less file
 */
/* Radiobutton CSS ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* Make changes to override predefined styles */
/*  Dropdown related style BEGINS   */
lyte-dropdown,
lyte-drop-box {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  color: #111;
  display: inline-block;
  max-width: 430px;
}
lyte-dropdown {
  max-width: 330px;
}
lyte-drop-button {
  border: 1px solid #d6d6d6;
  border-radius: 2px;
  cursor: pointer;
  text-align: right;
  position: relative;
  display: inline-block;
  padding: 7px 10px 7px 25px;
  width: 100%;
  box-sizing: border-box;
  color: #111;
  background: #fff;
}
lyte-dropdown lyte-drop-button:hover {
  border: 1px solid #c1c1c1;
}
lyte-drop-button.lyteDropButtonUp {
  border-radius: 0 0 2px 2px;
  box-shadow: 0px 0px 6px 0px rgba(0, 0, 0, 0.15);
}
lyte-drop-button.lyteDropButtonDown {
  border-radius: 2px 2px 0 0;
  box-shadow: 0px 0px 6px 0px rgba(0, 0, 0, 0.15);
}
lyte-dropdown .lyteDummyEventContainer:focus lyte-drop-button,
lyte-dropdown .lyteDummyEventContainer:focus lyte-drop-button:hover {
  border: 1px solid #d6d6d6;
  box-shadow: 0px 0px 6px 0px rgba(0, 0, 0, 0.15);
}
lyte-drop-button.lyteDropButtonUp:hover,
lyte-drop-button.lyteDropButtonDown:hover {
  border: 1px solid #d6d6d6;
}
lyte-dropdown.calloutDrop lyte-drop-button {
  box-shadow: none;
  border-radius: 2px;
}
.lyteDropPlaceholderNormal,
.lyteDropdownLabel {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  display: block;
}
.lyteDummyEventContainer {
  outline: none;
}
lyte-drop-item {
  position: relative;
  cursor: pointer;
  display: block;
  text-align: right;
  color: #111;
  padding: 7px 25px 7px 15px;
  font-size: 15px;
  max-width: 100%;
  -ms-word-wrap: break-word;
  overflow-wrap: break-word;
}
lyte-drop-item.lyteDropdownActive,
lyte-drop-item.lyteSearchHidden {
  display: none;
}
.lyteDropdownSelection {
  background: #ededed;
}
lyte-drop-item[selected="true"]::before {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -33px -15px;
  width: 9px;
  height: 7px;
  position: absolute;
  right: 10px;
  top: 15px;
}
lyte-dropdown lyte-icon.dropdown {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -1px -2px;
  width: 8px;
  height: 4px;
  top: calc(50% - 2px);
  display: inline-block;
  opacity: 0.5;
  position: absolute;
  left: 10px;
}
/*  Multi select releated CSS--BEGINS   */
lyte-dropdown[lt-prop-type="multisearch"] lyte-drop-button,
lyte-dropdown[lt-prop-type="multiple"] lyte-drop-button {
  padding-left: 17px;
  min-height: 25px;
  white-space: normal;
}
lyte-dropdown[lt-prop-type="multisearch"] lyte-drop-button::after,
lyte-dropdown[lt-prop-type="multiple"] lyte-drop-button::after {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -1px -2px;
  width: 8px;
  height: 4px;
  display: inline-block;
  position: absolute;
  left: 10px;
  top: 15px;
  opacity: 0.5;
}
.lyteMultipleSelect li {
  background: #f1f1f1;
  color: #111;
  border: 1px solid #e8e8e8;
  margin: 3px 1px;
  border-radius: 2px;
  font-size: 15px;
  padding: 1px 7px 3px 25px;
  display: inline-block;
  position: relative;
  cursor: default;
  max-width: 100%;
  box-sizing: border-box;
}
.lyteMultipleSelect .lyteDropdownVisible {
  display: block;
  max-width: 100%;
  -ms-word-wrap: break-word;
  overflow-wrap: break-word;
}
lyte-dropdown[lt-prop-remove-multiple="true"] .lyteMultipleSelect li {
  cursor: pointer;
}
lyte-dropdown[lt-prop-type="multisearch"] .lyteMultipleSelect li.lyteMultiselectInput {
  background: #fff;
  border: 0;
  padding: 0;
  margin: 0;
  width: 150px;
}
lyte-dropdown[lt-prop-type="multisearch"] .lyteMultipleSelect .lyteMultiselectInput:only-of-type {
  width: 100%;
}
.lyteDropPlaceholderMultiple {
  padding-right: 0;
  font-size: 14px;
  color: #999;
  vertical-align: top;
}
.lyteMultipleSelect .lyteCloseIcon {
  position: absolute;
  cursor: pointer;
  top: 0;
  bottom: 0;
  left: 0;
  height: 100%;
  width: 18px;
  border-radius: 2px 0 0 2px;
}
.lyteMultipleSelect li:hover .lyteCloseIcon {
  background: #e8e8e8;
}
.lyteMultipleSelect .lyteCloseIcon::before {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -54px -2px;
  width: 8px;
  height: 8px;
  top: calc(50% - 4px);
  left: 5px;
  opacity: 0.7;
  display: inline-block;
  position: absolute;
  cursor: pointer;
}
.lyteMultipleSelect .lyteCloseIcon:hover::before {
  opacity: 1;
}
.lyteDropdownNoResult {
  padding: 5px 15px 15px;
  text-align: center;
  font-size: 14px;
  color: #8a8a8a;
}
lyte-drop-button input {
  width: 100%;
  border: none;
  background: transparent;
  font-size: 14px;
  color: #111;
  padding: 0;
  box-sizing: border-box;
}
lyte-drop-button input:focus {
  outline: none;
}
.lyte-dropdown-filtered {
  display: none !important;
}
.lyteMultiSelectDropdown lyte-drop-item {
  padding: 7px 10px;
}
/*  Multi select releated CSS--ENDS   */
/*lyte-list-box dropbox related css--BEGINS     */
lyte-drop-box {
  background: #fff;
  box-sizing: border-box;
  border: 1px solid #d6d6d6;
  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.15);
  z-index: 1060;
  position: absolute;
  border-radius: 0 0 2px 2px;
  display: block;
  width: auto;
  transform: translate(-1000px, -1000px);
}
lyte-drop-box[lyte-hidden] {
  visibility: hidden;
}
lyte-drop-box.lyteDropdownCurve {
  border-radius: 0 2px 2px 2px;
}
lyte-drop-box.lyteDropdownDown {
  transform: translateY(-1px);
}
lyte-drop-box.lyteDropdownUp {
  border-radius: 2px 2px 0 0;
  box-shadow: 0px -2px 6px 0px rgba(0, 0, 0, 0.15);
  transform: translateY(1px);
}
lyte-drop-box.lyteDropdownRight,
lyte-drop-box.lyteDropdownLeft {
  transform: none;
}
lyte-drop-box.lyteDropBodyCallout {
  border-radius: 2px;
  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.15);
}
lyte-drop-box:not(.lyteDropBodyCallout) .lyteArrow {
  background: #ededed;
  width: 328px;
  height: 1px;
  display: block;
  position: absolute;
  top: -1px;
  right: -1px;
}
.lyteDropdownUp:not(.lyteDropBodyCallout) .lyteArrow {
  top: unset;
  bottom: -1px;
}
.lyteDropdownUp.lyteDropdownCurve {
  border-radius: 2px 2px 2px 0;
}
lyte-drop-box lyte-input.lyteInput .lyteSearch {
  padding-right: 35px;
}
lyte-drop-box.lyteDropdownUp lyte-input.lyteInput .lyteSearch {
  border-radius: 2px 2px 0 0;
}
lyte-drop-box.lyteDropdownHidden {
  display: none;
  transform: translate(-1000px, -1000px);
}
lyte-drop-footer,
lyte-drop-header {
  display: block;
}
lyte-drop-footer {
  border-top: 1px solid #ddd;
  text-align: center;
}
lyte-drop-body {
  padding: 5px 0;
  display: block;
  max-height: 210px;
  overflow-y: auto;
  position: relative;
}
lyte-drop-header lyte-search .searchIcon {
  top: 10px;
  right: 10px;
}
lyte-drop-box .lyteDropdownFooter {
  border-top: 1px solid #ddd;
}
lyte-drop-box .lyteDropdownFooter .lyteDropdownAction {
  padding: 7px 10px;
  font-size: 14px;
}
lyte-drop-label {
  display: block;
  height: auto;
  padding: 10px 10px 3px;
  font-weight: 400;
  text-align: right;
  font-size: 15px;
  font-family: 'LatoBold', 'Open Sans', sans-serif;
}
lyte-drop-label:first-child {
  padding-top: 5px;
}
/*lyte-list-box dropbox related css--ENDS     */
.lyteDropdownFiltered {
  display: none!important;
}
#lytedropdownfreezelayer {
  right: 0;
  left: 0;
  top: 0;
  bottom: 0;
  background: #fff;
  opacity: 0.1;
  position: fixed;
  overflow: hidden;
  display: none;
}
.lyteDropdownZIndex {
  z-index: 1055;
}
/*Dropdown element disabled option -- BEGINS*/
lyte-dropdown[lt-prop-disabled="true"] {
  cursor: not-allowed;
}
.lyteDropdown-disabled {
  pointer-events: none;
}
.lyteDropdown-disabled lyte-drop-button {
  background: #f3f3f3;
  color: #999;
}
lyte-dropdown .lyteDropdown-disabled lyte-icon.dropdown {
  opacity: 0.3;
}
/*Dropdown element disabled option -- ENDS*/
/*  Dropdown item disabled CSS -- BEGINS    */
lyte-drop-item.lyteDropdown-disabled {
  opacity: 0.4;
}
/*  Dropdown item disabled CSS -- ENDS    */
.lyteDropPlaceholderNormal {
  margin-left: 20px;
  color: #828282;
}
.lyteMultipleSelect li.lyteDropMark {
  background: #eef5fa;
  border: 1px solid #3ea7fc;
}
.lyteMultipleSelect li.lyteDropMark:hover .lyteCloseIcon {
  background: #daebf7;
}
/*  Callout hook related CSS -- BEGINS    */
/*Dropdown with arrow */
lyte-drop-box .lyteArrowIcon {
  width: 0;
  height: 0;
  border-bottom: 8px solid #fff;
  position: absolute;
}
lyte-drop-box .lyteArrowTop::after,
lyte-drop-box .lyteArrowTop::before,
lyte-drop-box .lyteArrowBottom::after,
lyte-drop-box .lyteArrowBottom::before,
lyte-drop-box .lyteArrowRight::after,
lyte-drop-box .lyteArrowRight::before,
lyte-drop-box .lyteArrowLeft::after,
lyte-drop-box .lyteArrowLeft::before {
  content: "";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
  border: 8px solid transparent;
}
/*Arrow Top*/
lyte-drop-box .lyteArrowTop {
  top: 0;
}
lyte-drop-box .lyteArrowTop::after,
lyte-drop-box .lyteArrowTop::before {
  bottom: 0;
  right: 0;
}
lyte-drop-box .lyteArrowTop::after {
  border-bottom-color: #fff;
  margin-right: -8px;
}
lyte-drop-box .lyteArrowTop::before {
  border-bottom-color: #d6d6d6;
  border-width: 10px;
  margin-right: -10px;
}
/*Arrow bottom*/
lyte-drop-box .lyteArrowBottom {
  bottom: -8px;
  top: unset;
}
lyte-drop-box .lyteArrowBottom::after,
lyte-drop-box .lyteArrowBottom::before {
  top: 0;
  left: 0;
}
lyte-drop-box .lyteArrowBottom::after {
  border-top-color: #fff;
  margin-left: -8px;
}
lyte-drop-box .lyteArrowBottom::before {
  border-top-color: #d6d6d6;
  border-width: 10px;
  margin-left: -10px;
}
/*Arrow Right*/
lyte-drop-box .lyteArrowRight {
  right: 0;
}
lyte-drop-box .lyteArrowRight::after,
lyte-drop-box .lyteArrowRight::before {
  left: 0;
  top: 0;
}
lyte-drop-box .lyteArrowRight::after {
  border-left-color: #fff;
  margin-top: -8px;
}
lyte-drop-box .lyteArrowRight::before {
  border-left-color: #d6d6d6;
  border-width: 10px;
  margin-top: -10px;
}
/*Arrow Left*/
lyte-drop-box .lyteArrowLeft {
  left: 0;
}
lyte-drop-box .lyteArrowLeft::after,
lyte-drop-box .lyteArrowLeft::before {
  right: 0;
  top: 0;
}
lyte-drop-box .lyteArrowLeft::after {
  border-right-color: #fff;
  margin-top: -8px;
}
lyte-drop-box .lyteArrowLeft::before {
  border-right-color: #d6d6d6;
  border-width: 10px;
  margin-top: -10px;
}
/*  Callout hook related CSS -- ENDS    */
lyte-drop-box.lyteAnimate {
  transition: top 0.4s ease;
}
lyte-drop-box.lyteDropBoxAnimate {
  transition-property: top, height;
  overflow: hidden;
}
lyte-drop-box.lyteAnimate lyte-drop-body {
  transition: height 0.4s ease;
  overflow: hidden;
}
.lyteBodyWrapper {
  overflow: hidden;
}
.lyteDropdownFFScroll {
  overflow-y: scroll;
}
.lyteDropdownFFZeroScroll {
  overflow-y: hidden;
}
.lyteDropdownHideGroup {
  display: none;
}
@media only screen and (max-device-width: 650px) {
  lyte-drop-body {
    max-height: 70px;
  }
}
/* import theme overrides - styles */
/* import custom css */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/dropdown.less file
 */
/*  Dropdown related style ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-combobox lyte-dropdown {
  display: block;
  width: 100%;
  max-width: unset;
}
.lyteComboboxButtonSearch.lyteComboboxSearchPresent .lyteDropPlaceholderNormal,
.lyteComboboxButtonSearch.lyteComboboxSearchPresent .lyteDropdownLabel,
lyte-combobox.buttonSearch.lyteComboboxSearchPresent .lyteDropPlaceholderNormal,
lyte-combobox.buttonSearch.lyteComboboxSearchPresent .lyteDropdownLabel {
  position: absolute;
  z-index: 5;
  pointer-events: none;
  padding-right: 20px;
}
.lyteComboboxButtonSearch .lyteDropButtonDown .lyteDropdownLabel,
.lyteComboboxButtonSearch .lyteDropButtonUp .lyteDropdownLabel,
lyte-combobox.buttonSearch .lyteDropButtonDown .lyteDropdownLabel,
lyte-combobox.buttonSearch .lyteDropButtonUp .lyteDropdownLabel {
  opacity: 0.5;
}
.lyteComboboxFiltering .lyteDropPlaceholderNormal,
.lyteComboboxButtonSearch .lyteComboboxFiltering .lyteDropdownLabel {
  opacity: 0;
}
.lyteComboboxBtnSearchInput {
  width: 100%;
}
.lyteInput.lyteComboboxBtnSearchInput[lt-prop-type="search"] .lyteComboboxBtnSearchOrigIpt {
  padding: 0;
  padding-right: 20px;
}
.lyteComboboxBtnSearchInput.lyteInputFocus .lyteField,
.lyteComboboxBtnSearchInput .lyteField:hover,
.lyteComboboxBtnSearchInput .lyteField {
  border: 0;
}
.lyteComboboxBtnSearchInput[lt-prop-type="search"] .searchIcon {
  right: 0;
}
.lyteComboboxDropboxSearch {
  box-sizing: border-box;
  width: 100%;
}
.lyteComboboxDropboxSearch.lyteInputBox {
  padding: 15px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-dateselect lyte-dropdown {
  width: auto;
}
.lyteCalendarSelected,
.lyteDateSelect lyte-item:hover {
  background: #e8e8e8;
}
.lyteDateSelectHidden {
  display: none !important;
}
#lyteDateSelect lyte-drop-body {
  max-height: none;
  overflow: visible;
}
#lyteDateSelect lyte-drop-item {
  white-space: nowrap;
}
#lyteDateSelect lyte-drop-item[selected="true"] .dateArrow {
  position: absolute;
  width: 10px;
  height: 10px;
  transform: rotate(45deg);
  background: #fff;
  left: -4px;
  top: calc(50% - 5px);
  z-index: -1;
  box-shadow: -1px 1px #d6d6d6;
}
#lyteDateSelect lyte-drop-item[selected="true"] .dateArrow.arrowLeft {
  right: -4px;
  box-shadow: 1px -1px #d6d6d6;
  left: unset;
}
#lyteDateSelect lyte-drop-item[selected="true"] {
  overflow: visible;
}
.dateSelectcal {
  position: absolute;
  z-index: 1060;
}
#lyteDateSelect,
.dateSelectcal .specificDate,
.dateSelectcal .customRange {
  opacity: 0;
  transition: height 0.3s, opacity 0.3s, transform 0.3s;
  transform-origin: top;
}
#lyteDateSelect.lyteDateselectAnimate,
.dateSelectcal.lyteDateselectAnimate .specificDate,
.dateSelectcal.lyteDateselectAnimate .customRange {
  opacity: 1;
}
.dateSelectcal.lyteDateselectAnimate .specificDate,
.dateSelectcal.lyteDateselectAnimate .customRange,
.lyteDateselectAnimationHappening {
  overflow: hidden;
}
#lyteDateSelect.lyteDateselectUp,
.dateSelectcal.lyteDateselectUp .specificDate,
.dateSelectcal.lyteDateselectUp .customRange {
  transform-origin: bottom;
}
.dateSelectcal .specificDate,
.dateSelectcal .customRange {
  display: flex;
  flex-direction: column;
  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.15);
  border-radius: 2px;
}
.dateSelectcal .specificDate.lyteDropdownHidden,
.dateSelectcal .customRange.lyteDropdownHidden {
  display: none;
}
.dateSelectcal lyte-daterangepicker,
.dateSelectcal .specificDate lyte-calendar {
  border: 1px solid #d6d6d6;
  border-radius: 2px 2px 0 0;
}
.dateSelectcal .lyteDateRangePickerRow,
.dateSelectcal .lyteCalendarPopup {
  border: 0;
  box-shadow: none;
  border-radius: 2px 2px 0 0;
}
.dateSelectcal lyte-button {
  padding: 10px;
  margin-right: auto;
}
.dateSelectcal .lyteCalCurrentDate {
  display: none;
}
#lyteDateSelect lyte-drop-item {
  padding-left: 25px;
}
#lyteDateSelect lyte-drop-item.specificDate::after,
#lyteDateSelect lyte-drop-item.customRange::after {
  content: '';
  position: absolute;
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -1px -2px;
  width: 8px;
  height: 4px;
  transform: rotate(90deg);
  left: 10px;
  top: calc(50% - 2px);
  opacity: 0.5;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-file-message,
lyte-fileupload,
lyte-file-select-area {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  display: block;
}
.lyteFileUpdMsgWrap {
  font-size: 13px;
  box-sizing: border-box;
  cursor: pointer;
  outline: none;
  background: #fff;
  text-align: center;
  color: #666;
}
.lyteFileUpdBoxType .lyteFileUpdMsgWrap {
  border-radius: 10px;
  padding: 30px;
  border: 1px dashed #b8bdbe;
}
.lyteFileUpdBoxType .lyteFileUpdMsgWrap:hover {
  border: 1px dashed #969b9c;
}
.fileDragEnter.lyteFileUpdInputType .lyteFileUpdMsgWrap,
.fileDragEnter.lyteFileUpdBoxType .lyteFileUpdMsgWrap {
  border: 1px dashed #6eb0cb;
  background: #fafcff;
}
.lyteFileUpdMsg {
  position: relative;
  line-height: 21px;
}
.fileDragEnter .lyteFileUpdMsg {
  opacity: 0.7;
}
.lyteFileUpdBoxType .lyteFileUpdMsg {
  padding-right: 40px;
}
.lyteFileUpdBoxType .lyteFileUpdMsg::before {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -155px -203px;
  width: 30px;
  height: 21px;
  display: inline-block;
  position: absolute;
  right: 0;
}
.lyteFileUpdThumb {
  display: block;
  width: 23px;
  height: 23px;
  border-radius: 50%;
  border: 1px solid #aaa;
}
.lyteFileUpdList {
  display: flex;
  flex-direction: column;
}
.multiFileupload .lyteFileUpdList {
  margin-top: 15px;
}
.multiFileupload .lyteFileUpdListFile {
  margin-bottom: 10px;
}
.lyteFileUpdListFile {
  position: relative;
  display: flex;
  padding: 10px 15px;
  background: #f7f7f7;
  border: 1px solid #f1f1f1;
  border-radius: 10px;
  align-items: center;
}
.lyteFileUpdListFile.error {
  background: #ffeeee;
  border: 1px solid #f8dcdc;
}
.lyteFileUpdTypePreview {
  margin-left: 10px;
}
.lyteFileUpdTypeIcon::after {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  display: block;
  background-position: -117px -198px;
  width: 21px;
  height: 26px;
}
.lyteFileUpdTypeIcon.pdf::after {
  background-position: -8px -198px;
}
.lyteFileUpdTypeIcon.video::after {
  background-position: -35px -198px;
}
.lyteFileUpdTypeIcon.image::after {
  background-position: -63px -198px;
}
.lyteFileUpdTypeIcon.zip::after {
  background-position: -90px -198px;
}
.lyteFileUpdFileName {
  color: #333;
  font-size: 14px;
  margin-left: 10px;
  max-width: calc(100% - 300px);
  white-space: nowrap;
}
.lyteFileUpdListFile.success .lyteFileUpdFileName {
  max-width: calc(100% - 150px);
}
.lyteFileUpdFileSize {
  font-size: 12px;
  color: #666;
  margin-left: auto;
}
.lyteFileUpdFileStatus {
  display: flex;
  margin-left: 10px;
}
.lyteFileUpdProgressBar {
  height: 5px;
  width: 140px;
  background: #dfecfb;
  flex-grow: 1;
  border-radius: 5px;
}
.lyteFileUpdProgressFill {
  height: 5px;
  background: #4ea2f7;
  width: 0;
  border-radius: 5px;
  transition: width 0.1s linear;
}
lyte-file-retry {
  display: inline-flex;
  margin-left: 10px;
}
.lyteFileUpdFailMsg {
  font-size: 12px;
  color: #f00;
  margin-left: 10px;
  text-transform: capitalize;
  cursor: default;
}
.lyteFileUpdRetryMsg {
  font-size: 12px;
  color: #555;
  text-transform: capitalize;
  text-decoration: underline;
  cursor: pointer;
}
.lyteFileUpdRetryMsg:hover {
  color: #333;
}
lyte-file-close {
  cursor: pointer;
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -347px -157px;
  width: 17px;
  height: 17px;
  opacity: 0.4;
  display: inline-flex;
}
.lyteFileUpdListFile.success lyte-file-close {
  visibility: hidden;
}
.lyteFileUpdListFile.success:hover lyte-file-close {
  visibility: visible;
}
lyte-file-close:hover {
  opacity: 0.7;
}
.lyteFileUpdBoxType #lyteFileUpdSelectedFile {
  background: #ddd;
  border: 1px solid #ccc;
}
.lyteFileUpdInputType .lyteFileUpdMsgWrap {
  padding: 7px 10px;
  border-radius: 3px;
  border: 1px dashed #c7c7c7;
  background: #fff;
  text-align: right;
}
.lyteFileUpdInputType .lyteFileUpdMsgWrap:hover {
  border: 1px dashed #969b9c;
}
.lyteFileUpdInputType .lyteFileUpdListFile {
  padding: 7px 10px;
  border: 1px dashed #c7c7c7;
  border-radius: 3px;
  background: #fff;
}
.lyteFileUpdInputType .lyteFileUpdListFile.error {
  background: #ffeeee;
  border: 1px dashed #f8dcdc;
}
.lyteFileUpdInputType .lyteFileUpdFileName {
  line-height: 21px;
  font-size: 13px;
  max-width: calc(100% - 250px);
}
.lyteFileUpdInputType .lyteFileUpdListFile.success .lyteFileUpdFileName {
  max-width: calc(100% - 90px);
}
.lyteFileUpdInputType lyte-file-close {
  background-position: -324px -162px;
  width: 10px;
  height: 10px;
}
.lyteFileUpdBtnType .lyteFileUpdMsgWrap {
  width: 30px;
  height: 30px;
  background: #4ea2f7;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}
.lyteFileUpdBtnType .lyteFileUpdMsgWrap::after {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -197px -205px;
  width: 15px;
  height: 19px;
  display: block;
}
.lyteFileUpdListFile.error .lyteFileUpdFileStatus,
.lyteFileUpdListFile.success .lyteFileUpdFileStatus,
.lyteFileUpdBtnType .lyteFileUpdMsg,
.fileuploadInput,
.lyteFileUpdInputType .lyteFileUpdTypePreview,
.lyteFileUpdBoxType .lyteFileUpdMsgWrap.lyteHide,
lyte-fileupload .lyteHide {
  display: none;
}
.lyteFileUpdDisabled {
  pointer-events: none;
  opacity: 0.6;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Autocomplete styles BEGINS */
lyte-autocomplete {
  position: relative;
  display: inline-block;
}
lyte-autocomplete lyte-dropdown {
  width: 100%;
  display: inline-block;
}
lyte-autocomplete lyte-dropdown lyte-drop-button {
  border: 0;
  padding: 0;
}
lyte-autocomplete lyte-input {
  display: block;
}
lyte-autocomplete lyte-input.lyteInputBox .lyteInputBoxSearch input {
  padding-right: 10px;
}
lyte-autocomplete lyte-input.lyteInputBox input {
  padding-left: 25px;
  font-size: 15px;
}
lyte-autocomplete.searchPresent lyte-input.lyteInputBox input {
  padding-left: 60px;
}
lyte-autocomplete .lyteDropButtonDown lyte-input.lyteInputBox .lyteField,
lyte-autocomplete .lyteDropButtonDown lyte-input.lyteInputBox input {
  border-radius: 2px 2px 0 0;
}
lyte-autocomplete .lyteDropButtonUp lyte-input.lyteInputBox .lyteField,
lyte-autocomplete .lyteDropButtonUp lyte-input.lyteInputBox input {
  border-radius: 0 0 2px 2px;
}
lyte-autocomplete lyte-dropdown lyte-drop-button.lyteDropButtonUp,
lyte-autocomplete lyte-dropdown lyte-drop-button.lyteDropButtonDown,
lyte-autocomplete lyte-dropdown .lyteDummyEventContainer:focus lyte-drop-button,
lyte-autocomplete lyte-dropdown .lyteDummyEventContainer:focus lyte-drop-button:hover,
lyte-autocomplete lyte-dropdown lyte-drop-button:hover,
lyte-autocomplete lyte-dropdown lyte-drop-button.lyteDropButtonDown:hover,
lyte-autocomplete lyte-dropdown lyte-drop-button.lyteDropButtonUp:hover {
  border: 0;
  box-shadow: none;
}
.lyteAutoCompCloseIcon {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -54px -2px;
  width: 8px;
  height: 8px;
  display: inline-block;
  vertical-align: top;
}
.lyteAutoCompCloseIconWrapper {
  left: 5px;
  top: calc(50% - 12px);
  padding: 8px;
  height: 8px;
  position: absolute;
  cursor: pointer;
  z-index: 10;
  opacity: 0.5;
}
lyte-autocomplete.searchPresent .lyteAutoCompCloseIconWrapper {
  left: 40px;
}
.lyteAutoCompCloseIconWrapper:hover {
  opacity: 1;
}
lyte-autocomplete lyte-input[lt-prop-type="search"] .searchIcon {
  right: auto;
  left: 10px;
  top: calc(50% - 7.5px);
  z-index: 10;
  cursor: default;
  opacity: 0.7;
}
.iconSeparator {
  height: 24px;
  border-left: 1px solid #ddd;
  left: 35px;
  top: calc(50% - 12px);
  display: inline-block;
  position: absolute;
  z-index: 10;
}
lyte-autocomplete-description {
  opacity: 0.4;
  font-size: 13px;
  align-self: center;
  white-space: nowrap;
}
.lyteautocompleteError {
  display: block;
  box-sizing: border-box;
  text-align: center;
  font-size: 14px;
  color: #8a8a8a;
  padding: 5px 15px 15px;
}
lyte-drop-item .lyteAutoComplete {
  color: #6b6b6b;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  max-width: 100%;
  overflow-wrap: break-word;
}
.lyteautocompleteDropdown {
  border: 1px solid #dadada;
  border-top: 1px solid #dadada;
  box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.15);
}
.lyteautocompleteDropdown.lyteDropdownDown {
  transform: translateY(5px);
}
.lyteautocompleteDropdown.lyteDropdownUp {
  transform: translateY(-5px);
}
.lyteautocompleteDropdown lyte-drop-item {
  padding-right: 10px;
  display: flex;
}
.lyteautocompleteDropdown lyte-drop-item[selected='true']::before {
  content: none;
}
.lyteautocompleteHighlight {
  color: #000;
  background: #fff5b0;
}
.lyteautocompleteDropdown lyte-drop-item.lyteSearchHidden {
  display: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/autocomplete.less file
 */
/* Autocomplete styles ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Breadcrumb styles BEGINS */
lyte-breadcrumb,
.lyte-breadcrumb-structure {
  display: inline-block;
}
lyte-breadcrumb-body {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  color: #555;
  cursor: pointer;
}
lyte-breadcrumb-body:hover {
  color: #111;
}
.lyteActive lyte-breadcrumb-body {
  color: #2c7bd0;
}
lyte-breadcrumb-item {
  padding: 0;
  font-size: 15px;
  margin-left: 25px;
  display: inline-block;
  position: relative;
}
lyte-breadcrumb-item::after {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -42px -1px;
  width: 6px;
  height: 10px;
  position: absolute;
  left: -18px;
  top: calc(50% - 10px/2);
  opacity: 0.5;
  transform: rotate(180deg);
}
lyte-breadcrumb-item:last-child {
  margin-left: 0;
}
lyte-breadcrumb-item:last-child::after {
  content: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/breadcrumb.less file
 */
/* Breadcrumb styles ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* modal Styles BEGINS */
.lyteModal {
  background: #fff;
  box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.4);
  position: absolute;
  z-index: 10;
  opacity: 0;
  box-sizing: border-box;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  border-radius: 2px;
  border: 1px solid transparent;
  transition: transform 0.3s ease, opacity 0.3s ease;
}
.bodyWrapper {
  overflow: hidden;
}
.modalWrapper {
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1040;
  position: fixed;
  overflow: auto;
}
.modalWrapper.noFreeze {
  pointer-events: none;
}
.modalWrapper.noFreeze .lyteModal {
  pointer-events: auto;
}
lyte-modal-header {
  font-size: 18px;
  color: #111;
  font-family: 'LatoBold', 'Open Sans', sans-serif;
  padding: 25px 25px 15px;
}
lyte-modal-content {
  padding: 15px 25px;
  box-sizing: border-box;
  font-size: 15px;
  color: #333;
}
lyte-modal-footer {
  padding: 10px 25px 25px;
}
lyte-modal-header,
lyte-modal-content,
lyte-modal-footer {
  display: block;
  box-sizing: border-box;
}
.modalWrapper.scrollable {
  overflow: hidden;
}
.modalWrapper.scrollable lyte-modal-content {
  overflow: auto;
}
lyte-modal-freeze {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  background: #000;
  display: block;
  opacity: 0.4;
  transition: opacity ease 0.15s;
}
.lyteModalClose {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -52px 0px;
  width: 13px;
  height: 13px;
  opacity: 0.5;
  cursor: pointer;
  position: absolute;
  top: 30px;
  left: 30px;
  display: inline-block;
  transform: scale(1.3);
  z-index: 5;
  outline: none;
}
.lyteModalClose:hover {
  opacity: 1;
}
lyte-modal-footer.left {
  text-align: right;
}
lyte-modal-footer.center {
  text-align: center;
}
lyte-modal-footer.right {
  text-align: left;
}
lyte-modal-footer lyte-button {
  margin-right: 7px;
}
lyte-modal-footer lyte-button:first-child {
  margin-right: 0;
}
.lyteModalFromLeft,
.lyteModalFromRight,
.lyteModalFromTop,
.lyteModalFromBottom,
.lyteModalFadeIn {
  opacity: 1;
}
.lyteModalHeaderDraggable {
  cursor: move;
  touch-action: none;
}
.lyteModal.lyteZoom {
  transform-origin: center;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/modal.less file
 */
/* modal Styles ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Gridstack styles BEGINS  */
lyte-gridstack {
  display: block;
  position: relative;
  height: auto;
  width: 1090px;
  color: #333;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 14px;
}
.lyteGridstackScope {
  outline: none;
  overflow: auto;
  position: relative;
  transition: height 0.3s ease;
  background: #ebebeb;
  background-repeat: repeat;
  min-height: 600px;
}
.lyteGridstackHandler {
  background: #fff;
  border: 1px solid #e1e0e0;
  position: absolute;
  overflow: auto;
  cursor: move;
  box-sizing: border-box;
  border-radius: 2px;
  transition: all 0.2s linear;
}
.lyteGridstackHandler:hover {
  border-color: #ccc;
}
.lyteGridstackHandler.gridSelected,
.lyteGridstackHandler.lyteGridFocused {
  z-index: 22;
  position: absolute;
  cursor: move;
  box-sizing: border-box;
  border: 1px solid #5ba1e5;
  overflow: visible;
  transition: none;
}
.lyteGridstackHandler .lyteGridResize {
  display: none;
}
.lyteGridstackHandler.lyteGridFocused .lyteGridResize {
  display: block;
}
.lyteGridstackHandler.lyteGridStackMove .lyteGridResize {
  display: none;
}
lyte-gridstack:not(.gridFreezeMode) .lyteBestFit {
  z-index: 0;
  position: absolute;
  opacity: 0.4;
}
lyte-gridstack:not(.gridFreezeMode) .lyteBestFit.lyteGrid {
  background: #b1aeae;
}
lyte-grid-content {
  top: 0px;
  bottom: 0px;
  right: 0px;
  left: 0px;
  position: absolute;
}
lyte-gridstack .lyteGridResize {
  height: 7px;
  width: 7px;
  z-index: 20;
  border: 1px solid #5ba1e5;
  background: #fff;
  position: absolute;
}
lyte-gridstack .lyteGridStackTop {
  right: calc(50% - 4px);
  top: -5px;
  cursor: n-resize;
}
lyte-gridstack .lyteGridStackTopLeft {
  right: -5px;
  top: -5px;
  cursor: ne-resize;
}
lyte-gridstack .lyteGridStackTopRight {
  left: -5px;
  top: -5px;
  cursor: nw-resize;
}
lyte-gridstack .lyteGridStackBottom {
  right: calc(50% - 4px);
  bottom: -5px;
  cursor: s-resize;
}
lyte-gridstack .lyteGridStackBottomLeft {
  right: -5px;
  bottom: -5px;
  cursor: se-resize;
}
lyte-gridstack .lyteGridStackBottomRight {
  left: -5px;
  bottom: -5px;
  cursor: sw-resize;
}
lyte-gridstack .lyteGridStackRight {
  top: calc(50% - 4px);
  left: -5px;
  cursor: col-resize;
}
lyte-gridstack .lyteGridStackLeft {
  top: calc(50% - 4px);
  right: -5px;
  cursor: col-resize;
}
lyte-gridstack.gridFreezeMode .lyteGridstackHandler {
  cursor: default;
}
lyte-gridstack.gridFreezeMode .lyteGridstackHandler.lyteGridFocused {
  border-color: #e1e0e0;
}
lyte-gridstack.gridFreezeMode .lyteGridstackHandler .lyteGridResize {
  display: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/gridstack.less file
 */
/* Gridstack styles ENDS  */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Menu CSS BEGINS  */
lyte-menu-box {
  box-sizing: border-box;
  z-index: 1060;
  vertical-align: middle;
  width: auto;
  position: absolute;
  top: -9999px;
  right: -9999px;
  outline: none;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  box-shadow: 0px 1px 3px 0px rgba(134, 134, 134, 0.4);
  border-radius: 2px;
}
lyte-menu-body {
  overflow: auto;
  display: block;
  outline: none;
  background: #fff;
  border: 1px solid #d6d6d6;
  border-radius: 2px;
  padding: 5px 0;
}
lyte-menu-item {
  position: relative;
  cursor: pointer;
  display: flex;
  white-space: nowrap;
  text-align: right;
  font-size: 15px;
  padding: 5px 15px;
  z-index: 1;
}
lyte-menu-item:hover {
  background: #ebebeb;
}
lyte-menu-label {
  font-size: 14px;
  color: #111;
  margin-left: 30px;
}
lyte-menu-header {
  display: block;
  height: auto;
  color: #111;
  font-family: 'LatoBold', 'Open Sans', sans-serif;
  font-size: 14px;
  text-align: right;
  cursor: default;
  padding: 3px 15px 4px 15px;
}
lyte-menu-description {
  font-size: 14px;
  margin-right: auto;
  opacity: 0.5;
  color: #111;
}
lyte-menu-group {
  border-bottom: 1px solid #e5e5e5;
  display: block;
  padding: 5px 0;
}
lyte-menu-group:first-of-type {
  border-top: 0;
  padding-top: 0;
}
lyte-menu-group:last-of-type {
  border-bottom: 0;
  padding-bottom: 0;
}
lyte-menu-group:last-of-type ~ lyte-menu-item {
  border-top: 1px solid #e5e5e5;
}
lyte-menu {
  display: none;
}
.lytemenufreezelayer {
  opacity: 0.1;
  background: #fff;
  position: fixed;
  z-index: 1055;
}
.lytemenufreezelayer.top {
  top: 0;
  width: 100%;
}
.lytemenufreezelayer.bottom {
  bottom: 0;
  width: 100%;
}
.lytemenufreezelayer.left {
  left: 0;
}
.lytemenufreezelayer.right {
  right: 0;
  width: 100%;
}
.lytemenufreezelayer.nogroup {
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
}
.lyteMenuWrapperDiv {
  overflow: auto;
}
lyte-menu-box .lyteArrow {
  width: 11px;
  height: 11px;
  position: absolute;
  background: #fff;
  transform: rotate(45deg);
}
lyte-menu-box .lyteArrow::after,
lyte-menu-box .lyteArrow::before {
  content: none;
}
lyte-menu-box .lyteArrow.lyteArrowTop {
  box-shadow: -1px -1px 0 0 #d6d6d6;
  top: -4px;
}
lyte-menu-box .lyteArrow.lyteArrowBottom {
  box-shadow: 1px 1px 0 0 #d6d6d6;
  bottom: -4px;
}
lyte-menu-box .lyteArrow.lyteArrowLeft {
  box-shadow: 1px -1px 0 0 #d6d6d6;
  right: -4px;
}
lyte-menu-box .lyteArrow.lyteArrowRight {
  box-shadow: -1px 1px 0 0 #d6d6d6;
  left: -4px;
  right: unset;
}
.lyteMenuHidden {
  display: none !important;
}
lyte-menu-box.lyteAnimate {
  transition: top 0.4s ease;
}
lyte-menu-box.lyteAnimate lyte-menu-body {
  transition: height 0.4s ease;
  overflow: hidden;
}
.lyteHoverMenu lyte-menu-body::before {
  content: '';
  position: absolute;
}
.lyteHoverMenu.topPlace lyte-menu-body::before,
.lyteHoverMenu.bottomPlace lyte-menu-body::before {
  height: 10px;
  left: 0;
  right: 0;
}
.lyteHoverMenu.leftPlace lyte-menu-body::before,
.lyteHoverMenu.rightPlace lyte-menu-body::before {
  width: 10px;
  top: 0;
  bottom: 0;
}
.lyteHoverMenu.bottomPlace lyte-menu-body::before {
  top: -10px;
}
.lyteHoverMenu.topPlace lyte-menu-body::before {
  bottom: -10px;
}
.lyteHoverMenu.leftPlace lyte-menu-body::before {
  right: -10px;
}
.lyteHoverMenu.rightPlace lyte-menu-body::before {
  left: -10px;
}
.lyteBodyWrapper {
  overflow: hidden;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/menu.less file
 */
/* Menu CSS ENDS  */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Navigator CSS BEGINS  */
lyte-navigator {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 14px;
  cursor: default;
}
.lyteNavigator {
  display: flex;
  align-items: center;
  -webkit-user-select: none;
  -ms-user-select: none;
  -moz-user-select: none;
}
/*  Single Arrow related common code BEGINS   */
.lyteNavigator .lyteIconSingleFront::before,
.lyteNavigator .lyteIconSingleBack::before,
.lyteSingleFront lyte-nav-arrow,
.lyteSingleBack lyte-nav-arrow {
  width: 8px;
  height: 15px;
  display: inline-block;
  background-image: url(../../images/sprite_lyte.svg);
  opacity: 0.9;
  transform: scale(0.8) rotate(180deg);
  cursor: pointer;
}
.lyteNavigator .lyteIconSingleBack::before,
.lyteSingleBack lyte-nav-arrow {
  background-position: -58px -29px;
}
.lyteNavigator .lyteIconSingleBack:not(.lyteDisabled):hover::before,
.lyteSingleBack:not(.lyteDisabled):hover lyte-nav-arrow {
  background-position: -21px -77px;
  opacity: 1;
}
.lyteNavigator .lyteIconSingleFront::before,
.lyteSingleFront lyte-nav-arrow {
  background-position: -41px -29px;
}
.lyteNavigator .lyteIconSingleFront:not(.lyteDisabled):hover::before,
.lyteSingleFront:not(.lyteDisabled):hover lyte-nav-arrow {
  background-position: -4px -77px;
  opacity: 1;
}
/*  Single Arrow related common code ENDS   */
/*  Double Arrow related common code BEGINS   */
.lyteDoubleFront lyte-nav-arrow,
.lyteDoubleBack lyte-nav-arrow,
.lyteNavigator .lyteIconDoubleBack::before,
.lyteNavigator .lyteIconDoubleFront::before {
  background-image: url(../../images/sprite_lyte.svg);
  width: 12px;
  height: 13px;
  opacity: 0.7;
  display: inline-block;
  cursor: pointer;
  transform: rotate(180deg);
}
.lyteDoubleBack lyte-nav-arrow,
.lyteNavigator .lyteIconDoubleBack::before {
  background-position: -30px -135px;
}
.lyteDoubleFront lyte-nav-arrow,
.lyteNavigator .lyteIconDoubleFront::before {
  background-position: -12px -135px;
}
.lyteDoubleBack:not(.lyteDisabled):hover lyte-nav-arrow,
.lyteNavigator .lyteIconDoubleBack:not(.lyteDisabled):hover::before {
  background-position: -70px -135px;
}
.lyteDoubleFront:not(.lyteDisabled):hover lyte-nav-arrow,
.lyteNavigator .lyteIconDoubleFront:not(.lyteDisabled):hover::before {
  background-position: -52px -135px;
}
/*  Double Arrow related common code ENDS   */
/*  Default type navigator code BEGINS  */
.lyteNavigatorMidPoint {
  margin: 0 20px;
  color: #333;
  cursor: default;
}
.lyteNavigatorText {
  margin: 0 10px;
  color: #a2a2a2;
}
.lyteNavigator .lyteIconSingleBack,
.lyteNavigator .lyteIconSingleFront,
.lyteNavigator .lyteIconDoubleBack,
.lyteNavigator .lyteIconDoubleFront {
  cursor: pointer;
  position: relative;
  width: 25px;
  height: 25px;
}
.lyteNavigator .lyteIconDoubleBack::before,
.lyteNavigator .lyteIconDoubleFront::before,
.lyteNavigator .lyteIconSingleFront::before,
.lyteNavigator .lyteIconSingleBack::before {
  content: '';
  display: block;
  margin: auto;
}
.lyteNavigator .lyteIconSingleFront.lyteDisabled,
.lyteNavigator .lyteIconDoubleFront.lyteDisabled,
.lyteNavigator .lyteIconSingleBack.lyteDisabled,
.lyteNavigator .lyteIconDoubleBack.lyteDisabled {
  opacity: 0.4;
  cursor: not-allowed;
  pointer-events: none;
}
/*  Default type navigator code ENDS  */
/*  Border type and Simple type common code BEGINS  */
.lytepagination:not(.textNavLink) .lyteNavArrow lyte-nav-arrow,
.lytepagination:not(.textNavLink) .lyteNavArrowBorder lyte-nav-arrow {
  color: transparent;
  font-size: 14px;
  line-height: 18px;
}
.lytepagination:not(.textNavLink) .lyteNavArrowBorder.lyteSingleBack lyte-nav-arrow {
  line-height: 19px;
}
.lytepage,
.lyteNavArrowBorder,
.lyteNavArrow {
  display: inline-block;
  vertical-align: middle;
}
.lytepagination .lyteborder,
.lytepagination .lytesimple {
  text-decoration: none;
  text-align: center;
  cursor: pointer;
  color: #333;
}
.lytepagination .lyteborder.dots3,
.lytepagination .lytesimple.dots3 {
  border: 0;
  padding: 0;
  margin: 0;
  color: #333;
  vertical-align: top;
  pointer-events: none;
}
.lytepagination .lyteDisabled.lyteNavArrow,
.lytepagination .lyteDisabled.lyteNavArrowBorder {
  opacity: 0.6;
  cursor: not-allowed;
  pointer-events: none;
}
.lyteSingleFront.lyteDisabled lyte-nav-arrow,
.lyteSingleBack.lyteDisabled lyte-nav-arrow {
  opacity: 0.7;
  cursor: not-allowed;
  pointer-events: none;
}
/*  Border type and Simple type common code ENDS  */
/*  Border type navigator  BEGINS  */
.lytepagination .lyteborder {
  height: 22px;
  padding: 2.5px;
  border: 1px solid #c4c4c4;
  border-radius: 3px;
  margin: 0px 5px;
  min-width: 22px;
  line-height: 22px;
  display: inline-block;
}
.lytepagination .lyteborder:hover {
  border-color: #aaa;
  color: #111;
}
.lyteborder.lyteNavArrowBorder {
  width: 22px;
  line-height: 27px;
}
.lyteborder.lyteNavArrowBorder:hover {
  border-color: #5ba1e5;
}
.lytepagination .lyteborder.lyteActiveAdd,
.lytepagination .lyteborder.lyteActiveAdd:hover {
  border-color: #5ba1e5;
  color: #5ba1e5;
  cursor: default;
}
.lyteDisabled.lyteNavArrowBorder,
.lyteDisabled.lyteNavArrowBorder:hover {
  border-color: #c4c4c4;
}
/*  Border type navigator ENDS  */
/*  Simple type navigator BEGINS    */
.lyteNavArrow,
.lytepagination .lytesimple {
  border: 0;
  width: 25px;
  height: 25px;
  padding: 2.5px;
  line-height: 25px;
  border-radius: 50%;
  margin: 2.5px;
  display: inline-block;
  text-align: center;
  cursor: pointer;
}
.lyteNavArrow lyte-nav-arrow {
  margin-top: 5px;
}
.lyteNavArrow.lyteDoubleFront lyte-nav-arrow,
.lyteNavArrow.lyteDoubleBack lyte-nav-arrow {
  margin-top: 6px;
}
.lytepagination .lytesimple:hover {
  background: #e6f3fd;
}
.lytepagination .lytesimple.lyteActiveAdd,
.lytepagination .lytesimple.lyteActiveAdd:hover {
  background: #5ba1e5;
  color: #fff;
}
.lytepagination .lytesimple.dots3 {
  vertical-align: middle;
  line-height: 15px;
}
/*  Simple type navigator ENDS    */
/*  Navigator with Text value styles BEGINS  */
.lytepagination.textNavLink .lyteNavArrow,
.lytepagination.textNavLink .lyteborder.lyteNavArrowBorder {
  width: auto;
  height: auto;
  border: 0;
  line-height: 20px;
  color: #333;
}
.lytepagination.textNavLink .lyteNavArrow:hover,
.lytepagination.textNavLink .lyteborder.lyteNavArrowBorder:hover {
  color: #111;
}
.lytepagination.textNavLink lyte-nav-arrow {
  width: auto;
  height: auto;
  background-image: none;
  transform: scale(1);
  opacity: 1;
}
.lytepagination.textNavLink .lyteNavArrow lyte-nav-arrow {
  margin-top: 0;
}
/*  Navigator with Text value styles ENDS  */
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/navigator.less file
 */
/* Navigator CSS ENDS  */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Search CSS BEGINS */
.lyteSearchHidden {
  display: none !important;
}
lyte-search[lt-prop-close-icon="true"] input {
  padding-left: 30px;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/search.less file
 */
/* Search CSS ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Slider CSS BEGINS  */
lyte-slider {
  display: inline-block;
}
lyte-slider * {
  box-sizing: content-box;
}
lyte-slider .lyteSlide {
  height: 100%;
}
.lyteRangeSlider,
.lyteSliderFill {
  display: block;
  border-radius: 10px;
  cursor: pointer;
}
.lyteRangeSlider {
  height: 8px;
  background: #dee2ed;
  position: relative;
  outline: none;
}
.lyteSliderFill {
  background: #5ba1e5;
  position: absolute;
  top: 0;
  /*  Altering this may cause alignment issue */
}
.lyteSlide,
.lyteSliderHandler {
  outline: none;
}
.lyteSliderHandler {
  z-index: 5;
}
.lyteSliderHandler.lyteMultiSliderSelected {
  z-index: 10;
}
.lyteSliderDisabled {
  pointer-events: none;
  opacity: 0.5;
}
.lyteSquare.lyteSliderHandler,
.lyteCircle.lyteSliderHandler {
  width: 12px;
  height: 12px;
  background: #fff;
  border-radius: 50%;
  border: 2px solid #4495e4;
  cursor: pointer;
  position: absolute;
  top: -4px;
  left: 10px;
}
.lyteSquare.lyteSliderHandler {
  border-radius: 0;
}
.lyteRangeSlider .lyteScaleLine .lyteScalLable {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 12px;
  color: #111;
  padding-top: 10px;
  display: inline-block;
}
/*  Horizontal slider related CSS Starts  */
.lyteRangeSlider.lyteHorizontal .lyteScaleOption {
  position: absolute;
  top: 15px;
  left: 0;
  /*  Altering this may cause alignment issue */
  width: 100%;
  height: 10px;
}
.lyteRangeSlider .lyteScaleLine {
  width: 18px;
  height: 8px;
  text-align: center;
  display: inline-block;
  position: absolute;
  margin-right: -9px;
  left: 20px;
}
.lyteScaleLine span:first-child {
  height: 100%;
  width: 2px;
  background: #c0c0c0;
  display: inline-block;
  position: absolute;
  top: 0;
  left: 8px;
}
.lyteRangeSlider.lyteHorizontal .lyteSliderFill {
  height: 100%;
}
.lyteRangeSlider.lyteHorizontal .lyteArrow.lyteSliderHandler {
  border: 2px solid #4495e4;
  width: 10px;
  height: 9px;
  border-bottom-width: 1px;
  top: -4px;
  background: #fff;
  cursor: pointer;
  position: absolute;
  left: 13px;
}
.lyteRangeSlider.lyteHorizontal .lyteArrow.lyteSliderHandler::after,
.lyteRangeSlider.lyteHorizontal .lyteArrow.lyteSliderHandler::before {
  content: "";
  border-style: solid;
  border-color: transparent;
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
  left: 0;
}
.lyteRangeSlider.lyteHorizontal .lyteArrow.lyteSliderHandler::before {
  border-top-color: #4495e4;
  border-width: 7px;
  margin-left: -2px;
  top: 10px;
}
.lyteRangeSlider.lyteHorizontal .lyteArrow.lyteSliderHandler::after {
  border-top-color: #fff;
  border-width: 5px;
  margin-left: 0;
  top: 9px;
}
/*  Horizontal slider related CSS Ends  */
/*  Vertical slider related CSS  Begins  */
.lyteRangeSlider.lyteVertical {
  width: 8px;
  height: 100%;
}
.lyteVertical .lyteSliderFill {
  width: 8px;
}
.lyteVertical .lyteCircle.lyteSliderHandler {
  top: 10px;
  left: -4px;
}
.lyteVertical .lyteSquare.lyteSliderHandler {
  right: -4px;
}
.lyteVertical.lyteRangeSlider .lyteScaleLine .lyteScalLable {
  position: absolute;
  padding-top: 0;
  top: -10px;
  right: 10px;
}
.lyteVertical.lyteRangeSlider .lyteArrow .lyteScaleLine .lyteScalLable {
  top: -10px;
  right: 10px;
}
.lyteVertical .lyteArrow.lyteSliderHandler,
.lyteVertical .lyteArrowLeft.lyteSliderHandler {
  top: 13px;
  width: 9px;
  height: 10px;
  border: 2px solid #4495e4;
  background: #fff;
  cursor: pointer;
  position: absolute;
}
.lyteVertical .lyteArrow.lyteSliderHandler {
  border-left-width: 1px;
  right: -4px;
}
.lyteVertical .lyteArrowLeft.lyteSliderHandler {
  border-right-width: 1px;
  right: 0;
}
.lyteVertical .lyteArrow.lyteSliderHandler::after,
.lyteVertical .lyteArrow.lyteSliderHandler::before,
.lyteVertical .lyteArrowLeft.lyteSliderHandler::after,
.lyteVertical .lyteArrowLeft.lyteSliderHandler::before {
  content: "";
  border-style: solid;
  border-color: transparent;
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none;
}
.lyteVertical .lyteArrow.lyteSliderHandler::before,
.lyteVertical .lyteArrowLeft.lyteSliderHandler::before {
  border-color: transparent;
  border-width: 7px;
  margin-top: -2px;
}
.lyteVertical .lyteArrow.lyteSliderHandler::before {
  border-right-color: #4495e4;
  right: 10px;
}
.lyteVertical .lyteArrowLeft.lyteSliderHandler::before {
  border-left-color: #4495e4;
  left: 10px;
}
.lyteVertical .lyteArrow.lyteSliderHandler::after,
.lyteVertical .lyteArrowLeft.lyteSliderHandler::after {
  border-color: transparent;
  border-width: 5px;
  margin-top: 0;
}
.lyteVertical .lyteArrow.lyteSliderHandler::after {
  right: 9px;
  border-right-color: #fff;
}
.lyteVertical .lyteArrowLeft.lyteSliderHandler::after {
  left: 9px;
  border-left-color: #fff;
}
.lyteVertical.lyteRangeSlider .lyteScaleOption {
  position: absolute;
  top: 0;
  /*  Altering this may cause alignment issue */
  right: 15px;
  width: 10px;
  height: 100%;
}
.lyteVertical.lyteRangeSlider .lyteScaleLine {
  width: 6px;
  height: 18px;
  position: absolute;
  margin-top: 0;
  margin-right: -6px;
  top: 20px;
  right: 6px;
}
.lyteVertical.lyteRangeSlider .lyteArrow .lyteScaleLine {
  right: 8px;
}
.lyteVertical .lyteScaleLine span:first-child {
  height: 2px;
  width: 6px;
  left: 0;
  top: -1px;
}
.lyteVertical.lyteRangeSlider .lyteArrowLeft .lyteScaleLine .lyteScalLable {
  top: -8px;
  right: unset;
  left: 10px;
}
.lyteVertical.lyteRangeSlider .lyteArrowLeft.lyteScaleOption {
  right: -15px;
}
/*  Vertical slider related CSS  Ends  */
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/slider.less file
 */
/* Slider CSS ENDS  */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* Step CSS BEGINS   */
lyte-step {
  display: inline-block;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 14px;
}
lyte-step * {
  box-sizing: content-box;
}
/*  Slash and Arrow related CSS BEGINS  */
.lyteStepArrow lyte-step-item,
.lyteStepSlash lyte-step-item {
  display: inline-block;
  color: #333;
  margin-left: 10px;
}
.lyteStepArrow lyte-step-item:hover,
.lyteStepSlash lyte-step-item:hover {
  color: #111;
}
.lyteStepArrow lyte-step-item:last-of-type,
.lyteStepSlash lyte-step-item:last-of-type {
  margin-left: 0;
}
.lyteStepArrow lyte-step-body,
.lyteStepSlash lyte-step-body {
  cursor: pointer;
}
.lyteStepArrow .lyteActive,
.lyteStepSlash .lyteActive {
  color: #2C7BD0;
}
.lyteStepArrow .lyteActive:last-of-type,
.lyteStepArrow .lyteCompleted,
.lyteStepSlash .lyteActive:last-of-type,
.lyteStepSlash .lyteCompleted {
  color: #72c880;
}
.lyteStepSlash lyte-step-body::after {
  content: '/';
  margin-right: 10px;
}
.lyteStepArrow lyte-step-body::after {
  content: '>';
  margin-right: 10px;
}
.lyteStepArrow lyte-step-item:last-of-type lyte-step-body::after,
.lyteStepSlash lyte-step-item:last-of-type lyte-step-body::after {
  content: none;
}
/*  Slash and Arrow related CSS ENDS  */
/*   Bullet Step related CSS BEGINS    */
.lyteStepBullet {
  display: flex;
  justify-content: center;
}
.lyteStepBullet lyte-step-item {
  width: 150px;
  display: flex;
  flex-wrap: wrap;
  font-size: 14px;
  align-content: flex-start;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-start;
  z-index: 0;
}
.lyteStepBullet lyte-step-head {
  width: 20px;
  height: 20px;
  border: 2px solid transparent;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  text-indent: -10px;
  color: transparent;
  cursor: pointer;
}
.lyteStepBullet lyte-step-head::before {
  content: '';
  width: 10px;
  height: 10px;
  display: inline-block;
  border-radius: 50%;
  background: #3ac998;
  transform: scale(1);
  transition: transform 0.3s ease;
  position: relative;
  z-index: 10;
}
.lyteStepBullet lyte-step-head:hover::before {
  transform: scale(1.2);
}
.lyteStepBullet .lyteActive lyte-step-head {
  border-color: #3ac998;
  background: #fff;
}
.lyteStepBullet .lyteActive:last-of-type lyte-step-head,
.lyteStepBullet .lyteCompleted lyte-step-head {
  border-color: #3ac998;
  background: #3ac998;
}
.lyteStepBullet lyte-step-item.lyteActive:last-of-type lyte-step-head::before,
.lyteStepBullet .lyteCompleted lyte-step-head::before {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -1px -28px;
  width: 15px;
  height: 12px;
  transform: scale(1);
}
.lyteStepBullet .lyteActive lyte-step-head::before {
  transform: scale(1);
}
.lyteStepBullet lyte-step-head::after {
  content: '';
  position: absolute;
  height: 2px;
  background: #d4e9e2;
  width: 140px;
  vertical-align: middle;
  right: 15px;
  z-index: -1;
}
.lyteStepBullet .lyteCompleted lyte-step-head::after {
  background: #3ac998;
}
.lyteStepBullet lyte-step-item:last-of-type {
  width: 100px;
}
.lyteStepBullet lyte-step-item:last-of-type lyte-step-head::after {
  content: none;
}
.lyteStepBullet lyte-step-body {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #949d9a;
  font-size: 14px;
  display: block;
  position: relative;
  text-align: center;
  padding: 10px 0;
  transform: translateX(calc(50% - 13px));
  cursor: pointer;
}
.lyteStepBullet .lyteCompleted lyte-step-body,
.lyteStepBullet .lyteActive lyte-step-body {
  color: #3ac998;
}
/*   Bullet Step related CSS ENDS    */
/*   Flat Step related CSS BEGINS   */
.lyteStepFlat {
  display: flex;
  counter-reset: stepSetNumber;
}
.lyteStepFlat lyte-step-item {
  background: #fff;
  border: 1px solid #c3c3c3;
  border-left: none;
  border-right: none;
  padding: 0 30px;
  position: relative;
  cursor: pointer;
  color: #333;
}
.lyteStepFlat lyte-step-item:first-child {
  padding-right: 15px;
  border-right: 1px solid #c3c3c3;
}
.lyteStepFlat lyte-step-item:last-of-type {
  border-left: 1px solid #c3c3c3;
}
.lyteStepFlat lyte-step-item::before,
.lyteStepFlat lyte-step-item::after {
  content: '';
  width: 0;
  height: 0;
  position: absolute;
}
.lyteStepFlat lyte-step-item::before {
  border-top: 16px solid transparent;
  border-bottom: 16px solid transparent;
  border-right: 18px solid #fff;
  left: -18px;
  top: 0;
  z-index: 10;
}
.lyteStepFlat lyte-step-item::after {
  border-top: 17px solid transparent;
  border-bottom: 17px solid transparent;
  border-right: 19px solid #c3c3c3;
  left: -19px;
  top: -1px;
  z-index: 9;
}
.lyteStepFlat lyte-step-item:last-of-type::before,
.lyteStepFlat lyte-step-item:last-of-type::after {
  content: none;
}
.lyteStepFlat lyte-step-item.lyteActive,
.lyteStepFlat lyte-step-item.lyteCompleted {
  background: #1d414e;
  border-top-color: #1d414e;
  border-bottom-color: #1d414e;
  color: #fff;
}
.lyteStepFlat lyte-step-item.lyteActive:first-child,
.lyteStepFlat lyte-step-item.lyteCompleted:first-child {
  border-right-color: #1d414e;
}
.lyteStepFlat lyte-step-item.lyteActive:last-of-type,
.lyteStepFlat lyte-step-item.lyteCompleted:last-of-type {
  border-left-color: #1d414e;
}
.lyteStepFlat lyte-step-item.lyteActive::after,
.lyteStepFlat lyte-step-item.lyteActive::before,
.lyteStepFlat lyte-step-item.lyteCompleted::before {
  border-right-color: #1d414e;
}
.lyteStepFlat lyte-step-item.lyteCompleted::after {
  border-right-color: #fff;
}
.lyteStepFlat lyte-step-body {
  display: inline-block;
  padding: 6px 30px 6px 15px;
  position: relative;
  white-space: nowrap;
}
.lyteStepFlat lyte-step-body::before {
  counter-increment: stepSetNumber;
  content: counter(stepSetNumber);
  color: #666;
  position: absolute;
  width: 22px;
  height: 22px;
  border: 1px solid #c3c3c3;
  right: 0;
  top: calc(50% - 12px);
  text-align: center;
  border-radius: 50%;
}
.lyteStepFlat lyte-step-item.lyteActive lyte-step-body::before,
.lyteStepFlat lyte-step-item.lyteCompleted lyte-step-body::before {
  color: #fff;
  border: 1px solid #fff;
}
.lyteStepFlat lyte-step-item:hover {
  background: #f5f5f5;
}
.lyteStepFlat lyte-step-item:hover::before {
  border-right-color: #f5f5f5;
}
.lyteStepFlat lyte-step-item.lyteActive:hover,
.lyteStepFlat lyte-step-item.lyteCompleted:hover {
  background: #1d414e;
}
.lyteStepFlat lyte-step-item.lyteActive:hover::before,
.lyteStepFlat lyte-step-item.lyteCompleted:hover::before {
  border-right-color: #1d414e;
}
/*   Flat Step related CSS ENDS   */
/*  Advanced Step related CSS BEGINS    */
.lyteStepAdvanced lyte-step-structure {
  transition: opacity 0.3s linear;
  display: flex;
  white-space: normal;
}
.lyteStepAdvanced .lyteStepFade {
  opacity: 0;
}
.lyteStepAdvanced lyte-step-item {
  background: #dce9f8;
  border: 1px solid transparent;
  border-left: none;
  border-right: none;
  padding: 5px 30px;
  position: relative;
  cursor: pointer;
  color: #333;
}
.lyteStepAdvanced lyte-step-backward + lyte-step-item {
  border-right: 1px solid #fff;
}
.lyteStepAdvanced lyte-step-body {
  white-space: nowrap;
}
.lyteStepAdvanced lyte-step-item:hover {
  background: #b9d5f5;
}
.lyteStepAdvanced lyte-step-item.lyteCompleted {
  background: #adccf0;
}
.lyteStepAdvanced lyte-step-item.lyteActive {
  background: #3891f8;
  color: #fff;
}
.lyteStepAdvanced lyte-step-forward::after,
.lyteStepAdvanced lyte-step-item::after,
.lyteStepAdvanced lyte-step-backward + lyte-step-item::before {
  content: '';
  width: 18px;
  height: 18px;
  position: absolute;
  background: inherit;
  top: 6px;
}
.lyteStepAdvanced lyte-step-forward::after,
.lyteStepAdvanced lyte-step-item::after {
  border-top: 1px solid #fff;
  border-right: 1px solid #fff;
  transform: rotate(-135deg) skew(15deg, 15deg);
  left: -10px;
  z-index: 9;
}
.lyteStepAdvanced lyte-step-backward + lyte-step-item::before {
  border-top: 1px solid #fff;
  border-left: 1px solid #fff;
  transform: rotate(-45deg) skew(-15deg, -15deg);
  right: -10px;
}
.lyteStepAdvanced lyte-step-backward + lyte-step-item.lyteWarning::before {
  border-top: 1px dashed #3891F8;
  border-left: 1px dashed #3891F8;
}
.lyteStepAdvanced .lyteStepLast::after,
.lyteStepAdvanced lyte-step-backward.lyteStepHidden + lyte-step-item::before {
  content: none;
}
.lyteStepAdvanced lyte-step-item.lyteWarning {
  border-top: 1px dashed #3891F8;
  border-bottom: 1px dashed #3891F8;
}
.lyteStepAdvanced lyte-step-backward + lyte-step-item.lyteWarning {
  border-right: 1px dashed #3891F8;
}
.lyteStepAdvanced lyte-step-item.lyteWarning::after {
  border-top: 1px dashed #3891F8;
  border-right: 1px dashed #3891F8;
  width: 18px;
  height: 18px;
  top: 6px;
}
.lyteStepAdvanced lyte-step-backward,
.lyteStepAdvanced lyte-step-forward {
  background: #dce9f8;
  border-top: 1px solid #dce9f8;
  border-bottom: 1px solid #dce9f8;
  padding: 5px 30px;
  position: relative;
  cursor: pointer;
  color: #333;
}
.lyteStepAdvanced lyte-step-backward:hover,
.lyteStepAdvanced lyte-step-forward:hover {
  background: #b9d5f5;
}
.lyteStepAdvanced lyte-step-backward::before {
  content: '';
  width: 23px;
  height: 23px;
  position: absolute;
  background: inherit;
  border-bottom: 1px solid #fff;
  border-left: 1px solid #fff;
  transform: rotate(-135deg);
  right: -13px;
  top: 3px;
  z-index: 9;
}
.lyteStepAdvanced lyte-step-forward.lyteStepHidden,
.lyteStepAdvanced lyte-step-backward.lyteStepHidden {
  display: none;
}
/*  Advanced Step related CSS ENDS    */
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/step.less file
 */
/* Step CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/*  Lyte Table CSS BEGINS   */
lyte-table {
  display: block;
  height: inherit;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
}
lyte-table-structure {
  display: table;
  position: relative;
  background: #fff;
  box-sizing: border-box;
}
lyte-tr {
  display: table-row;
}
lyte-tr.lyteTableDummyRow {
  position: relative;
}
lyte-col {
  display: table-column;
}
lyte-colgroup {
  display: table-column-group;
}
lyte-thead {
  display: table-header-group;
}
lyte-th {
  cursor: default;
  background: #f7f7f7;
  text-align: right;
  color: #333;
  font-family: 'LatoBold', 'Open Sans', sans-serif;
  font-size: 14px;
  outline: none;
  padding: 12px 15px;
  position: relative;
  display: table-cell;
  vertical-align: middle;
  min-width: 50px;
  box-sizing: border-box;
  white-space: nowrap;
  text-transform: capitalize;
}
lyte-th.tableRowFixed {
  z-index: 6;
}
.lyteTableFixed {
  z-index: 7;
  box-shadow: -3px 0 7px -2px rgba(0, 0, 0, 0.2);
}
lyte-th.tableRowFixed.lyteTableFixed {
  z-index: 8;
}
lyte-th:last-of-type lyte-tablehead-resize {
  cursor: default;
  position: absolute;
  left: 0;
  height: 0px;
  width: 0;
  top: 0;
  z-index: 0;
  pointer-events: none;
}
lyte-tbody {
  display: table-row-group;
}
lyte-td {
  display: table-cell;
  border-bottom: 1px solid #e2e2e2;
  vertical-align: middle;
  background: #fff;
  min-width: 50px;
  box-sizing: border-box;
  padding: 15px;
  font-size: 15px;
  white-space: nowrap;
  color: #111;
  position: relative;
}
lyte-tfoot {
  display: table-footer-group;
}
lyte-table > .lyteTableScroll {
  overflow: auto;
  max-width: 100%;
  max-height: 100%;
  outline: none;
}
lyte-table.border .lyteTableScroll {
  border-bottom: 1px solid #e2e2e2;
  border-left: 1px solid #e2e2e2;
}
lyte-table > .lyteTableScroll > lyte-yield {
  display: block;
  width: 100%;
}
lyte-table.border lyte-tbody lyte-tr:last-of-type lyte-td {
  border-bottom: 0;
}
lyte-table.border lyte-thead lyte-tr lyte-td:last-of-type,
lyte-table.border lyte-tbody lyte-tr lyte-td:last-of-type {
  border-left: 0;
}
lyte-table.border lyte-th {
  border: 1px solid #e2e2e2;
  border-bottom: none;
  border-left: none;
}
lyte-table.border lyte-th:last-of-type {
  border-left: 0;
}
lyte-table.border lyte-td {
  border: 1px solid #e2e2e2;
  border-left: 0;
  border-top: 0;
}
.lyteDualResize lyte-th:last-of-type lyte-tablehead-resize,
lyte-tablehead-resize {
  cursor: ew-resize;
  height: 100%;
  width: 21px;
  top: 0;
  z-index: 9;
  left: -12px;
  position: absolute;
}
.lyteDualResize lyte-th:last-of-type lyte-tablehead-resize {
  pointer-events: auto;
  left: 0;
}
lyte-tablehead-resize::after {
  content: '';
  position: absolute;
  width: 3px;
  height: 100%;
  left: 10px;
  background: transparent;
}
.lyteDualResize lyte-th:last-of-type lyte-tablehead-resize::after {
  left: 0;
}
lyte-th[resize="enable"]:hover lyte-tablehead-resize::after {
  background: #5ba1e5;
  opacity: 0.7;
}
lyte-th[resize="enable"] lyte-tablehead-resize:hover::after,
lyte-th[resize="enable"].resizeSelect lyte-tablehead-resize::after {
  background: #5ba1e5;
  opacity: 1;
}
lyte-table.resizing lyte-th[resize="enable"]:not(.resizeSelect):hover lyte-tablehead-resize::after {
  background: transparent;
}
lyte-table-resize {
  width: 15px;
  height: 15px;
  bottom: 0;
  cursor: sw-resize;
  z-index: 10;
  left: 0;
  position: absolute;
}
lyte-table-resize:hover {
  border-bottom: 2px solid #5ba1e5;
  border-left: 2px solid #5ba1e5;
}
lyte-table-horizontal-resize {
  width: 15px;
  height: 100%;
  bottom: 0;
  cursor: col-resize;
  z-index: 9;
  left: 0;
  position: absolute;
}
lyte-table-horizontal-resize:hover {
  border-left: 2px solid #5ba1e5;
}
lyte-table-vertical-resize {
  width: 100%;
  height: 15px;
  bottom: 0;
  cursor: row-resize;
  z-index: 9;
  left: 0;
  position: absolute;
}
lyte-table-vertical-resize:hover {
  border-bottom: 2px solid #5ba1e5;
}
.lyteTableSortHelper {
  font-family: 'LatoBold', 'Open Sans', sans-serif;
  font-size: 14px;
  position: absolute;
  z-index: 10;
  background: #fff;
  border: 1px solid #5ba1e5;
  padding: 12px 15px;
  box-sizing: border-box;
  cursor: move;
}
.sortableTable lyte-th {
  cursor: move;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/table.less file
 */
/*  Lyte Table CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
.lyteTooltip {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 13px;
  padding: 3px 8px;
  position: absolute;
  background: #222;
  color: #fff;
  text-align: center;
  border-radius: 2px;
  z-index: 1080;
  white-space: pre-wrap;
  right: -9999px;
  top: -9999px;
}
.lyteTooltip.lyteTooltipHidden {
  display: none !important;
}
.lyteTooltip.lyteTooltipCallout .lyteTooltipInnerSpan,
.lyteTooltip.lyteTooltipCallout::before {
  content: "";
  position: absolute;
  width: 10px;
  height: 10px;
  background: inherit;
  transform: rotate(45deg);
  z-index: -1;
}
.lyteTooltip.lyteTooltipCallout .lyteTooltipInnerSpan {
  transform: translateX(5px) rotate(45deg);
}
.lyteTooltip.lyteRight .lyteTooltipInnerSpan,
.lyteTooltip.lyteRight::before {
  right: -5px;
  top: calc(50% - 5px);
}
.lyteTooltip.lyteLeft .lyteTooltipInnerSpan,
.lyteTooltip.lyteLeft::before {
  left: -5px;
  top: calc(50% - 5px);
}
.lyteTooltip.lyteBottom .lyteTooltipInnerSpan,
.lyteTooltip.lyteBottom::before {
  right: calc(50% - 5px);
  top: -5px;
}
.lyteTooltip.lyteTop .lyteTooltipInnerSpan,
.lyteTooltip.lyteTop::before {
  right: calc(50% - 5px);
  bottom: -5px;
}
.lyteTooltip.lyteTopright .lyteTooltipInnerSpan,
.lyteTooltip.lyteTopright::before {
  right: 20%;
  bottom: -5px;
}
.lyteTooltip.lyteTopleft .lyteTooltipInnerSpan,
.lyteTooltip.lyteTopleft::before {
  bottom: -5px;
  right: 80%;
}
.lyteTooltip.lyteBottomright .lyteTooltipInnerSpan,
.lyteTooltip.lyteBottomright::before {
  top: -5px;
  right: 20%;
}
.lyteTooltip.lyteBottomleft .lyteTooltipInnerSpan,
.lyteTooltip.lyteBottomleft::before {
  top: -5px;
  right: 80%;
}
.lyteTooltip.lyteInnerToolAdded::before {
  content: none;
}
.lyteTooltip.whiteBg {
  background: #fff;
  border: 1px solid #c1c1c1;
  color: #111;
}
.lyteTooltip.whiteBg::before {
  background: #fff;
}
.lyteTooltip.whiteBg.lyteRight::before {
  box-shadow: 1px -1px 0 0 #c1c1c1;
  right: -4px;
  top: calc(50% - 4px);
}
.lyteTooltip.whiteBg.lyteLeft::before {
  box-shadow: -1px 1px 0 0 #c1c1c1;
  left: -4px;
  top: calc(50% - 4px);
}
.lyteTooltip.whiteBg.lyteBottom::before {
  box-shadow: -1px -1px 0 0 #c1c1c1;
  right: calc(50% - 4px);
  top: -4px;
}
.lyteTooltip.whiteBg.lyteTop::before {
  box-shadow: 1px 1px 0 0 #c1c1c1;
  right: calc(50% - 4px);
  bottom: -4px;
}
.lyteTooltip.whiteBg.lyteTopright::before {
  box-shadow: 1px 1px 0 0 #c1c1c1;
  right: 20%;
  bottom: -4px;
}
.lyteTooltip.whiteBg.lyteTopleft::before {
  box-shadow: 1px 1px 0 0 #c1c1c1;
  bottom: -4px;
  right: 80%;
}
.lyteTooltip.whiteBg.lyteBottomright::before {
  box-shadow: -1px -1px 0 0 #c1c1c1;
  top: -4px;
  right: 20%;
}
.lyteTooltip.whiteBg.lyteBottomleft::before {
  box-shadow: -1px -1px 0 0 #c1c1c1;
  top: -4px;
  right: 80%;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/tooltip.less file
 */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/*  Popover related CSS BEGINS  */
.bodyWrapper {
  overflow: hidden;
}
.popoverWrapper {
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1040;
  position: fixed;
}
.popoverWrapper.noFreeze {
  pointer-events: none;
}
.lytePopover {
  background: #fff;
  border: 1px solid #e0e0e0;
  box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.1);
  position: absolute;
  z-index: 1050;
  opacity: 0;
  border-radius: 3px;
  transition: opacity ease 0.4s;
  box-sizing: border-box;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
}
.popoverWrapper.noFreeze .lytePopover {
  pointer-events: auto;
}
.lytePopover.lyteZoom {
  transition: transform 0.4s ease, opacity 0.4s ease;
  transform: scale(0);
}
.popoverWrapper.scrollable {
  overflow: hidden;
}
.popoverWrapper.scrollable .lytePopoverContent {
  overflow: auto;
}
.popoverWrapper.scrollable .lytePopover {
  max-height: 100%;
}
lyte-popover-header {
  font-family: 'LatoBold', 'Open Sans', sans-serif;
  font-size: 16px;
  color: #222;
}
lyte-popover-header,
lyte-popover-content,
lyte-popover-footer {
  display: block;
  box-sizing: border-box;
}
lyte-popover-freeze {
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: 5;
  height: auto;
  background: #000;
  display: block;
  opacity: 0;
  transition: opacity ease 0.15s;
}
.lytePopoverClose {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -52px 0px;
  width: 13px;
  height: 13px;
  opacity: 0.5;
  cursor: pointer;
  position: absolute;
  left: 20px;
  top: 14px;
  display: block;
  transform: scale(1.3);
  z-index: 5;
}
.lytePopoverClose:hover {
  opacity: 1;
}
lyte-popover-footer.left {
  text-align: right;
}
lyte-popover-footer.center {
  text-align: center;
}
lyte-popover-footer.right {
  text-align: left;
}
lyte-popover-footer lyte-button {
  margin-right: 7px;
}
lyte-popover-footer lyte-button:first-child {
  margin-right: 0;
}
.lytePopoverArrowIcon {
  width: 11px;
  height: 11px;
  position: absolute;
  background: #fff;
  transform: rotate(45deg);
  display: block;
}
.lytePopoverArrowIcon.lytePopoverArrowTop {
  box-shadow: -1px -1px 0 0 #e0e0e0;
  top: -5px;
}
.lytePopoverArrowIcon.lytePopoverArrowBottom {
  box-shadow: 1px 1px 0 0 #e0e0e0;
  bottom: -5px;
}
.lytePopoverArrowIcon.lytePopoverArrowRight {
  box-shadow: 1px -1px 0 0 #e0e0e0;
  right: -5px;
}
.lytePopoverArrowIcon.lytePopoverArrowLeft {
  box-shadow: -1px 1px 0 0 #e0e0e0;
  left: -5px;
}
.lytePopoverHeaderDraggable {
  cursor: move;
  touch-action: none;
}
.lyteStopBodyScrolling {
  overflow: hidden;
}
.lytePopoverVisible {
  opacity: 1;
}
.lytePopoverDispNone {
  display: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/*  Popover related CSS ENDS  */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* LYTE-MESSAGEBOX BEGINS   */
.lyteMessageBoxContent {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  color: #333;
}
.lyteMessageBox {
  padding: 0 0 0 50px;
  z-index: 1080;
  background: #fff;
  border-radius: 2px;
  color: #333;
  font-size: 15px;
  transition: 0.3s all ease;
  display: block;
  animation-duration: 0.5s;
  animation-fill-mode: both;
  border: 1px solid transparent;
  position: absolute;
  min-width: 200px;
}
.lyteMessageBox.successMessageIcon {
  border-color: #49a251;
}
.lyteMessageBox.errorMessageIcon {
  border-color: #e64040;
}
.lyteMessageBox.warningMessageIcon {
  border-color: #ea8d42;
}
.lyteMessageBox.infoMessageIcon {
  border-color: #188bc7;
}
.lyteMessageBox .lyteMessageBoxSymbol {
  height: 100%;
  display: inline-block;
  position: absolute;
  width: 50px;
}
.lyteMessageBox.successMessageIcon .lyteMessageBoxSymbol {
  background: #49a251;
}
.lyteMessageBox.errorMessageIcon .lyteMessageBoxSymbol {
  background: #e64040;
}
.lyteMessageBox.warningMessageIcon .lyteMessageBoxSymbol {
  background: #ea8d42;
}
.lyteMessageBox.infoMessageIcon .lyteMessageBoxSymbol {
  background: #188bc7;
}
.lyteMessageBox .lyteMessageBoxSymbol::before {
  content: "";
  background-image: url(../../images/sprite_lyte.svg);
  position: absolute;
  display: inline-block;
  width: 22px;
  height: 20px;
  top: calc(50% - 10px);
  right: calc(50% - 11px);
}
.lyteMessageBox.successMessageIcon .lyteMessageBoxSymbol::before {
  background-position: -287px -58px;
}
.lyteMessageBox.errorMessageIcon .lyteMessageBoxSymbol::before {
  background-position: -317px -60px;
  width: 24px;
  right: calc(50% - 12px);
}
.lyteMessageBox.warningMessageIcon .lyteMessageBoxSymbol::before {
  background-position: -347px -58px;
}
.lyteMessageBox.infoMessageIcon .lyteMessageBoxSymbol::before {
  background-position: -377px -58px;
}
.lyteMessageBox .lyteMessageBoxContent {
  display: inline-block;
  max-width: 100%;
  vertical-align: top;
  padding: 10px 65px 10px 15px;
}
.lyteMessageBox .lyteMessageBoxClose {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -54px -2px;
  top: calc(50% - 4px);
  width: 8px;
  height: 8px;
  display: inline-block;
  position: absolute;
  cursor: pointer;
  left: 15px;
}
.lyteMessageBoxFadeIn {
  animation-name: lyteMsgBoxFadeIn;
}
@keyframes lyteMsgBoxFadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
.lyteMessageBoxFadeOut {
  animation-name: lyteMsgBoxFadeOut;
}
@keyframes lyteMsgBoxFadeOut {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* LYTE-MESSAGEBOX ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* LYTE-TABS CSS BEGINS */
lyte-tabs {
  display: block;
  background: #fff;
  position: relative;
  width: 100%;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
}
lyte-tab-head {
  display: flex;
  border: 1px solid #ddd;
  box-sizing: border-box;
}
lyte-tab-title {
  display: inline-block;
  font-size: 15px;
  color: #555;
  padding: 10px 5px;
  margin: 0 10px;
  cursor: pointer;
  box-sizing: border-box;
  background: #fff;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
lyte-tab-title span {
  display: inline-block;
  vertical-align: middle;
}
lyte-tab-title:hover {
  color: #111;
}
lyte-tab-title.lyteTabActive,
lyte-tab-title.lyteTabActive:hover {
  color: #2c7bd0;
  font-weight: normal;
}
lyte-tab-body {
  display: block;
  border: 1px solid #ddd;
  padding: 15px;
  font-size: 14px;
  text-align: right;
  overflow: auto;
  box-sizing: border-box;
}
lyte-tab-content {
  color: #111;
}
.lyteTabShow {
  display: block;
  flex-grow: 1;
}
.lyteTabHide {
  display: none;
}
/*  Tab top starts */
.lyteTabDefaultTop lyte-tab-body {
  border-top: 0;
}
.lyteTabDefaultTop lyte-tab-head {
  border-bottom-color: #e5e5e5;
}
.lyteTabDefaultTop lyte-tab-title {
  margin-bottom: -1px;
  border-bottom: 1px solid #e5e5e5;
}
.lyteTabDefaultTop lyte-tab-title.lyteTabActive {
  border-bottom: 1px solid #2c7bd0;
}
.lyteTabDefaultTop lyte-tab-title:hover {
  border-bottom-color: #666;
}
.lyteTabDefaultTop lyte-tab-title.lyteTabActive:hover {
  border-bottom-color: #2c7bd0;
}
/*  Tab top ends */
/*  Tab bottom starts */
.lyteTabDefaultBottom lyte-yield {
  display: flex;
  flex-direction: column;
}
.lyteTabDefaultBottom lyte-tab-head {
  order: 2;
  border-top-color: #e5e5e5;
}
.lyteTabDefaultBottom lyte-tab-body {
  order: 1;
  border-bottom: 0;
}
.lyteTabDefaultBottom lyte-tab-title {
  border-top: 1px solid #e5e5e5;
  margin-top: -1px;
}
.lyteTabDefaultBottom lyte-tab-title.lyteTabActive {
  border-top: 1px solid #2c7bd0;
}
.lyteTabDefaultBottom lyte-tab-title:hover {
  border-top-color: #666;
}
.lyteTabDefaultBottom lyte-tab-title.lyteTabActive:hover {
  border-top-color: #2c7bd0;
}
/*  Tab bottom ends */
/*  Tab left and right starts */
.lyteTabDefaultLeft lyte-yield {
  display: flex;
}
.lyteTabDefaultLeft lyte-tab-head,
.lyteTabDefaultRight lyte-tab-head {
  flex-direction: column;
  flex-grow: 1;
  padding: 10px 0;
  width: 200px;
  text-align: right;
  overflow: auto;
}
.lyteTabDefaultLeft lyte-tab-head {
  border-left: 0;
}
.lyteTabDefaultLeft lyte-tab-body,
.lyteTabDefaultRight lyte-tab-body {
  flex-grow: 10;
  width: calc(100% - 200px);
  padding-top: 18px;
}
.lyteTabDefaultLeft lyte-tab-title.lyteTabActive,
.lyteTabDefaultLeft lyte-tab-title.lyteTabActive:hover,
.lyteTabDefaultRight lyte-tab-title.lyteTabActive,
.lyteTabDefaultRight lyte-tab-title.lyteTabActive:hover {
  border-right: 1px solid #2c7bd0;
  background: #f5f5f5;
  position: relative;
  z-index: 10;
}
.lyteTabDefaultRight lyte-yield {
  display: flex;
  flex-direction: row-reverse;
}
.lyteTabDefaultRight lyte-tab-head {
  border-right: 0;
}
.lyteTabDefaultLeft lyte-tab-title,
.lyteTabDefaultRight lyte-tab-title {
  margin: 0;
  padding: 10px 15px;
  overflow: visible;
}
.lyteTabDefaultLeft lyte-tab-title:hover,
.lyteTabDefaultRight lyte-tab-title:hover {
  background: #fafafa;
}
/*  Tab left and right ends */
.lyteTabCloseIcon {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -54px -2px;
  width: 8px;
  height: 8px;
  display: inline-block;
  vertical-align: middle;
  margin-right: 10px;
}
.lyteTabAlignStart {
  justify-content: flex-start;
}
.lyteTabAlignCenter {
  justify-content: center;
}
.lyteTabAlignEnd {
  justify-content: flex-end;
}
.lyteTabOverflowV lyte-tab-title {
  overflow: visible;
}
.lyteTabForceHide {
  display: none;
}
#moreMenu {
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  opacity: 0.7;
  padding: 10px;
}
#moreMenu.lyteMenuSelected,
#moreMenu:hover {
  opacity: 1;
}
#moreMenu span {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -294px -165px;
  width: 17px;
  height: 5px;
}
.lyteTabRightCollapse {
  flex-flow: row-reverse;
  justify-content: flex-start;
}
.lyteTabVH lyte-tab-title,
.lyteTabVH .lyteMenuSelected {
  visibility: hidden;
}
lyte-tab-title.lyteTabDisable {
  pointer-events: none;
  cursor: default;
  opacity: 0.7;
}
/*  Lyte Nested Tabs CSS Begins */
.lyteNestedTab .lyteTabDefaultTop > lyte-yield {
  display: block;
}
.lyteNestedTab .lyteTabDefaultTop > lyte-yield > lyte-tab-head {
  flex-direction: row;
  padding: 0;
  width: auto;
  border: 1px solid #ddd;
  overflow: visible;
}
.lyteNestedTab .lyteTabDefaultTop > lyte-yield > lyte-tab-head lyte-tab-title {
  margin: 0 10px;
  padding: 10px 5px;
  overflow: hidden;
  margin-bottom: -1px;
  border: 0;
  border-bottom: 1px solid #e5e5e5;
}
.lyteNestedTab .lyteTabDefaultTop > lyte-yield > lyte-tab-head lyte-tab-title:hover {
  background: #fff;
  border: 0;
  border-bottom: 1px solid #666;
}
.lyteNestedTab .lyteTabDefaultTop > lyte-yield > lyte-tab-head lyte-tab-title.lyteTabActive {
  border: 0;
  border-bottom: 1px solid #2c7bd0;
  background: #fff;
}
.lyteNestedTab .lyteTabDefaultTop > lyte-yield > lyte-tab-body {
  width: auto;
  padding: 15px;
  border: 1px solid #ddd;
  border-top: 0;
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield {
  flex-direction: column;
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield > lyte-tab-head {
  flex-direction: row;
  padding: 0;
  width: auto;
  border: 1px solid #ddd;
  overflow: visible;
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield > lyte-tab-head lyte-tab-title {
  margin: 0 10px;
  padding: 10px 5px;
  overflow: hidden;
  margin-top: -1px;
  border: 0;
  border-top: 1px solid #e5e5e5;
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield > lyte-tab-head lyte-tab-title:hover {
  background: #fff;
  border: 0;
  border-top: 1px solid #666;
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield > lyte-tab-head lyte-tab-title.lyteTabActive {
  border: 0;
  border-top: 1px solid #2c7bd0;
  background: #fff;
}
.lyteNestedTab .lyteTabDefaultBottom > lyte-yield > lyte-tab-body {
  width: auto;
  padding: 15px;
  border: 1px solid #ddd;
  border-bottom: 0;
}
.lyteNestedTab .lyteTabDefaultLeft > lyte-yield {
  flex-direction: row;
}
.lyteNestedTab .lyteTabDefaultLeft > lyte-yield > lyte-tab-head {
  order: 0;
  border: 1px solid #ddd;
  border-right: 0;
}
.lyteNestedTab .lyteTabDefaultLeft > lyte-yield > lyte-tab-head lyte-tab-title {
  border: 0;
}
.lyteNestedTab .lyteTabDefaultLeft > lyte-yield > lyte-tab-head lyte-tab-title.lyteTabActive {
  border-bottom: 0;
  border-left: 1px solid #2c7bd0;
}
.lyteNestedTab .lyteTabDefaultLeft > lyte-yield > lyte-tab-body {
  border: 1px solid #ddd;
}
.lyteNestedTab .lyteTabDefaultRight > lyte-yield {
  flex-direction: row-reverse;
}
.lyteNestedTab .lyteTabDefaultRight > lyte-yield > lyte-tab-head {
  border: 1px solid #ddd;
  border-left: 0;
  order: 0;
}
.lyteNestedTab .lyteTabDefaultRight > lyte-yield > lyte-tab-head lyte-tab-title {
  border: 0;
}
.lyteNestedTab .lyteTabDefaultRight > lyte-yield > lyte-tab-head lyte-tab-title.lyteTabActive {
  border: 0;
  border-left: 1px solid #2c7bd0;
}
.lyteNestedTab .lyteTabDefaultRight > lyte-yield > lyte-tab-body {
  border: 1px solid #ddd;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* LYTE-TABS CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* LYTE-COLORPICKER BEGINS */
.lyteColorPicker {
  display: inline-block;
  border: 1px solid #e6e6e6;
  box-shadow: 0 0 5px 1px rgba(0, 0, 0, 0.1);
}
.lyteColorPicker.popColorPicker {
  display: none;
}
.lyteColorPicker__showhidecontainer {
  overflow: hidden;
  padding: 0;
  position: relative;
  text-align: right;
  font-size: 13px;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
}
/*  Colorpicker basic section related code begins    */
.lyteColorPicker__default {
  width: 220px;
  display: flex;
  flex-direction: column;
}
.lyteColorPicker__nocolorbutton {
  padding: 8px 15px 8px;
  border-bottom: 1px solid #e6e6e6;
  cursor: pointer;
}
.lyteColorPicker__noFill {
  background: url(../../images/sprite_lyte.svg);
  width: 11px;
  height: 11px;
  background-position: -43px -79px;
  opacity: 0.6;
  margin-left: 5px;
  display: inline-block;
  vertical-align: middle;
}
.lyteColorPicker__nocolorbutton svg {
  display: none;
}
.lyteColorPicker__nocolorbutton:hover {
  background: #f5f5f5;
}
.lyteColorPicker__palettecontainer {
  border-bottom: 1px solid #e6e6e6;
  order: 0;
  padding: 8px 15px 15px;
}
.lyteColorPicker__palette {
  font-size: 0;
}
.lyteColorPicker__paletteheading {
  cursor: default;
  color: #111;
  margin-bottom: 10px;
}
.lyteColorPicker__palettecontainer.usedColor__container {
  order: 1;
}
.lyteColorPicker__navigatable {
  order: 2;
  padding: 10px 15px;
  border-radius: 0 0 2px 2px;
  cursor: pointer;
}
.lyteColorPicker__navigatable:hover {
  background: #f5f5f5;
}
.lyteColorPicker__colorfieldcontainer {
  display: none;
  order: 3;
}
.lyteColorPicker__palette .standard__colors,
.lyteColorPicker__shades {
  margin: 0;
  padding: 0;
  line-height: 1;
}
.lyteColorPicker__colorpan {
  width: 15px;
  height: 15px;
  margin: 0 2px;
  border: 1px solid rgba(0, 0, 0, 0.2);
  border-radius: 0;
  display: inline-block;
  cursor: pointer;
  box-sizing: border-box;
  position: relative;
}
.default__colors .lyteColorPicker__colorpan {
  border: 1px solid transparent;
}
.default__colors:first-child .lyteColorPicker__colorpan {
  margin-bottom: 5px;
  border: 1px solid rgba(0, 0, 0, 0.2);
}
.default__colors:nth-child(2),
.default__colors:nth-child(3) {
  display: none;
}
.lyteColorPicker__colorpan:hover {
  border-color: rgba(0, 0, 0, 0.3);
}
.default__colors:first-child .lyteColorPicker__colorpan:hover {
  border-color: rgba(17, 17, 17, 0.3);
}
.lyteColorPicker__colorpan.lyteCPSelectedColor::before {
  content: '';
  position: absolute;
  border-left: 1px solid #fff;
  border-bottom: 1px solid #fff;
  width: 8px;
  height: 4px;
  top: 2px;
  left: 2px;
  transform: rotate(-45deg);
}
.lyteColorPicker__colorpan.lyteCPSelectedColor[lt-prop-title="#FFFFFF"]::before {
  border-left: 1px solid #333;
  border-bottom: 1px solid #333;
}
.lyteColorPicker__text {
  display: inline-block;
  vertical-align: middle;
  color: #111;
}
.LCP_rightArrow {
  background-image: url(../../images/sprite_lyte.svg);
  width: 4px;
  height: 7px;
  background-position: -97px -26px;
  display: inline-block;
  vertical-align: middle;
  margin-top: 3px;
  transform: rotate(180deg);
}
.lyteColorPicker__icon {
  background: url(../../images/sprite_lyte.svg);
  width: 14px;
  height: 11px;
  background-position: -110px -58px;
  opacity: 0.6;
  margin-left: 5px;
  display: inline-block;
  vertical-align: middle;
}
/*  Colorpicker basic section related code ends    */
/*  Colorpicker advanced section related code begins    */
.lyteColorPicker--advanced {
  padding: 10px;
  width: 260px;
}
.colorDiv {
  overflow: hidden;
  position: relative;
  cursor: default;
  touch-action: none;
  border: 1px solid #d6d6d6;
  border-radius: 2px;
}
#lyteCPImgDiv {
  height: 160px;
  background-image: url(../../images/lyteCPbgGradient.png);
  background-repeat: round;
}
.colorSlider_palette_circle {
  border: 2px solid #fff;
  border-radius: 50%;
  height: 8px;
  width: 8px;
  cursor: pointer;
  position: absolute;
  z-index: 10;
}
.lyteColorPicker__previewDiv {
  padding: 3px 0px;
  position: relative;
}
.lyteColorPicker__opacityslider,
.colorSlider_hue {
  position: relative;
  vertical-align: middle;
  touch-action: none;
}
.lyteColorPicker__sliderDiv {
  display: flex;
  margin: 15px 0;
}
.colorSlider_hue {
  margin-bottom: 15px;
}
.opacityslider__circlethumb,
.colorSlider_sliderHandle {
  width: 5px;
  height: 10px;
  border-radius: 2px;
  border: 1px solid #000;
  position: absolute;
  z-index: 14;
  top: 0;
  background: #fff;
}
.lyteColorPicker__transparentbg,
.colorSlider_hueBar_border {
  width: 210px;
  border-radius: 6px;
}
.opacityslider__track,
.colorSlider_hueBar {
  background-image: linear-gradient(to right, red, #ff00dd, blue, aqua, #00ff00, yellow, red);
  height: 10px;
  border-radius: 6px;
  border: 1px solid rgba(0, 0, 0, 0.3);
}
.opacityslider__track {
  background-image: none;
}
.opacityPreviewDiv__transparentbg,
.previewDiv {
  width: 32px;
  height: 32px;
  cursor: pointer;
  border-radius: 50%;
  border: 1px solid rgba(0, 0, 0, 0.3);
}
.lyteColorPicker__commandbar {
  margin: 10px 0 5px;
  display: flex;
}
.LCP_backbtn {
  margin-left: auto;
}
.selectFormat {
  width: 70px;
  display: inline-block;
  vertical-align: top;
  margin-left: 10px;
}
.selectFormat lyte-dropdown {
  display: block;
  width: 70px;
}
.selectFormat lyte-dropdown lyte-drop-button {
  font-size: 12px;
}
.lyteCPDropbox {
  width: 70px;
}
.lyteCPDropbox .lyteArrow {
  width: 70px;
}
.lyteCPDropbox lyte-drop-item {
  padding: 5px;
  font-size: 12px;
  color: #555;
}
.lyteCPDropbox lyte-drop-item[selected="true"] {
  color: #333;
}
.lyteCPDropbox lyte-drop-item[selected="true"]::before {
  content: none;
}
.selectFormat .colorPickerDD {
  padding: 5px 5px 5px 20px;
}
.selectFormat lyte-dropdown lyte-icon.dropdown {
  background-position: -14px -2px;
  width: 9px;
  height: 5px;
}
.showValue {
  display: inline-block;
  vertical-align: top;
  width: calc(100% - 85px);
}
.cpValFormatIp {
  border-spacing: 0;
}
.cpValFormatIp lyte-tr:nth-child(2) lyte-td {
  font-size: 12px;
  color: #9b9b9b;
  text-align: center;
}
.cpValFormatIp lyte-td {
  vertical-align: top;
  padding: 0;
  border-bottom: 0;
  min-width: auto;
}
.cpValFormatIp lyte-tr:first-child lyte-td {
  padding-right: 5px;
}
.cpValFormatIp lyte-tr:first-child lyte-td:first-child {
  padding-right: 0;
}
.showValue .lyteField {
  border: 1px solid #d6d6d6;
}
.showValue .lyteInputBox input {
  padding: 5px 4px;
  font-size: 12px;
  min-width: auto;
  text-align: center;
}
.showValue .lyteInputBox .lyteField:hover {
  border: 1px solid #c1c1c1;
}
.showValue .lyteInputBox.lyteInputFocus .lyteField {
  outline: none;
  border: 1px solid #c1c1c1;
}
.showValue .lyteInputBox.vertical {
  width: 40px;
}
#lyteCPShowValue {
  width: 128px;
}
#lyteCPShowValue.lyteInputBox input {
  text-align: right;
}
.lyteColorPicker__transparentbg {
  border-radius: 6px;
  background: url(../../images/lyteCP_op_slider_bg.png);
}
.lyteCP__transparentbg {
  background: url(../../images/lyteCP_op_slider_bg.png);
  border-radius: 50%;
  width: 34px;
  height: 34px;
  margin-right: auto;
}
.lyteCPHexText lyte-td:first-child {
  visibility: hidden;
}
#lyteCPHiddenInput {
  position: absolute;
  left: -9999px;
}
/*  Colorpicker advanced section related code ends    */
.lyteColorPicker__pe {
  pointer-events: none;
  cursor: default;
}
/* Temp Input error feature added by Sam */
.lyteCp__Invalid input {
  background-color: #ffdddd;
}
.lyteCp__Invalid div.lyteField {
  border: 1px solid red !important;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* LYTE-COLORPICKER ENDS */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* LYTE-PROGRESSBAR BEGINS  */
.lyteProgressBar {
  position: relative;
}
.lyteProgressBar.lyteHorizontal {
  height: 14px;
  width: calc(100% - 200px);
  background: #e5e5e5;
  border-radius: 8px;
}
.lyteProgressBar .lyteProgressStatus {
  display: block;
  height: 100%;
  border-radius: 20px;
  position: relative;
  overflow: hidden;
  background: #51a2ee;
  color: #fff;
  transition: width 0.25s;
}
.lyteProgressBar .lyteProgressStatus .progressMovingObj,
.lyteProgressBar .lyteProgressStatusStack .progressMovingObj {
  left: 0;
  width: 100%;
  height: 100%;
  display: inline-block;
  position: absolute;
  top: 0;
  box-sizing: border-box;
  background-image: linear-gradient(-45deg, rgba(221, 221, 221, 0.29) 25%, transparent 25%, transparent 50%, rgba(221, 221, 221, 0.29) 50%, rgba(221, 221, 221, 0.29) 75%, transparent 75%, transparent);
  background-size: 20px 20px;
  animation: move 1s linear infinite;
  border-radius: 20px;
}
@keyframes move {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 20px 20px;
  }
}
.lyteProgressBar .lyteProgressPercentage {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 12px;
  line-height: 14px;
  color: #fff;
  left: 50%;
  transform: translateX(-50%);
  position: absolute;
  top: 0px;
  z-index: 10;
}
.lyteProgressBar.lyteProgressCompleted .lyteProgressStatus {
  background: #3fbd5f;
}
/*  Radial progress bar related CSS -- BEGINS   */
.lyteProgressBar.lyteCircle {
  width: 100px;
  height: 100px;
}
.lyteProgressBar .lyteCircleType {
  position: relative;
  display: inline-block;
}
.lyteCircleType svg {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 17px;
  fill: #333;
}
.lyteProgressBar.lyteCircle .svgValueEle {
  transform: rotate(-90deg);
}
.lyteProgressBar.lyteCircle circle:first-child {
  stroke: #DCE0E3;
}
.lyteProgressBar.lyteCircle circle {
  transition: stroke-dashoffset 0.25s linear;
}
/*  Radial progress bar related CSS -- ENDS   */
/*  Indeterminate horizontal progress bar related CSS -- BEGINS   */
.lyteIndeterminate {
  overflow: hidden;
}
.inc {
  animation: increase 2s infinite;
}
.dec {
  animation: decrease 2s 0.5s infinite;
}
@keyframes increase {
  from {
    left: -5%;
    width: 5%;
  }
  to {
    left: 130%;
    width: 100%;
  }
}
@keyframes decrease {
  from {
    left: -80%;
    width: 80%;
  }
  to {
    left: 110%;
    width: 10%;
  }
}
/*  Indeterminate horizontal progress bar related CSS -- ENDS   */
/*  stacked progress bar related CSS -- BEGINS   */
.lyteStacked,
.lyteProgressStatusStack {
  display: flex;
  overflow: hidden;
}
.lyteStacked .lyteProgressStatusStack {
  flex-direction: column;
  justify-content: center;
  color: #fff;
  text-align: center;
  white-space: nowrap;
  background-color: #007bff;
  transition: width 2s linear;
}
/*  stacked progress bar related CSS -- ENDS   */
/*  vertical progress bar related CSS -- BEGINS   */
.lyteProgressBar.lyteVertical {
  background-color: #e5e5e5;
  background-position: 50% 50%;
  border-radius: 8px;
  display: inline-block;
  vertical-align: middle;
  box-sizing: border-box;
}
.lyteProgressBar .lyteProgressStatusVertical {
  border-radius: 8px;
  background: #51a2ee;
  width: 100%;
  position: absolute;
  overflow: hidden;
  box-shadow: 0 1px 1px rgba(0, 0, 0, 0.075) inset;
  transition: height 0.25s;
  left: 0px;
}
.lyteProgressStatusVertical.up {
  bottom: 0px;
}
.lyteProgressStatusVertical.down {
  top: 0px;
}
.lyteProgressStatusVertical .lyteProgressPercentage {
  top: 50%;
  transform: translate(-50%, -50%);
}
/*  vertical progress bar related CSS -- ENDS   */
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* LYTE-PROGRESSBAR END*/
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/* LYTE-DATERANGEPICKER BEGINS  */
lyte-daterangepicker {
  display: inline-block;
}
lyte-daterangepicker * {
  box-sizing: content-box;
}
.lyteDateRangePickerRow {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  display: flex;
  box-shadow: 0 0 3px 1px rgba(0, 0, 0, 0.1);
  border: 1px solid #d1d1d1;
  background: #fff;
}
.lyteDateRangePickerRow .lyteCalendarPopup {
  box-shadow: none;
  border: none;
}
.lyteDateRangePickerCol1,
.lyteDateRangePickerCol2 {
  position: relative;
}
.lyteDateRangePickerRow .lyteCalBtns {
  display: none;
}
.lyteDateRPMonthHeader {
  text-align: center;
  font-size: 13px;
  padding: 12px 23px;
}
.lyteDateRPLeftNav {
  position: absolute;
  top: 17px;
  right: 20px;
}
.lyteDateRPRightNav {
  top: 17px;
  left: 20px;
  position: absolute;
}
.monthDD {
  max-width: 150px;
  margin-left: 7px;
  width: auto;
}
.monthDD lyte-drop-button {
  font-size: 18px;
}
.yearDD {
  width: auto;
}
.yearDD lyte-drop-button {
  font-size: 16px;
}
.dRPCalendar2 .lyteCalTableContainer {
  border-right: 1px solid #f0f0f0;
}
.lyteDateRPTempFirstDateSelected,
.lyteDateRPTempLastDateSelected,
.lyteDateRPFirstDateSelected,
.lyteDateRPLastDateSelected,
.lyteDateRPTempSelected.lyteDateRPTempFirstDateSelected:hover,
.lyteDateRPTempSelected.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPTempFirstDateSelected:hover,
.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPFirstDateSelected:hover,
.lyteDateRPLastDateSelected:hover {
  color: #fff;
  position: relative;
  z-index: 0;
  background: #e6f3fd;
  border-radius: 0 50% 50% 0;
  border-color: transparent;
}
.lyteDateRPTempSelected.lyteDateRPTempLastDateSelected,
.lyteDateRPTempLastDateSelected,
.lyteDateRPLastDateSelected,
.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPLastDateSelected:hover {
  background: #e6f3fd;
  border-radius: 50% 0 0 50%;
  color: #fff;
}
.lyteDateRPTempFirstDateSelected::before,
.lyteDateRPFirstDateSelected::before,
.lyteDateRPTempLastDateSelected::before,
.lyteDateRPLastDateSelected::before {
  content: '';
  width: 100%;
  height: 100%;
  background: #5ba1e5;
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  z-index: -1;
  border-radius: 50%;
}
.lyteDateRPMonthStartDate,
.lyteDateRPMonthEndDate,
.lyteDateRPTempSelected {
  border-radius: 0;
  background: #e6f3fd;
  position: relative;
  color: #111;
}
.lyteDateRPTempFirstDateSelected {
  border-radius: 0 50% 50% 0;
}
.lyteDateRPTempFirstDateSelected::after,
.lyteDateRPFirstDateSelected::after,
.lyteDateRPMonthStartDate::after,
.lyteDateRPTempSelected::after {
  content: '';
  position: absolute;
  right: calc(100% + 1px);
  width: 8px;
  background: #e6f3fd;
  top: -1px;
  height: 32px;
}
.lyteDateRPFirstDateSelected:last-of-type,
.lyteDateRPTempFirstDateSelected:last-of-type,
.lyteDateRPLastDateSelected:first-child,
.lyteDateRPTempLastDateSelected:first-child,
.lyteDateRPTempLastDateSelected.lyteCalTableCell:first-child:hover {
  background: transparent;
}
.lyteDateRPTempFirstDateSelected,
.lyteDateRPTempLastDateSelected,
.lyteDateRPFirstDateSelected,
.lyteDateRPLastDateSelected {
  color: #fff;
}
.lyteDateRPTempSelected:hover {
  background: #e6f3fd;
  color: #111;
  border-radius: 0;
}
.lyteCalTableCell.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPMonthEndDate,
.lyteDateRPTempSelected:last-of-type,
.lyteCalTableCell.lyteDateRPTempSelected:last-of-type:hover {
  border-radius: 50% 0 0 50%;
}
.lyteDateRPMonthStartDate,
.lyteDateRPTempSelected:first-of-type,
.lyteDateRPTempSelected:first-of-type:hover {
  border-radius: 0 50% 50% 0;
}
.lyteDateRPMonthEndDate:first-of-type {
  border-radius: 50%;
}
.lyteDateRPTempSelected:last-of-type::after,
.lyteDateRPFirstDateSelected:last-of-type::after,
.lyteDateRPTempFirstDateSelected:last-of-type::after,
.lyteDateRPTempLastDateSelected::after,
.lyteDateRPLastDateSelected::after {
  width: 0;
}
.lyteDateRPTempFirstDateSelected.lyteDateRPTempLastDateSelected,
.lyteDateRPFirstDateSelected.lyteDateRPLastDateSelected {
  background: #fff;
}
.lyteDateRPTempFirstDateSelected.lyteDateRPMonthEndDate,
.lyteDateRPMonthEndDate.lyteDateRPFirstDateSelected {
  background: #fff;
  border-radius: 0 50% 50% 0;
}
.lyteDateRPInterimEndDate::after,
.lyteDateRPTempFirstDateSelected.lyteDateRPMonthEndDate::after,
.lyteDateRPMonthEndDate.lyteDateRPFirstDateSelected::after {
  content: none;
}
.lyteDateRPMonthStartDate.lyteDateRPTempLastDateSelected,
.lyteDateRPMonthStartDate.lyteDateRPLastDateSelected {
  background: #fff;
}
.lyteDateRPInterimEndDate:hover,
.lyteDateRPInterimEndDate.lyteDateRPTempSelected:first-of-type,
.lyteDateRPInterimEndDate {
  border-top-left-radius: 50%;
  border-bottom-left-radius: 50%;
}
.lyteDateRPInterimStartDate.lyteDateRPTempSelected.lyteDateRPTempLastDateSelected,
.lyteDateRPInterimStartDate.lyteDateRPTempLastDateSelected:hover,
.lyteDateRPInterimStartDate:hover,
.lyteDateRPInterimStartDate {
  border-top-right-radius: 50%;
  border-bottom-right-radius: 50%;
}
/*------- Added by Sam-------*/
.lyteDateRPNavDisabled {
  opacity: 0.3;
  pointer-events: none;
}
.lyteSeperateDRP .lyteDateRPFirstDateSelected,
.lyteSeperateDRP .lyteDateRPLastDateSelected {
  border-radius: 50%;
}
.lyteSeperateDRP .lyteDateRPFirstDateSelected:after {
  display: none;
}
.lyteDateRangePickerRow .lyteCalTableCell {
  touch-action: none;
}
/*------- Added for ltPropHeaderType option -------*/
.lyteDateRPStringHeader {
  padding-top: 17px;
  font-size: 18px;
  color: #666;
}
/*------- Added for ltPropFillRows option -------*/
lyte-daterangepicker .lyteCalDiffMonth {
  pointer-events: none;
  opacity: 0.4;
}
/*------- Added by Sam-------*/
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* LYTE-DATERANGEPICKER ENDS    */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
lyte-tree {
  background: #fff;
  display: block;
  padding-right: 50px;
  overflow: hidden;
  transition: height 0.2s ease;
}
lyte-tree lyte-yield {
  display: inline-block;
}
lyte-tree-body {
  display: block;
  margin-top: 20px;
}
.lyteTreeBodyDivLastVisibleElem > lyte-tree-body > .mainContainer::after,
.lyteTreeBodyDiv:last-of-type > lyte-tree-body > .mainContainer::after {
  content: '';
  position: absolute;
  width: 3px;
  height: calc(100% - 18px);
  background: #fff;
  z-index: 10;
  right: -43px;
  top: 9px;
}
lyte-tree-content {
  display: block;
  cursor: pointer;
  position: relative;
}
lyte-tree lyte-tree lyte-tree-content::before {
  content: '';
  width: 30px;
  height: 1px;
  border-bottom: 1px dashed #aaa;
  position: absolute;
  right: -38px;
  top: 9px;
}
.mainContainer {
  position: relative;
}
.mainContainer::before {
  content: '';
  width: 1px;
  height: calc(100% - 34px);
  border-right: 1px dashed #aaa;
  top: 25px;
  position: absolute;
  right: 8px;
}
.lyteTreeNoChildContainer::before {
  content: none;
}
lyte-tree-icon {
  display: inline-block;
  text-align: right;
}
lyte-tree-icon .collapseBox {
  width: 16px;
  height: 16px;
  display: inline-block;
  position: relative;
  vertical-align: middle;
  opacity: 0.7;
}
lyte-tree-icon:hover .collapseBox {
  opacity: 0.8;
}
.lyteTreeOpen .collapseBox,
lyte-tree-icon.open .collapseBox {
  opacity: 0.9;
}
lyte-tree lyte-tree lyte-tree-icon:hover .collapseBox {
  border-color: #333;
}
.treeValue {
  display: inline-block;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 14px;
  color: #333;
  margin-right: 5px;
  vertical-align: middle;
}
lyte-tree lyte-tree lyte-tree-icon:hover .treeValue {
  color: #111;
}
.lyteTreeOpen .arrow,
lyte-tree-icon.open .arrow {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -25px -107px;
  width: 16px;
  height: 16px;
  display: inline-block;
  position: absolute;
}
.lyteTreeClose .arrow,
lyte-tree-icon.close .arrow {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -1px -107px;
  width: 16px;
  height: 16px;
  display: inline-block;
  position: absolute;
}
.lyteTreeOpen .treeValue,
lyte-tree-icon.open .treeValue {
  font-family: 'LatoBold', 'Open Sans', sans-serif;
}
.lyteTreeHasNoChild .lyteTreeOpen .treeValue,
.lyteTreeHasNoChild lyte-tree-icon.open .treeValue,
.noChildClass lyte-tree-icon.open .treeValue {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  margin-right: 0;
  margin-top: -3px;
  color: #333;
  cursor: default;
}
.lyteTreeHasNoChild .collapseBox,
.noChildClass .collapseBox {
  display: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/*  Colorbox Styles starts  */
.lyteColorbox {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 14px;
  position: fixed;
  display: none;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 1040;
}
.lyteColorboxDisplay.lyteColorbox {
  display: flex;
  flex-direction: column;
}
.lyteColorboxFreezeLayer {
  position: fixed;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  background: #000;
  opacity: 0.8;
}
.lyteColorboxWrapper {
  width: 900px;
  margin: 0 auto;
  background: #fff;
  position: relative;
  height: calc(100% - 170px);
  overflow: auto;
  border-radius: 0 0 2px 2px;
  z-index: 5;
}
.lyteColorboxContent {
  height: calc(100% - 65px);
  margin: 0 auto;
  position: relative;
  padding: 10px 10px 0;
  background: #fff;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: auto;
  border-radius: 3px 3px 0 0;
}
.lyteCBoxPhoto {
  max-height: inherit;
  max-width: 100%;
  transition: transform 0.15s linear;
}
.lyteColorboxHeader {
  display: flex;
  background: #fff;
  position: relative;
  padding: 15px 20px;
  border-top: 1px solid #ebebeb;
  border-radius: 0 0 3px 3px;
}
.lyteColorboxTitle {
  font-size: 15px;
  margin-left: auto;
  font-family: 'LatoBold', 'Open Sans', sans-serif;
  color: #111;
}
.lyteColorboxCloseIcon {
  position: fixed;
  top: 20px;
  left: 35px;
}
lyte-colorbox-close,
.lyteColorboxCloseIcon {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -50px -100px;
  height: 30px;
  width: 30px;
  border-radius: 50%;
  cursor: pointer;
  opacity: 0.8;
}
lyte-colorbox-close:hover,
.lyteColorboxCloseIcon:hover {
  opacity: 1;
}
.lyteColorboxThumbOuterWrapper {
  height: 150px;
  order: 3;
  position: relative;
  align-self: center;
  justify-content: center;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  z-index: 5;
}
.lyteColorboxThumbInnerWrapper {
  display: flex;
  transition: transform 0.3s ease;
}
.lyteColorboxThumb {
  align-self: center;
  margin-left: 10px;
  width: 70px;
  height: 70px;
  border: 1px solid transparent;
  cursor: pointer;
  box-sizing: border-box;
  position: relative;
  border-radius: 3px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.lyteColorboxThumb:hover {
  border: 1px solid #ccc;
}
.lyteColorboxThumb.thumb-on {
  border: 1px solid #fff;
}
.lyteColorboxThumb.thumb-on::after {
  content: attr(data-thumb-val);
  position: absolute;
  bottom: -30px;
  color: #fff;
  width: 100%;
  text-align: center;
}
.lyteColorboxThumb img {
  width: 100%;
  height: 100%;
  display: block;
  border-radius: 2px;
  object-fit: contain;
}
.lyteCBoxIframeWrap {
  text-align: center;
}
.lyteCBoxIframeIcon {
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -117px -198px;
  width: 21px;
  height: 26px;
  display: inline-block;
}
.lyteCBoxIframeLabel {
  color: #fff;
  font-size: 13px;
  margin-top: 10px;
}
.lyteColorboxThumb .lyteCBoxFavImg {
  height: auto;
  width: auto;
}
.lyteCBoxPhotoZoomIn {
  cursor: zoom-in;
}
.lyteCBoxPhotoZoomOut {
  cursor: zoom-out;
}
lyte-colorbox-previous,
lyte-colorbox-next,
.lyteColorboxIconDiv {
  width: 40px;
  height: 40px;
  border: 1px solid #555;
  background: #222;
  position: fixed;
  border-radius: 50%;
  top: calc(50% - 20px);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 10;
  transform: rotate(180deg);
}
lyte-colorbox-previous:hover,
lyte-colorbox-next:hover,
.lyteColorboxIconDiv:hover {
  background: #000;
}
lyte-colorbox-previous,
.lyteCBoxPrevious {
  right: 20px;
}
lyte-colorbox-next,
.lyteCBoxNext {
  left: 20px;
}
.lyteColorboxNextIcon,
.lyteColorboxPreviousIcon {
  background-image: url(../../images/sprite_lyte.svg);
  width: 9px;
  height: 11px;
  background-position: -94px -109px;
}
.lyteColorboxNextIcon {
  background-position: -115px -108px;
}
.lyteCBoxDownload {
  position: relative;
}
lyte-colorbox-download .lyteColorboxDownloadImg::after,
.lyteCBoxDownload .lyteColorboxDownloadImg::after {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  width: 16px;
  height: 16px;
  background-position: -271px -106px;
  opacity: 0.4;
  cursor: pointer;
  display: block;
}
lyte-colorbox-download .lyteColorboxDownloadImg:hover::after,
.lyteCBoxDownload .lyteColorboxDownloadImg:hover::after {
  opacity: 0.8;
}
.lyteColorboxUtilDiv {
  display: flex;
  background: #000;
  position: absolute;
  right: 50%;
  bottom: 65px;
  border-radius: 3px;
  z-index: 1020;
  transform: translateX(50%);
  overflow: hidden;
}
lyte-colorbox-zoomin,
lyte-colorbox-reset,
lyte-colorbox-zoomout,
.lyteColorboxZoomIn,
.lyteColorboxReset,
.lyteColorboxZoomOut {
  cursor: pointer;
  padding: 10px;
  height: 16px;
}
.lyteColorboxDisabled {
  pointer-events: none;
  opacity: 0.6;
}
lyte-colorbox-zoomin:hover,
lyte-colorbox-reset:hover,
lyte-colorbox-zoomout:hover,
.lyteColorboxZoomIn:hover,
.lyteColorboxReset:hover,
.lyteColorboxZoomOut:hover {
  background: rgba(255, 255, 255, 0.25);
}
lyte-colorbox-zoomin::before,
lyte-colorbox-reset::before,
lyte-colorbox-zoomout::before,
.lyteColorboxZoomIn::before,
.lyteColorboxReset::before,
.lyteColorboxZoomOut::before {
  content: '';
  background: url(../../images/sprite_lyte.svg);
  display: inline-block;
  align-self: center;
}
lyte-colorbox-zoomout::before,
.lyteColorboxZoomOut::before {
  background-position: -132px -107px;
  width: 13px;
  height: 15px;
}
lyte-colorbox-zoomout:hover::before,
.lyteColorboxZoomOut:hover::before {
  background-position: -153px -107px;
}
lyte-colorbox-reset::before,
.lyteColorboxReset::before {
  background-position: -218px -106px;
  width: 17px;
  height: 17px;
}
lyte-colorbox-reset:hover::before,
.lyteColorboxReset:hover::before {
  background-position: -242px -106px;
}
lyte-colorbox-zoomin::before,
.lyteColorboxZoomIn::before {
  background-position: -175px -107px;
  width: 14px;
  height: 15px;
}
lyte-colorbox-zoomin:hover::before,
.lyteColorboxZoomIn:hover::before {
  background-position: -196px -107px;
}
.lyteColorboxHideVisibility {
  opacity: 0.6;
  cursor: not-allowed;
}
lyte-colorbox-next.lyteColorboxHideVisibility:hover,
lyte-colorbox-previous.lyteColorboxHideVisibility:hover,
.lyteColorboxIconDiv.lyteColorboxHideVisibility:hover {
  background: #222;
}
.lyteCBoxItem {
  position: absolute;
  height: calc(100% - 10px);
  width: calc(100% - 20px);
  display: flex;
  justify-content: center;
  align-items: center;
  background: #fff;
}
.lytCBoxPreviousItem {
  transform: translate3d(-100%, 0, 0);
  transition: none;
}
.lytCBoxNextItem {
  transform: translate3d(100%, 0, 0);
  transition: none;
}
.lyteCBoxCurrentItem {
  transform: translate3d(0%, 0, 0);
  transition: transform 0.3s ease;
}
.lyteCBoxOH {
  overflow: hidden;
}
.lyteCBoxPhoto,
.lyteCBoxIframe,
.lyteCBoxCustom,
.lyteCBoxDN {
  display: none;
}
.lyteCBoxVisible {
  display: inline-block;
}
.lyteCBoxAlignStart {
  align-items: flex-start;
}
lyte-colorbox-container {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 14px;
  position: fixed;
  display: none;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 1040;
}
lyte-colorbox-container.lyteColorboxDisplay {
  display: block;
}
lyte-colorbox-header {
  position: fixed;
  top: 0;
  width: 100%;
  height: 60px;
  background: #222;
  z-index: 10;
  padding: 15px 20px;
  box-sizing: border-box;
  display: flex;
  align-items: center;
}
lyte-colorbox-download {
  margin-right: 10px;
}
lyte-colorbox-download .lyteColorboxDownloadImg::after {
  background-position: -372px -157px;
  width: 16px;
  height: 15px;
}
lyte-colorbox-title {
  color: #fff;
  font-size: 16px;
}
lyte-colorbox-close {
  margin-right: auto;
}
lyte-colorbox-content {
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  bottom: 0;
  overflow: hidden;
  background: rgba(0, 0, 0, 0.8);
}
lyte-colorbox-container .lyteCBoxItem {
  height: 100%;
  width: 100%;
  background: transparent;
}
lyte-colorbox-container .lyteCBoxPhoto,
.lyteColorboxContent .lyteCBoxPhoto {
  position: relative;
  cursor: grab;
}
lyte-colorbox-container .lyteCBoxPhoto.lyteCBoxDragging,
.lyteColorboxContent .lyteCBoxPhoto.lyteCBoxDragging {
  cursor: grabbing;
}
lyte-colorbox-thumbnail {
  position: fixed;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  height: 150px;
  bottom: 0;
  z-index: 10;
  width: 100%;
}
lyte-colorbox-container .lyteColorboxUtilDiv {
  flex-direction: row-reverse;
  bottom: 150px;
}
.lyteCBoxMoveLeft {
  transform: translate3d(-100%, 0, 0);
}
.lyteCBoxMoveRight {
  transform: translate3d(100%, 0, 0);
}
.lyteCBoxMoveLeftWithTransition {
  transform: translate3d(-100%, 0, 0);
  transition: transform 0.3s;
}
.lyteCBoxMoveRightWithTransition {
  transform: translate3d(100%, 0, 0);
  transition: transform 0.3s;
}
.lyteCBoxAnimateOnUp {
  transition: transform 0.3s, left 0.3s, top 0.3s;
}
.lyteColorboxLoadingCircle {
  animation: lyteColorboxLoadingSvgAnim 1.4s linear infinite;
}
@keyframes lyteColorboxLoadingSvgAnim {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(270deg);
  }
}
lyte-colorbox-loading-icon {
  position: absolute;
  left: 50%;
  top: 50%;
  z-index: 5;
  transform: translate(-50%, -50%);
}
.lyteColorboxLoadingCircle circle {
  stroke-dasharray: 88px;
  stroke-dashoffset: 0;
  stroke-width: 1px;
  stroke-linecap: round;
  transform-origin: center;
  animation: lyteColorboxLoadingAnim 1.4s ease-in-out infinite;
}
@keyframes lyteColorboxLoadingAnim {
  0% {
    stroke-dashoffset: 88px;
  }
  50% {
    stroke-dashoffset: 22px;
    transform: rotate(135deg);
  }
  100% {
    stroke-dashoffset: 88px;
    transform: rotate(450deg);
  }
}
lyte-colorbox-content .lyteColorBoxDisableTransition,
.lyteColorboxContent .lyteColorBoxDisableTransition {
  transition: none;
}
/*
lyte-colorbox-previous.lyteColorboxHideVisibility:hover, lyte-colorbox-next.lyteColorboxHideVisibility:hover {
  background: #222;
}

.animateOnUp {
    transition: transform 0.3s, left 0.3s, top 0.3s;
}

}*/
/*Sets the orientation of the images so that there wont be any difference in viewing the image in different browser*/
.lyteColorboxThumb.addedOrientation img {
  image-orientation: from-image;
}
.lyteCBoxDNImp {
  display: none !important;
}
/* Sets z-index to current element for non sliding images*/
.lyteCBoxCurrentElem {
  z-index: 1;
}
.lyteCBoxPreviewNone {
  height: 100px;
  width: 100px;
  margin: auto;
  background-image: url(../../images/zip-folder.png);
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* colorbox CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-counter {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 20px;
  color: #333;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-rating {
  display: inline-flex;
  white-space: nowrap;
}
lyte-rate-icon {
  display: inline-flex;
  cursor: pointer;
  padding-right: 5px;
  background-image: url(../../images/sprite_lyte.svg);
}
lyte-rate-icon:last-child {
  padding-right: 0px;
}
lyte-rating.star lyte-rate-icon {
  background-image: none;
}
lyte-rating.heart lyte-rate-icon {
  background-image: none;
}
lyte-rating.lineStar lyte-rate-icon {
  background-image: none;
}
lyte-rating.lineHeart lyte-rate-icon {
  background-image: none;
}
.lyteRatingReadOnly {
  cursor: not-allowed;
}
.lyteRatingReadOnly lyte-rate-icon {
  pointer-events: none;
}
.lyteRatingSmiley lyte-rate-icon:nth-child(1) {
  background-position: -72px -273px;
}
.lyteRatingSmiley.five lyte-rate-icon:nth-child(2) {
  background-position: -104px -273px;
}
.lyteRatingSmiley.three lyte-rate-icon:nth-child(2),
.lyteRatingSmiley.five lyte-rate-icon:nth-child(3) {
  background-position: -135px -273px;
}
.lyteRatingSmiley.five lyte-rate-icon:nth-child(4) {
  background-position: -41px -273px;
}
.lyteRatingSmiley.three lyte-rate-icon:nth-child(3),
.lyteRatingSmiley.five lyte-rate-icon:nth-child(5) {
  background-position: -10px -273px;
}
.lyteRatingSmiley lyte-rate-icon.lyteRatingHover:nth-child(1),
.lyteRatingSmiley lyte-rate-icon.lyteRated:nth-child(1) {
  background-position: -231px -273px;
}
.lyteRatingSmiley.five lyte-rate-icon.lyteRatingHover:nth-child(2),
.lyteRatingSmiley.five lyte-rate-icon.lyteRated:nth-child(2) {
  background-position: -263px -273px;
}
.lyteRatingSmiley.three lyte-rate-icon.lyteRatingHover:nth-child(2),
.lyteRatingSmiley.three lyte-rate-icon.lyteRated:nth-child(2),
.lyteRatingSmiley.five lyte-rate-icon.lyteRatingHover:nth-child(3),
.lyteRatingSmiley.five lyte-rate-icon.lyteRated:nth-child(3) {
  background-position: -294px -273px;
}
.lyteRatingSmiley.five lyte-rate-icon.lyteRatingHover:nth-child(4),
.lyteRatingSmiley.five lyte-rate-icon.lyteRated:nth-child(4) {
  background-position: -200px -273px;
}
.lyteRatingSmiley.three lyte-rate-icon.lyteRatingHover:nth-child(3),
.lyteRatingSmiley.three lyte-rate-icon.lyteRated:nth-child(3),
.lyteRatingSmiley.five lyte-rate-icon.lyteRatingHover:nth-child(5),
.lyteRatingSmiley.five lyte-rate-icon.lyteRated:nth-child(5) {
  background-position: -169px -273px;
}
.lrcSwitchLikeEmpty {
  background-position: -230px -205px;
}
.lrcSwitchDislikeEmpty {
  background-position: -294px -210px;
}
.lrcSwitchLikeEmpty:hover {
  background-position: -262px -205px;
  opacity: 0.8;
}
.lrcSwitchDislikeEmpty:hover {
  background-position: -325px -210px;
  opacity: 0.8;
}
.lrcSwitchLike.lyteRated {
  background-position: -262px -205px;
  opacity: 1;
}
.lrcSwitchDislike.lyteRated {
  background-position: -325px -210px;
  opacity: 1;
}
.lrcToggleEmpty {
  background-position: -8px -239px;
}
.lrcToggleEmpty:hover,
.lrcToggleFill {
  background-position: -74px -239px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-splitter {
  display: block;
  background: #fff;
  border: 1px solid #ddd;
  color: #333;
}
lyte-splitter lyte-yield {
  height: 100%;
  display: flex;
  width: 100%;
}
lyte-row-splitter {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
}
lyte-row-splitter:first-child {
  border-top: 0;
}
lyte-row-splitter:last-child {
  border-bottom: 0;
}
lyte-column-splitter {
  display: flex;
  flex-direction: row;
  flex-grow: 1;
}
lyte-column-splitter:first-child {
  border-left: 0;
}
lyte-column-splitter:last-child {
  border-right: 0;
}
lyte-row-element,
lyte-column-element {
  flex-grow: 1;
  overflow: auto;
  display: flex;
}
lyte-row-element[lt-resize="false"] {
  border-bottom: 1px solid #ddd;
  border-top: 1px solid #ddd;
}
lyte-row-element[lt-resize="false"]:first-child {
  border-top: 0;
}
lyte-row-element[lt-resize="false"]:last-child {
  border-bottom: 0;
}
lyte-column-element[lt-resize="false"] {
  border-right: 1px solid #ddd;
  border-left: 1px solid #ddd;
}
lyte-column-element[lt-resize="false"]:first-child {
  border-left: 0;
}
lyte-column-element[lt-resize="false"]:last-child {
  border-right: 0;
}
lyte-row-handle,
lyte-column-handle {
  background: #eee;
  border-radius: 0px;
  -webkit-user-select: none;
  user-select: none;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
}
lyte-column-handle {
  width: 8px;
  cursor: col-resize;
  flex-direction: column;
}
lyte-row-handle {
  height: 8px;
  cursor: row-resize;
}
lyte-row-handle:hover,
lyte-column-handle:hover {
  background: #ddd;
}
lyte-row-handle.splitResizing,
lyte-column-handle.splitResizing {
  background: #5ba1e5;
}
.rowHandleIcon,
.columnHandleIcon {
  background: #000;
  border-radius: 6px;
}
.columnHandleIcon {
  height: 30px;
  width: 4px;
  margin: 15px 0;
  order: 1;
}
.rowHandleIcon {
  height: 4px;
  width: 30px;
  margin: 0px 15px;
  order: 1;
}
.splitResizing .columnHandleIcon,
.splitResizing .rowHandleIcon {
  background: #fff;
}
.leftCollapseBtn {
  order: 0;
}
.rightCollapseBtn {
  order: 2;
}
.rightPointed::after,
.leftPointed::before {
  content: '';
  width: 0;
  height: 0;
  cursor: pointer;
  display: block;
}
.leftPointed::before {
  border-bottom: 5px solid transparent;
  border-top: 5px solid transparent;
  border-right: 5px solid #000;
}
.rightPointed::after {
  border-bottom: 5px solid transparent;
  border-top: 5px solid transparent;
  border-left: 5px solid #000;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
lyte-grouper {
  display: block;
}
lyte-grouper .lyteGroupWrap {
  display: flex;
}
lyte-grouper .lyteGroupWrap.lyteGroupVertical {
  flex-direction: column;
}
lyte-grouper lyte-button {
  flex-grow: 1;
}
lyte-grouper lyte-button button {
  border-radius: 0;
  width: 100%;
}
lyte-grouper .lyteGroupHorizontal lyte-button:first-child button {
  border-radius: 2px 0 0 2px;
}
lyte-grouper .lyteGroupHorizontal lyte-button:last-child button {
  border-radius: 0 2px 2px 0;
}
lyte-grouper .lyteGroupVertical lyte-button:first-child button {
  border-radius: 2px 2px 0 0;
}
lyte-grouper .lyteGroupVertical lyte-button:last-child button {
  border-radius: 0 0 2px 2px;
}
lyte-grouper .fillType lyte-button button.lyteDefaultBtn {
  border: 0;
  background: #e0e1e2;
}
lyte-grouper .fillType lyte-button button.lyteDefaultBtn:hover {
  border: 0;
  background: #cacbcd;
}
lyte-grouper .lineType lyte-button button.lyteDefaultBtn {
  border: 1px solid #ddd;
  background: #fff;
}
lyte-grouper .lineType.lyteGroupHorizontal lyte-button button.lyteDefaultBtn {
  border-right: 0;
}
lyte-grouper .lineType.lyteGroupVertical lyte-button button.lyteDefaultBtn {
  border-bottom: 0;
}
lyte-grouper .lineType lyte-button button.lyteDefaultBtn:hover {
  background: #f5f5f5;
}
lyte-grouper .lineType.lyteGroupHorizontal lyte-button:last-child button.lyteDefaultBtn {
  border-right: 1px solid #ddd;
}
lyte-grouper .lineType.lyteGroupVertical lyte-button:last-child button.lyteDefaultBtn {
  border-bottom: 1px solid #ddd;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-button-group {
  display: block;
}
lyte-button-group .lyteBtnGroupWrap {
  display: flex;
}
lyte-button-group .lyteGroupVertical .lyteBtnGroupWrap {
  flex-direction: column;
}
lyte-button-group lyte-button {
  flex-grow: 1;
}
lyte-button-group lyte-button button {
  border-radius: 0;
  width: 100%;
}
lyte-button-group .lyteGroupHorizontal lyte-button:first-child button {
  border-radius: 2px 0 0 2px;
}
lyte-button-group .lyteGroupHorizontal lyte-button:last-child button {
  border-radius: 0 2px 2px 0;
}
lyte-button-group .lyteGroupVertical lyte-button:first-child button {
  border-radius: 2px 2px 0 0;
}
lyte-button-group .lyteGroupVertical lyte-button:last-child button {
  border-radius: 0 0 2px 2px;
}
lyte-button-group .fillType lyte-button button.lyteDefaultBtn {
  border: 0;
  background: #e0e1e2;
}
lyte-button-group .fillType lyte-button button.lyteDefaultBtn:hover {
  border: 0;
  background: #cacbcd;
}
lyte-button-group .fillType lyte-button button.lyteBtnGroupSelectedBtn:hover,
lyte-button-group .fillType lyte-button button.lyteBtnGroupSelectedBtn {
  background: #c0c1c2;
  color: #111;
}
lyte-button-group .lineType lyte-button button.lyteDefaultBtn {
  border: 1px solid #d6d6d6;
  background: #fff;
}
lyte-button-group .lineType.lyteGroupHorizontal lyte-button button.lyteDefaultBtn {
  border-right: 0;
}
lyte-button-group .lineType.lyteGroupVertical lyte-button button.lyteDefaultBtn {
  border-bottom: 0;
}
lyte-button-group .lineType lyte-button button.lyteDefaultBtn:hover {
  background: #f5f5f5;
}
lyte-button-group .lineType.lyteGroupHorizontal lyte-button:last-child button.lyteDefaultBtn {
  border-right: 1px solid #d6d6d6;
}
lyte-button-group .lineType.lyteGroupVertical lyte-button:last-child button.lyteDefaultBtn {
  border-bottom: 1px solid #d6d6d6;
}
lyte-button-group .lineType lyte-button button.lyteBtnGroupSelectedBtn:hover,
lyte-button-group .lineType lyte-button button.lyteBtnGroupSelectedBtn {
  background: #eee;
  color: #111;
}
/* import theme overrides - styles */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-expresstable {
  display: block;
  height: 100%;
}
.lyteExpTableOrigTableWrapper {
  height: 100%;
  position: relative;
}
.lyteExpTableFixedColHeader {
  z-index: 1;
  box-shadow: 3px 0 5px 0px rgba(0, 0, 0, 0.2);
  position: absolute;
  background: #fff;
  border-left: 1px solid #e2e2e2;
}
.lyteExpTableWrapper {
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
  border: 1px solid #e2e2e2;
}
.lyteExpTableSortableHelperCont {
  position: absolute;
  z-index: 1080;
  pointer-events: none;
  transform: translate(0px, 0px);
  overflow: hidden;
  background: #fff;
  will-change: transform;
}
.lyteExpTableSortableHelperCont .lyteExpTableHead {
  position: relative;
  z-index: 5;
}
.lyteExpTableFakeHeaderWrapper {
  position: absolute;
  display: flex;
  left: 0;
  right: 0;
  top: 0;
  overflow: hidden;
  background: #fff;
  z-index: 10;
}
.lyteExpTableFakeHeaderShow {
  opacity: 1;
  z-index: 10;
}
lyte-exptable {
  display: table;
}
.lyteExpTableHeaderGroup,
lyte-exptable-thead {
  display: table-header-group;
}
.lyteExpTableRowGroup,
lyte-exptable-tbody {
  display: table-row-group;
}
lyte-exptable-tr {
  display: table-row;
}
lyte-expresstable .lyteExpTableHide {
  display: none;
}
.lyteExpTableHeaderGroup lyte-exptable-th,
.lyteExpTableHeaderGroup lyte-exptable-tr {
  -ms-transform: inherit;
}
@supports (-ms-ime-align: auto) {
  /*  This code targets only Edge browser    */
  .lyteExpTableHeaderGroup lyte-exptable-th,
  .lyteExpTableHeaderGroup lyte-exptable-tr {
    transform: inherit;
  }
}
lyte-exptable-th,
lyte-exptable-td {
  display: table-cell;
  text-align: right;
  padding: 12px 15px;
  border-bottom: 1px solid #e2e2e2;
  white-space: nowrap;
}
lyte-exptable-th {
  background: #f7f7f7;
  border-bottom: 0;
  box-sizing: border-box;
  white-space: nowrap;
  position: relative;
  min-width: 50px;
}
.lyteExpTableOrigTableInnerWrap {
  overflow: auto;
  height: 100%;
}
.lyteExpOriginalTable {
  width: 100%;
}
.lyteExpTableOrigTableInnerWrap .lyteExpTableHeaderGroup {
  opacity: 0;
}
.lyteExpTableFixedColWrapper {
  position: absolute;
  background: #fff;
  border-left: 1px solid #e2e2e2;
  z-index: 5;
  overflow-x: hidden;
  overflow: -moz-scrollbars-none;
  -ms-overflow-style: none;
  scrollbar-width: none;
  box-shadow: -3px 0 5px 0px rgba(0, 0, 0, 0.2);
  height: 100%;
}
.lyteExpTableNoShadow .lyteExpTableFixedColHeader,
.lyteExpTableNoShadow .lyteExpTableFixedColWrapper {
  box-shadow: none;
  border-left: 1px solid transparent;
}
.lyteExpTableFixedColWrapper::-webkit-scrollbar {
  width: 0;
}
.lyteExpSortableTable .lyteExpTableSortableColumn {
  opacity: 0;
}
.lyteExpTableFixedColTable {
  position: relative;
  z-index: 1;
  display: table;
  will-change: transform;
}
lyte-exptablehead-resize {
  cursor: ew-resize;
  height: 100%;
  width: 21px;
  top: 0;
  z-index: 9;
  left: -12px;
  position: absolute;
}
lyte-exptablehead-resize::after {
  content: '';
  position: absolute;
  width: 3px;
  height: 100%;
  left: 10px;
  background: transparent;
}
lyte-exptablehead-resize:hover::after {
  background: #5ba1e5;
}
.lyteExpTableFixedColHeader lyte-exptablehead-resize {
  display: none;
}
lyte-expresstable.tableLayoutFixed lyte-exptable {
  table-layout: fixed;
}
lyte-exptable-th:last-of-type lyte-exptablehead-resize {
  left: 0;
}
.lyteExpTableFakeColHeaderWrapper {
  display: table;
  table-layout: fixed;
}
.lyteFixHeaderDisplayNone {
  display: none;
}
/*  Sticky Express Table CSS BEGINS    */
.lyteExpStickyInterSection {
  position: absolute;
  width: 1px;
  height: 10px;
  top: 20px;
  opacity: 0;
  will-change: left, top, right;
  pointer-events: none;
  z-index: -1;
}
.lyteExpStickyTable .lyteExpTableWrapper {
  overflow: auto;
  border: 0;
}
.lyteExpStickyTable .lyteExpTableOrigTableInnerWrap {
  display: block;
  width: 100%;
  position: relative;
  border: 1px solid #e2e2e2;
  box-sizing: border-box;
}
.lyteExpStickyTable .lyteExpTableOrigTableInnerWrap .lyteExpTableHeaderGroup {
  opacity: 1;
}
.lyteExpStickyTable lyte-exptable-th {
  position: -webkit-sticky;
  position: sticky;
  top: 0;
  z-index: 10;
  background: #f7f7f7;
}
.lyteExpStickyTable lyte-exptable-th.lyteFixedColumn {
  z-index: 15;
}
.lyteExpStickyTable lyte-exptable-td.lyteFixedColumn {
  position: -webkit-sticky;
  position: sticky;
  z-index: 5;
  background: #fff;
}
/*  Sticky Express Table CSS ENDS    */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-banner {
  display: block;
}
.lyteBannerModalContent {
  background: #2f363d;
  padding: 10px 20px;
  text-align: center;
  color: #fff;
}
.lyteBannerModal .lyteModal {
  border: 0;
}
.lyteBannerModal .lyteModalFromBottom {
  box-shadow: 0 -3px 5px 0px rgba(0, 0, 0, 0.1);
}
.lyteBannerModal .lyteModalFromTop {
  box-shadow: 0 3px 5px 0px rgba(0, 0, 0, 0.1);
}
.lyteBannerNonFloating .lyteModalClose,
.lyteBannerModal .lyteModalClose {
  background-position: -324px -109px;
  width: 13px;
  height: 13px;
  transform: scale(1);
  top: 15px;
  opacity: 0.8;
}
.lyteBannerNonFloating {
  background: #2f363d;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  padding: 10px 20px;
  text-align: center;
  position: relative;
  color: #fff;
  font-size: 15px;
  box-sizing: border-box;
}
.lyteBannerFloating {
  background: #2f363d;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  padding: 10px 20px;
  text-align: center;
  position: absolute;
  color: #fff;
  font-size: 15px;
  box-sizing: border-box;
}
.lyteBannerInlineFloating {
  overflow: hidden;
  position: absolute;
  width: 100%;
  pointer-events: none;
}
.lyteBannerInlineFloating .lyteBannerFloating {
  pointer-events: auto;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteHovercardPopover .lytePopover {
  background: #222;
  color: #fff;
  border-radius: 5px;
  z-index: 1080;
  border: 1px solid transparent;
}
.lyteHovercardPopover .lytePopoverArrowIcon {
  background: #222;
}
lyte-hovercard-content {
  padding: 15px;
  display: block;
  max-width: 500px;
  overflow-wrap: break-word;
}
.lyteHovercardPopover.lytePopTopToOrig .lytePopover::before,
.lyteHovercardPopover.lytePopBottomToOrig .lytePopover::before {
  content: '';
  width: 100%;
  height: 10px;
  background: transparent;
  position: absolute;
}
.lyteHovercardPopover.lytePopBottomToOrig .lytePopover::before {
  top: -10px;
}
.lyteHovercardPopover.lytePopTopToOrig .lytePopover::before {
  bottom: -10px;
}
.lyteHovercardPopover.lytePopLeftToOrig .lytePopover::before,
.lyteHovercardPopover.lytePopRightToOrig .lytePopover::before {
  content: '';
  height: 100%;
  width: 10px;
  background: transparent;
  position: absolute;
}
.lyteHovercardPopover.lytePopRightToOrig .lytePopover::before {
  right: -10px;
}
.lyteHovercardPopover.lytePopLeftToOrig .lytePopover::before {
  left: -10px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
lyte-carousel {
  display: block;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  width: 100%;
  height: 100%;
  min-height: 150px;
}
.lyteCarouselWrapper {
  position: relative;
  display: inline-block;
  width: 100%;
  height: 100%;
  min-height: inherit;
}
.lyteCarouselWrapper lyte-yield {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  min-height: inherit;
}
lyte-carousel-content {
  width: 100%;
  height: 100%;
  display: block;
  position: relative;
  overflow: hidden;
  min-height: inherit;
}
lyte-carousel-item {
  width: 100%;
  height: 100%;
  padding: 15px 35px;
  box-sizing: border-box;
  display: none;
  transform: translateX(0);
  transition: transform 0.3s ease;
  position: absolute;
  justify-content: center;
  align-items: center;
  text-align: center;
}
lyte-carousel-item.lyteActive {
  display: flex;
}
.lyteActiveNext {
  display: flex;
  transform: translateX(-100%);
}
.lyteActivePrev {
  display: flex;
  transform: translateX(100%);
}
lyte-carousel-item img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}
lyte-carousel-indicator {
  display: flex;
  justify-content: center;
  margin-top: 20px;
  width: 100%;
}
lyte-carousel-indicator-item {
  width: 10px;
  height: 10px;
  background: #ddd;
  border-radius: 50%;
  margin: 0 10px;
  cursor: pointer;
}
lyte-carousel-indicator-item:hover {
  background: #bbb;
}
lyte-carousel-indicator-item li {
  list-style: none;
}
lyte-carousel-indicator-item.lyteActive {
  background: #5ba1e5;
}
lyte-carousel-next,
lyte-carousel-prev {
  display: flex;
  width: 30px;
  height: 30px;
  border: 1px solid #ddd;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 50%;
  position: absolute;
  z-index: 5;
  top: calc(50% - 15px);
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background 0.1s ease;
  transform: rotate(180deg);
}
lyte-carousel-next:hover,
lyte-carousel-prev:hover {
  background: rgba(0, 0, 0, 0.4);
}
lyte-carousel-next {
  left: 0;
}
lyte-carousel-prev.lyteDisabled,
lyte-carousel-next.lyteDisabled {
  pointer-events: none;
  opacity: 0.5;
}
lyte-carousel-prev::before,
lyte-carousel-next::before {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -94px -109px;
  width: 9px;
  height: 11px;
}
lyte-carousel-next::before {
  transform: rotate(180deg);
}
.lyteFade lyte-carousel-item {
  display: flex;
  opacity: 0;
  transition: opacity 0.6s ease-in-out;
}
.lyteFade lyte-carousel-item.lyteActive {
  opacity: 1;
}
lyte-carousel-sub-item {
  height: 100%;
  margin: 10px;
}
.lyteCarouselFrames lyte-carousel-item.lyteActive {
  flex-wrap: wrap;
  overflow: auto;
}
.lyteCarouselFrames lyte-carousel-sub-item {
  width: 150px;
  height: 200px;
  margin: 10px;
  background: #f5f5f5;
  border-radius: 5px;
  padding: 10px;
  border: 1px solid #ddd;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteBadge {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  position: absolute;
  display: flex;
  text-align: center;
  justify-content: center;
  padding: 2px;
  border-radius: 12px;
  background: #f06060;
  border: 1px solid #fff;
}
.lyteBadgeContent {
  color: #fff;
  font-size: 8px;
  margin: auto;
}
.lyteBadgeWidHeiD {
  min-width: 10px;
  height: 10px;
  line-height: 10px;
}
.lyteBadgeWidHeiWD {
  min-width: 6px;
  min-height: 6px;
}
.lyteBadgeTopRight {
  left: -3px;
  top: -3px;
}
.lyteBadgeTopLeft {
  right: -3px;
  top: -3px;
}
.lyteBadgeBottomRight {
  left: -3px;
  bottom: -3px;
}
.lyteBadgeBottomLeft {
  right: -3px;
  bottom: -3px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteTourFreezeLayer,
.lyteTourDummyWrap {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 1000;
}
.lyteTourFreezeLayer {
  position: fixed;
  background: #000;
  opacity: 0.3;
}
.lyteTourContainer {
  will-change: transform;
  position: absolute;
  top: 0;
  left: 0;
  transition: transform 0.3s linear;
  z-index: 1040;
  box-shadow: 0 0 4px 1px rgba(0, 0, 0, 0.1);
}
.lyteTourArrow {
  position: absolute;
  width: 10px;
  height: 10px;
  transform: rotate(45deg);
  background: #fff;
  display: none;
}
.lyteTourLeftArrow {
  border-left: 1px solid #d6d6d6;
  border-bottom: 1px solid #d6d6d6;
}
.lyteTourRightArrow {
  right: 0;
  border-top: 1px solid #d6d6d6;
  border-right: 1px solid #d6d6d6;
}
.lyteTourTopArrow {
  border-top: 1px solid #d6d6d6;
  border-left: 1px solid #d6d6d6;
}
.lyteTourBottomArrow {
  bottom: 0;
  border-bottom: 1px solid #d6d6d6;
  border-right: 1px solid #d6d6d6;
}
.lyteTourStep {
  display: none;
  width: 100%;
  height: 100%;
  background: #fff;
  border: 1px solid #d6d6d6;
  border-radius: 3px;
  box-sizing: border-box;
}
lyte-tour-step-wrapper {
  display: flex;
  flex-direction: column;
  height: 100%;
}
lyte-tour-step-head {
  font-family: 'LatoBold', 'Open Sans', sans-serif;
  font-size: 20px;
  padding: 10px;
  color: #333;
}
lyte-tour-step-content {
  flex-grow: 1;
}
lyte-tour-step-footer {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 10px;
}
lyte-tour-step-indicator-wrapper {
  display: flex;
}
lyte-tour-step-indicator {
  width: 10px;
  height: 10px;
  background: #ddd;
  border-radius: 50%;
  margin: 0 5px;
  cursor: pointer;
}
lyte-tour-step-indicator.lyteCurTourStep,
lyte-tour-step-indicator:hover {
  background: #5ba1e5;
}
.lyteTourActiveTarget {
  z-index: 1040;
}
.lyteTourTargetBackground {
  position: absolute;
  background: #fff;
  z-index: 1020;
  transition: top 0.3s ease, left 0.3s ease;
  border-radius: 50%;
}
.lyteTourDefaultArrow,
.lyteTourActive,
.lyteTourActiveStep {
  display: block;
}
.lyteTourResetSpacing {
  margin: 0;
}
.lyteTourDummyTarget {
  position: absolute;
  box-sizing: border-box;
  visibility: hidden;
}
.lyteTourDummyTarget.lyteTourActiveTarget {
  visibility: visible;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-card {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  display: block;
}
lyte-card-box {
  display: block;
  box-shadow: 0 1px 3px 2px rgba(0, 0, 0, 0.1);
  border-radius: 3px;
  text-align: right;
  background: #fff;
  color: #333;
}
.lyteCardYield {
  display: flex;
  flex-direction: column;
}
lyte-card-image {
  padding: 30px 20px;
  background: #eee;
  border-radius: 2px 2px 0 0;
}
lyte-card-header {
  font-family: 'LatoBold', 'Open Sans', sans-serif;
  font-size: 18px;
  padding: 10px 20px;
}
lyte-card-body {
  font-size: 14px;
  padding: 5px 20px;
}
lyte-card-footer {
  padding: 10px 20px;
}
.lyteCardImgElem {
  width: 100px;
  height: 100px;
  border-radius: 50%;
  margin: auto;
  display: block;
  object-fit: cover;
}
.lyteCardRenderPlaceholder {
  min-height: 100px;
  height: 100%;
  width: 100%;
  background: #eee;
  border-radius: 3px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
lyte-kanbanview {
  display: block;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  position: relative;
}
.lyteKanbanviewScrollDivSelector {
  display: flex;
  border: 1px solid #d6d6d6;
  overflow-x: auto;
  overflow-y: hidden;
  height: 100%;
}
.lyteKanbanViewItem {
  min-width: 33%;
  width: 33%;
}
lyte-kanbanview lyte-board {
  position: relative;
  display: block;
  height: 100%;
}
lyte-kanbanview lyte-board.lyteSortableElem {
  min-width: unset;
}
lyte-kanbanview lyte-board .lyteBoardWrapper {
  border-left: 1px solid #d6d6d6;
  display: flex;
  flex-direction: column;
  height: 100%;
  background: #fff;
  color: #333;
}
lyte-kanbanview lyte-board.lyteSortablePlaceholder {
  background: #f5f5f5;
  border-left: 1px solid #d6d6d6;
}
lyte-kanbanview lyte-board.lyteSortableElem .lyteBoardWrapper {
  border: 1px solid #d6d6d6;
}
lyte-kanbanview lyte-board .lyteBoardHeader {
  padding: 15px;
  font-size: 18px;
  color: #666;
  z-index: 5;
  cursor: move;
  position: relative;
}
.lyteBoardHeader.lyteKanbanviewHeaderShadow {
  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.1);
}
.lyteBoardContainer {
  flex-grow: 1;
  overflow: auto;
}
.lyteKanbanNestedSortable {
  overflow: auto;
  height: 100%;
  box-sizing: border-box;
}
lyte-kanbanview .lyteBoardItemContentData {
  min-height: 50px;
  border-bottom: 1px solid #d6d6d6;
  background: #fff;
  padding: 15px;
  cursor: move;
  position: relative;
}
lyte-kanbanview .lyteBoardItemContentData:hover {
  background: #f5f5f5;
}
lyte-kanbanview .lyteBoardItemContentData.lyteSortablePlaceholder,
lyte-kanbanview .lyteBoardItemContentData.lyteSortablePlaceholder:hover {
  background: #f5f5f5;
  min-width: 100%;
}
lyte-kanbanview lyte-card-box {
  box-shadow: none;
  background: transparent;
}
lyte-kanbanview lyte-card-body {
  padding: 0;
}
.lyteKVLoadingHeaderPlaceholder,
.lyteKVLoadingPlaceholder {
  border: 1px solid #eee;
  border-radius: 3px;
  background: #f5f5f5;
}
.lyteKVLoadingPlaceholder {
  margin: 15px;
  height: 33%;
}
.lyteKVLoadingHeaderPlaceholder {
  margin: 15px 15px 0;
  height: 40px;
}
.lyteKanbanNoResultMsg {
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  color: #777;
  position: absolute;
  top: 50px;
  bottom: 0;
  width: 100%;
}
.lyteKanbanNoResultMsg.lyteHide {
  display: none;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-clock {
  display: inline-block;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  color: #333;
}
.lyteClkFrameOuter {
  display: inline-block;
  padding: 10px;
  border-radius: 50%;
  background: linear-gradient(#fff, #fff 35%, #f5f5f5 50%, #eee);
  box-shadow: 0 0 10px 0px rgba(0, 0, 0, 0.2);
}
.lyteClkFrameInner {
  width: 160px;
  height: 160px;
  border-radius: 50%;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  background: linear-gradient(#ddd, #eee 40%, #f5f5f5 60%, #fff);
}
.lyteClkAlogTik {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 1px;
  display: none;
}
.lyteClkTik126,
.lyteClkTik39 {
  border-top: 12px solid #bbb;
  border-bottom: 12px solid #bbb;
}
.lyteClkTik17,
.lyteClkTik28,
.lyteClkTik410,
.lyteClkTik511 {
  border-top: 4px solid #bbb;
  border-bottom: 4px solid #bbb;
}
.lyteClkTik17 {
  transform: rotate(30deg);
}
.lyteClkTik28 {
  transform: rotate(60deg);
}
.lyteClkTik39 {
  transform: rotate(90deg);
}
.lyteClkTik410 {
  transform: rotate(120deg);
}
.lyteClkTik511 {
  transform: rotate(150deg);
}
.lyteClkAlogDial {
  position: absolute;
  top: 0;
  bottom: 0;
  transform: rotate(0deg);
}
.lyteClockMidCircle {
  height: 15px;
  width: 15px;
  border-radius: 50%;
  background: #fff;
  z-index: 10;
  position: relative;
  box-shadow: 0 0 5px 2px rgba(0, 0, 0, 0.2);
}
.lyteClockHrDial {
  width: 5px;
  left: calc(50% - 2px);
}
.lyteClockMinDial {
  width: 3px;
  left: calc(50% - 1px);
}
.lyteClockSecDial {
  width: 1px;
  left: 50%;
}
.lyteClkHrDialElem,
.lyteClkMinDialElem,
.lyteClkSecDialElem {
  border-radius: 10px;
  position: absolute;
  bottom: 50%;
  background: #666;
  width: 100%;
}
.lyteClkHrDialElem {
  height: 30%;
}
.lyteClkMinDialElem {
  height: 40%;
}
.lyteClkSecDialElem {
  height: 50%;
  background: #f00;
}
.lyteClkWatch,
.lyteClkTimer {
  display: flex;
  font-size: 20px;
}
.lyteClkWatchColon,
.lyteClkTimerColon {
  margin: 0 5px;
}
.lyteClkWatchDefAMPM {
  margin-left: 5px;
}
.lyteClkWatchFrameAMPM {
  position: absolute;
  bottom: 30px;
  width: 100%;
  text-align: center;
  left: 0;
  font-size: 14px;
}
.lyteClkTimerDefLabel {
  font-size: 15px;
  color: #777;
}
.lyteClkTimerFrameBox {
  position: relative;
  padding-bottom: 20px;
}
.lyteClkTimerFrameLabel {
  font-size: 10px;
  text-transform: capitalize;
  position: absolute;
  bottom: 0;
  width: 100%;
  left: 0;
  text-align: center;
}
/*  Lyte Stop watch related code starts */
.lyteClockStopWatch {
  text-align: center;
  border: 1px solid #d6d6d6;
  border-radius: 5px;
}
.lyteClockStopWatch .lyteClkOuterDiv {
  margin: 20px 20px 0;
}
.lyteClockSwLapWrapper {
  border-top: 1px solid #d6d6d6;
}
.lyteClockSwWrap {
  font-size: 20px;
}
.lyteClockSwLap {
  display: flex;
  font-size: 16px;
  margin: 5px 0;
  border-bottom: 1px solid #d6d6d6;
  padding: 5px 0;
}
.lyteClockSwLap:last-child {
  border-bottom: 0;
}
.lyteClockSwLapLabel {
  margin-right: auto;
  padding: 0 20px;
}
.lyteClockSwLapTime {
  padding: 0 20px;
}
.lyteClockSwActionBtnWrap {
  display: flex;
  padding: 0 20px 15px;
}
.lyteClockSwActionBtn {
  width: 50px;
  height: 50px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: 14px;
  cursor: pointer;
  text-transform: capitalize;
  border-radius: 50%;
}
.lyteClockSWStart {
  border: 1px solid #5ba1e5;
  color: #5ba1e5;
}
.lyteClockSWStart:hover {
  background: #e6f3fd;
}
.lyteClockSWReset,
.lyteClockSWLap {
  border: 1px solid #666;
  color: #666;
  margin-left: auto;
}
.lyteClockSWReset:hover,
.lyteClockSWLap:hover {
  background: #eee;
}
.lyteClockSWPause {
  border: 1px solid #ec4844;
  color: #ec4844;
}
.lyteClockSWPause:hover {
  background: #ffe3e3;
}
.lyteClkTimerColon {
  display: none;
}
.lyteClkTimerBox + .lyteClkTimerColon {
  display: block;
}
.lyteClkTimerBox:last-of-type + .lyteClkTimerColon {
  display: none;
}
/*  Lyte Stop watch related code ends */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-avatar-navigator {
  display: flex;
  position: relative;
}
.lyteAvatarSetCont {
  position: relative;
  overflow: hidden;
  margin: 0 20px;
}
.lyteAvatarSet {
  display: flex;
  position: absolute;
  transform: translate(-10000px);
  right: 0;
}
.lyteAvatarArrowCont {
  width: 30px;
  height: 30px;
  border: 1px solid #ddd;
  border-radius: 50%;
  align-self: center;
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  background: #ccc;
}
.lyteAvatarArrowCont:hover {
  background: #aaa;
}
.lyteAvatarNextIcon,
.lyteAvatarPrevIcon {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -94px -109px;
  width: 9px;
  height: 11px;
  transform: rotate(180deg);
}
.lyteAvatarNextIcon {
  transform: rotate(0deg);
}
lyte-avatar-navigator-item {
  margin: 0 5px;
  border-radius: 50%;
  border: 2px solid transparent;
  cursor: pointer;
  position: relative;
  display: inline-flex;
}
lyte-avatar-navigator-item:hover {
  border: 2px solid #d6d6d6;
  box-shadow: 0 0 6px #d6d6d6;
}
.lyteAvatarSelectedItem:hover,
.lyteAvatarSelectedItem {
  border: 2px solid #5ba1e5;
  box-shadow: 0 0 6px #5ba1e5;
}
lyte-avatar-navigator-item img {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  object-fit: cover;
}
.lyteAvatarSlideAnim {
  transition: transform 0.3s ease-in-out;
}
.lyteAvatarLoadingCont {
  width: 100%;
  height: 100%;
  position: absolute;
  background: #f5f5f5;
  border-radius: 50%;
  overflow: hidden;
}
.lyteAvatarLoading {
  height: 200%;
  width: 200%;
  background: linear-gradient(to bottom left, #eee 0%, #ddd 25%, #eee 50%, #ddd 75%, #eee 100%);
  animation: lyteAvatarLoadAnim 1s linear infinite;
  position: absolute;
}
@keyframes lyteAvatarLoadAnim {
  0% {
    top: -100%;
    right: -100%;
  }
  100% {
    top: 0%;
    right: 0%;
  }
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
lyte-dual-listbox {
  display: block;
}
.lyteListboxToolbar {
  width: 60px;
  display: flex;
  flex-direction: column;
}
.lyteLBToolbarItems {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 30px;
  height: 30px;
  margin: 10px auto;
  border: 1px solid #d6d6d6;
  border-radius: 50%;
  cursor: pointer;
}
.lyteLBToolbarItems:hover {
  border: 1px solid #aaa;
}
.lyteLBTBMoveLeft::after,
.lyteLBTBMoveRight::after {
  content: '';
  border-top: 8px solid transparent;
  border-bottom: 8px solid transparent;
}
.lyteLBTBMoveLeft::after {
  border-right: 8px solid #555;
  transform: rotate(180deg) translateX(-1px);
}
.lyteLBTBMoveRight::after {
  border-left: 8px solid #555;
  transform: rotate(180deg) translateX(1px);
}
.lyteLBTBMoveUp::after,
.lyteLBTBMoveDown::after {
  content: '';
  border-left: 8px solid transparent;
  border-right: 8px solid transparent;
}
.lyteLBTBMoveUp::after {
  border-bottom: 8px solid #555;
  transform: translateY(-1px);
}
.lyteLBTBMoveDown::after {
  border-top: 8px solid #555;
  transform: translateY(1px);
}
.lyteLBTBDeleteMarked::after {
  content: '';
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -187px -38px;
  width: 11px;
  height: 13px;
}
.lyteLBTBDeleteMarked:hover::after {
  background-position: -209px -38px;
}
.lyteListboxWrapper {
  display: flex;
  height: inherit;
}
.lyteListboxLeftPanel,
.lyteListboxRightPanel {
  width: 280px;
  border: 1px solid #d6d6d6;
  border-radius: 2px;
  overflow: auto;
}
.ltListboxNoToolbor .lyteListboxLeftPanel {
  margin-left: 50px;
}
.lyteListBoxLeftParentElement,
.lyteListBoxRightParentElement {
  display: flex;
  align-items: center;
  position: relative;
}
.lyteListBoxSearch {
  display: flex;
}
.lyteListBoxLeftWrap,
.lyteListBoxRightWrap {
  cursor: pointer;
}
.sortable-element.lyteListBoxLeftWrap .lyteLBLeftActive,
.sortable-element.lyteListBoxRightWrap .lyteLBRightActive {
  cursor: move;
}
lyte-lb-add,
lyte-lb-remove {
  width: 12px;
  height: 12px;
  display: inline-block;
  visibility: hidden;
  position: relative;
  z-index: 5;
  margin-right: auto;
  cursor: pointer;
}
lyte-lb-remove::before,
lyte-lb-add::before,
lyte-lb-add::after {
  content: '';
  position: absolute;
  border-radius: 2px;
  background: #666;
}
lyte-lb-remove::before,
lyte-lb-add::before {
  width: 12px;
  height: 2px;
  top: calc(50% - 1px);
}
lyte-lb-add::after {
  height: 12px;
  width: 2px;
  left: calc(50% - 1px);
}
.lyteListBoxLeftElement,
.lyteListBoxRightElement {
  padding: 5px 25px 5px 15px;
  font-size: 15px;
  display: flex;
  align-items: center;
  color: #333;
}
.lyteListBoxLeftElement:hover,
.lyteListBoxRightElement:hover {
  background: #f5f5f5;
}
.lyteListBoxRequiredItem:hover,
.lyteLBDisabledElement .lyteListBoxLeftElement:hover,
.lyteLBoxDisabledParent .lyteListBoxLeftParentElement:hover {
  background: none;
}
.lyteLBLeftActive:hover,
.lyteLBRightActive:hover,
.lyteLBLeftActive,
.lyteLBRightActive {
  background: #f5f5f5;
  color: #111;
}
.lyteListBoxLeftElement:hover lyte-lb-add,
.lyteListBoxRightElement:hover lyte-lb-remove {
  visibility: visible;
}
.lyteLBoxDisabledParent .lyteListBoxLeftElement:hover lyte-lb-add,
.lyteLBDisabledElement .lyteListBoxLeftElement:hover lyte-lb-add {
  visibility: hidden;
}
.lyteLBLeftChildWrap,
.lyteLBRightChildWrap {
  transition: height 0.3s ease;
  overflow: hidden;
}
.lyteLBLeftChildWrap .lyteListBoxLeftElement,
.lyteLBRightChildWrap .lyteListBoxRightElement {
  padding-right: 40px;
}
.lyteListboxParentElementClose lyte-lb-collapse {
  transform: rotate(90deg);
}
lyte-lb-collapse {
  width: 10px;
  height: 10px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: transform 0.3s ease;
  position: absolute;
  right: 10px;
}
lyte-lb-collapse::before {
  content: '';
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-top: 4px solid #555;
}
.lyteListboxBadge {
  display: none;
  position: absolute;
  top: 0;
  right: 0;
  z-index: 5;
  transform: translateX(50%) translateY(-50%);
}
.lyteListboxBadge .lyteBadge {
  padding: 0;
  transform: translate(50%, -50%);
  right: 0;
  top: 0;
}
.lyteListboxBadge .lyteBadgeContent {
  padding: 3px 6px;
  border-radius: 10px;
  background: #f00;
  color: #fff;
  font-size: 13px;
  display: inline-block;
}
.lyteLBDisabledElement,
.lyteLBoxDisabledParent .lyteListBoxLeftParentElement {
  opacity: 0.5;
}
.lyteLBoxDisabledParent .lyteListBoxLeftParentElement,
.lyteLBDisabledElement .lyteListBoxLeftWrap {
  cursor: default;
}
.lyteLBDisabledElement .lyteLBoxDisabledParent .lyteListBoxLeftParentElement {
  opacity: 1;
}
.lyteLBLeftPanelDropZone {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  z-index: 10;
  background: #f6fad2;
}
.lyteLBLeftPanelDropZoneB {
  position: absolute;
  top: 5px;
  bottom: 5px;
  right: 5px;
  left: 5px;
  border: 1px dashed #57a5c6;
}
.lyteListBoxNoResultsFound {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  color: #fff;
}
lyte-signature {
  border: 1px solid black;
  display: block;
  position: relative;
}
lyte-signature canvas {
  width: 100%;
  height: 100%;
}
lyte-signature img {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteCropArea,
.displayImage,
.lyteCropBox {
  position: relative;
}
.lyteCropArea {
  background: #eee;
  direction: ltr;
}
.lyteCropBox {
  height: 100%;
  width: 100%;
  overflow: hidden;
}
.displayArea,
.displayImageDiv {
  position: absolute;
}
.lyteCropFixedImage {
  position: absolute;
  transform: rotate(0deg);
  left: 0;
  top: 0;
}
.lyteCropFixedDiv {
  height: 100%;
}
.lyteCropTopLeftCorner,
.lyteCropTopRightCorner,
.lyteCropBottomRightCorner,
.lyteCropBottomLeftCorner {
  width: 10px;
  height: 10px;
  background: #fff;
  z-index: 16;
  position: absolute;
}
.lyteCropTopLeftCorner {
  top: -5px;
  left: -5px;
  cursor: nwse-resize;
}
.lyteCropTopRightCorner {
  top: -5px;
  right: -5px;
  cursor: nesw-resize;
}
.lyteCropBottomRightCorner {
  bottom: -5px;
  right: -5px;
  cursor: nwse-resize;
}
.lyteCropBottomLeftCorner {
  bottom: -5px;
  left: -5px;
  cursor: nesw-resize;
}
.lyteCropTopEdge,
.lyteCropBottomEdge,
.lyteCropRightEdge,
.lyteCropLeftEdge {
  position: absolute;
  z-index: 15;
  display: flex;
}
.lyteCropTopEdge,
.lyteCropBottomEdge {
  left: 0;
  right: 0;
  height: 10px;
  justify-content: center;
  cursor: ns-resize;
}
.lyteCropRightEdge,
.lyteCropLeftEdge {
  top: 0;
  bottom: 0;
  width: 10px;
  align-items: center;
  cursor: ew-resize;
}
.lyteCropTopEdge {
  top: -5px;
}
.lyteCropBottomEdge {
  bottom: -5px;
}
.lyteCropRightEdge {
  right: -5px;
}
.lyteCropLeftEdge {
  left: -5px;
}
.lyteCropRightSpan,
.lyteCropLeftSpan,
.lyteCropBottomSpan,
.lyteCropTopSpan {
  width: 10px;
  height: 10px;
  background: #fff;
  pointer-events: none;
}
.lyteCropDivImage {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  overflow: hidden;
}
.lyteCropDivImageImg {
  position: absolute;
  z-index: 10;
}
.lyteCropCropper {
  background: rgba(255, 255, 255, 0.3);
  cursor: move;
  position: absolute;
  top: 0;
  left: 0;
}
.lyteCropOpacityDiv {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: #333;
  opacity: 0.9;
  transition: opacity 0.1s ease;
}
.lytecropVerGrid1,
.lytecropVerGrid2,
.lytecropHorGrid1,
.lytecropHorGrid2 {
  position: absolute;
  pointer-events: none;
  opacity: 0;
  z-index: 12;
  transition: opacity 0.3s ease;
}
.lytecropVerGrid1,
.lytecropVerGrid2 {
  border-right: 1px dashed #ccc;
  top: 0;
  bottom: 0;
}
.lytecropHorGrid1,
.lytecropHorGrid2 {
  border-top: 1px dashed #ccc;
  right: 0;
  left: 0;
}
.lytecropVerGrid1 {
  right: 33%;
}
.lytecropVerGrid2 {
  right: 66%;
}
.lytecropHorGrid1 {
  top: 33%;
}
.lytecropHorGrid2 {
  top: 66%;
}
.lytePSParent {
  width: 100%;
  height: 100%;
  position: relative;
  overflow: hidden;
}
.lytePSBackImage,
.lytePSFrontImage {
  position: absolute;
  pointer-events: none;
}
.lytePSFreezeLayer {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  background: #333;
  opacity: 0.5;
}
.lytePSvisualArea {
  position: absolute;
  overflow: hidden;
  border-radius: 10px;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.draggable-element {
  cursor: move;
}
.lyteSortableParent .lyteDraggablePlaceholder {
  background: #f6fad2;
  border: 1px solid #edf2c3;
  box-sizing: border-box;
}
.lyteSortableParent .lyteDraggableDisabledPlaceholder {
  background: #f5c7c7;
  border: 1px solid #f4a7a7;
  box-sizing: border-box;
}
.stopDefaultMove {
  touch-action: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
/*  Mentions Input Related CSS Begins   */
.lyteMIWrapper {
  width: 400px;
  position: relative;
  background: #fff;
  border-radius: 2px;
}
.lyteMIWrapper textarea {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  font-size: 15px;
  line-height: 22px;
  height: 40px;
  min-height: 40px;
  display: block;
  padding: 8px;
  color: #111;
  overflow: hidden;
  background: transparent;
  position: relative;
  outline: 0;
  resize: none;
  box-sizing: border-box;
}
.lyteMIWrapper textarea::placeholder {
  color: #777;
}
.lyteMIOffsetDiv {
  position: fixed;
  visibility: hidden;
  top: -9999px;
  left: -9999px;
}
.lyteMIDropdown {
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  display: none;
  background: #fff;
  border: 1px solid #d6d6d6;
  position: absolute;
  z-index: 1060;
  margin-top: -2px;
  border-radius: 0 0 2px 2px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  color: #111;
  box-sizing: border-box;
  overflow: auto;
}
.lyteMIDropdown ul {
  margin: 0;
  padding: 5px 0;
  max-height: 300px;
}
.lyteMIDropdown lyte-mentions-item {
  background: #fff;
  margin: 0;
  font-family: 'LatoRegular', 'Open Sans', sans-serif;
  overflow: hidden;
  cursor: pointer;
  white-space: nowrap;
  font-size: 14px;
  padding: 5px 10px;
  text-align: right;
  display: flex;
  align-items: center;
}
.lyteMIDropdown lyte-mentions-item img {
  width: 25px;
  height: 25px;
  border-radius: 50%;
  float: right;
  margin-left: 10px;
}
.lyteMIDropdown lyte-mentions-item em {
  font-weight: bold;
  font-style: normal;
}
.lyteMIDropdown lyte-mentions-item:hover,
.lyteMIDropdown lyte-mentions-item.lyteMIActive {
  background: #eaeaea;
}
.lyteMIDropdown lyte-mentions-item b {
  background: #ffff99;
  font-weight: normal;
}
.lyteMIDisplayBlock {
  display: block;
}
.lyteMIHide {
  visibility: hidden;
}
.lyteMIAddOverflow {
  overflow: auto;
}
.lyteMentions {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  padding: 8px;
  color: #fff;
  overflow: hidden;
  white-space: pre-wrap;
  word-wrap: break-word;
  text-align: right;
  line-height: 22px;
}
.lyteInput .lyteMentions {
  padding-right: 0;
}
.lyteMentionsNormalTextarea {
  top: 1px;
  left: 0;
}
.lyteMentionsNormalTextarea + textarea {
  border: 1px solid #d6d6d6;
  border-radius: 2px;
  width: 100%;
}
.lyteMentionsNormalTextarea + textarea:hover {
  border: 1px solid #c1c1c1;
}
.lyteMentionsNormalTextarea + textarea:focus {
  border: 1px solid #7fceef;
}
.lyteMentions .lyteMentionsInnerDiv {
  color: transparent;
  white-space: pre-wrap;
  position: relative;
}
.lyteMentions .lyteMentionsStrongDiv {
  font-weight: normal;
  background: #e9f4ff;
  padding: 2px 0;
  line-height: 16px;
}
.lyteMentionsCustomWrapper {
  position: absolute;
  top: -100px;
  left: -100px;
}
.lyteBodyWrapper {
  overflow: hidden;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/*  Mentions Input Related CSS ENDS   */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* Make changes to override predefined styles */
/* CSS Common for all scrollbars */
.lyteScrollBar {
  overflow: hidden !important;
  position: relative !important;
  width: 100%;
  height: 100%;
  outline: none;
  box-sizing: border-box;
  overflow-anchor: none;
  -ms-overflow-style: none;
}
.lyteScrollContainer {
  position: absolute;
  border-radius: 4px;
  z-index: 1000;
}
.lyteScrollContainer:hover,
.lyteScrollingY > .lyteScrollContainerY,
.lyteScrollingX > .lyteScrollContainerX {
  background: #eee;
  opacity: 0.9;
}
.lyteScrollingY > .lyteScrollContainerY > .lyteScrollDiv,
.lyteScrollingX > .lyteScrollContainerX > .lyteScrollDiv,
.lyteScrollContainer .lyteScrollDiv:hover {
  background: #999;
}
.lyteScrollContainer.lyteScrollContainerY {
  width: 8px;
  top: 0px;
  bottom: 0px;
  left: 0px;
  right: auto;
}
.lyteScrollContainer.lyteScrollContainerX {
  height: 8px;
  top: auto;
  bottom: 0px;
  left: 0px;
  right: 0px;
}
.lyteScrollContainer .lyteScrollDiv {
  background: #aaa;
  position: relative;
  border-radius: 5px;
}
.lyteScrollContainerY .lyteScrollDiv {
  width: 100%;
}
.lyteScrollContainerX .lyteScrollDiv {
  height: 100%;
}
.lyteScrollContainer.lyteScrollContainerX.top {
  top: 0px;
  bottom: auto;
}
.lyteScrollContainer.lyteScrollContainerY.left {
  right: 0px;
  left: auto;
}
@supports (-ms-overflow-style: none) {
  .lyteScrollBar {
    overflow: auto !important;
  }
}
@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {
  .lyteScrollBar {
    overflow: auto !important;
  }
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Make preferred css changes over here.
 * This will be added to the end of the styles/scrollbar.less file
 */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* searchplugin Styles */
.lyteSearchHidden {
  display: none !important;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
.lyteSelectionWrapperBox {
  position: relative;
  overflow: hidden;
}
.lyteSelectionBox {
  position: absolute;
  background: red;
  cursor: move;
  border: 1px solid #fff;
  z-index: 10;
}
.lyteSelectorActiveBox {
  z-index: 15;
  border: 1px solid #5ba1e5;
}
.lyteSelectionFreezeLayer {
  position: absolute;
  margin: auto;
  user-select: none;
  background: #000;
  opacity: 0.3;
  cursor: crosshair;
}
.lyteSelectorHandles {
  width: 8px;
  height: 8px;
  background: #fff;
  position: absolute;
  display: none;
  border: 1px solid #5ba1e5;
}
.lyteTLCorner {
  top: -5px;
  left: -5px;
  cursor: nwse-resize;
}
.lyteTRCorner {
  top: -5px;
  right: -5px;
  cursor: nesw-resize;
}
.lyteBRCorner {
  bottom: -5px;
  right: -5px;
  cursor: nwse-resize;
}
.lyteBLCorner {
  bottom: -5px;
  left: -5px;
  cursor: nesw-resize;
}
.lyteTEdge {
  top: -5px;
  left: calc(50% - 5px);
  cursor: ns-resize;
}
.lyteBEdge {
  bottom: -5px;
  left: calc(50% - 5px);
  cursor: ns-resize;
}
.lyteREdge {
  right: -5px;
  top: calc(50% - 5px);
  cursor: ew-resize;
}
.lyteLEdge {
  left: -5px;
  top: calc(50% - 5px);
  cursor: ew-resize;
}
.lyteSelectorDeleteBtn {
  position: absolute;
  width: 15px;
  height: 15px;
  top: -18px;
  left: -18px;
  display: none;
  cursor: pointer;
  border-radius: 50%;
  background: #fff;
  padding: 1px;
}
.lyteSelectorDeleteBtn::after {
  content: '';
  display: block;
  background-image: url(../../images/sprite_lyte.svg);
  background-position: -187px -38px;
  width: 11px;
  height: 13px;
  margin: 1px auto;
}
.lyteSelectorDeleteBtn:hover::after {
  background-position: -209px -38px;
}
.lyteSelectorWorkArea {
  position: absolute;
  display: none;
}
.lyteSelectorActiveBox .lyteSelectorHandles,
.lyteSelectorActiveBox .lyteSelectorDeleteBtn,
.lyteSelectorActiveBox .lyteSelectorWorkArea {
  display: block;
}
.lyteSelectorLabel {
  position: absolute;
  width: 100%;
  color: #fff;
  font-size: 14px;
}
.lyteSelectorLabelTop {
  top: -20px;
}
.lyteSelectorLabelBottom {
  bottom: -20px;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteSortableParent .lyteSortablePlaceholder:hover,
.lyteSortableParent .lyteSortablePlaceholder {
  background: #f6fad2;
  border: 1px solid #edf2c3;
  box-sizing: border-box;
}
.lyteSortableParent .lyteSortableDisabledPlaceholder:hover,
.lyteSortableParent .lyteSortableDisabledPlaceholder {
  background: #f5c7c7;
  border: 1px solid #f4a7a7;
}
.nullifyTransition {
  transition-duration: 0s;
}
.lyteSortableDisablePE {
  pointer-events: none;
}
.lyteSortableDummyTr {
  opacity: 0 !important;
  box-sizing: border-box !important;
  pointer-events: none !important;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading final tweaks to your variables */
.lyteFindHighlight {
  background: #ff0;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
.lyteResizeElement {
  position: relative;
}
.lyteResizeHandle {
  position: absolute;
  width: 8px;
  height: 8px;
  background: #5ba1e5;
  transform: translate(-50%, -50%);
  display: none;
}
.lyteResizeSelected .lyteResizeHandle {
  display: block;
}
.lyteResizeN {
  top: 0;
  left: 50%;
  cursor: ns-resize;
}
.lyteResizeNW {
  top: 0;
  left: 0%;
  cursor: nwse-resize;
}
.lyteResizeNE {
  top: 0;
  left: 100%;
  cursor: nesw-resize;
}
.lyteResizeS {
  left: 50%;
  top: 100%;
  cursor: ns-resize;
}
.lyteResizeSW {
  left: 0%;
  top: 100%;
  cursor: nesw-resize;
}
.lyteResizeSE {
  left: 100%;
  top: 100%;
  cursor: nwse-resize;
}
.lyteResizeW {
  left: 0;
  top: 50%;
  cursor: ew-resize;
}
.lyteResizeE {
  left: 100%;
  top: 50%;
  cursor: ew-resize;
}
.lyteResizeInfoDiv {
  position: absolute;
  display: block;
  border: 1px solid #d6d6d6;
  padding: 8px;
  pointer-events: none;
}
.lyteRadioBtnGroupHorizontal {
  display: flex;
  flex-direction: row;
}
.lyteRadioBtnGroupVertical {
  display: flex;
  flex-direction: column;
}
.lyteCBoxGroupHorizontal {
  display: flex;
  flex-direction: row;
}
.lyteCBoxGroupVertical {
  display: flex;
  flex-direction: column;
}
/* Default theme imported */
/* Loading theme in configuration */
/* rtl files loading */
/* Loading custom themes */
/* tag styles BEGINS */
lyte-tag {
  position: relative;
  display: block;
}
lyte-tag-label {
  padding-bottom: 5px;
}
lyte-tag lyte-dropdown {
  width: 100%;
  display: inline-block;
}
lyte-tag-description {
  opacity: 0.4;
  font-size: 13px;
  white-space: nowrap;
}
.lyteTagDropdown lyte-drop-item {
  padding-right: 10px;
  display: flex;
  flex-direction: column;
}
.lyteTagDropdown lyte-drop-item.lyteDropdownActive {
  display: none;
}
lyte-tag lyte-dropdown .lyteTagInputLi {
  background: #fff;
  border: 0;
  padding: 0;
  margin: 0;
  width: auto;
  max-width: 100%;
}
lyte-tag lyte-dropdown .lyteTagInputLi input {
  max-width: 100%;
}
lyte-tag .lyteTagItem {
  display: block;
  max-width: 100%;
  -ms-word-wrap: break-word;
  overflow-wrap: break-word;
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}
lyte-tag .lyteTagRemoveIcon lyte-drop-button::after {
  display: none;
}
.lyteTagDropdown .lyteTagHidden {
  display: none;
}
/* import theme overrides - styles */
/* import custom css - final tweaks by the user */
/* tag styles ENDS */
